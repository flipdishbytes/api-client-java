/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.RestApiArrayResultApmCurrencyDataPoint;
import com.flipdish.apiclient.model.RestApiArrayResultApmDataPoint;
import com.flipdish.apiclient.model.RestApiArrayResultApmHourlyDataPoint;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultPhoneCall;
import com.flipdish.apiclient.model.RestApiResultApmStatistics;
import com.flipdish.apiclient.model.RestApiResultApmStatus;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApmApi
 */
@Ignore
public class ApmApiTest {

    private final ApmApi api = new ApmApi();

    
    /**
     * [PRIVATE API] Returns true if APM is enabled on at least one store in an application
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApmStatusTest() throws ApiException {
        String appId = null;
        RestApiResultApmStatus response = api.getApmStatus(appId);

        // TODO: test validations
    }
    
    /**
     * [PRIVATE API] Get Basic Statistics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBasicStatisticsTest() throws ApiException {
        String appId = null;
        List<Integer> storeId = null;
        RestApiResultApmStatistics response = api.getBasicStatistics(appId, storeId);

        // TODO: test validations
    }
    
    /**
     * [PRIVATE API] Get Calendar statistics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCalendarWeekStatisticsTest() throws ApiException {
        String appId = null;
        List<Integer> storeId = null;
        RestApiArrayResultApmHourlyDataPoint response = api.getCalendarWeekStatistics(appId, storeId);

        // TODO: test validations
    }
    
    /**
     * [PRIVATE API] Get Calls Statistics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCallsStatisticsTest() throws ApiException {
        String appId = null;
        String aggregateDataBy = null;
        Integer dataPointLimit = null;
        List<Integer> storeId = null;
        RestApiArrayResultApmDataPoint response = api.getCallsStatistics(appId, aggregateDataBy, dataPointLimit, storeId);

        // TODO: test validations
    }
    
    /**
     * [PRIVATE API] Get Order Statistics (Value of Orders)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderStatisticsTest() throws ApiException {
        String appId = null;
        String aggregateDataBy = null;
        Integer dataPointLimit = null;
        List<Integer> storeId = null;
        RestApiArrayResultApmCurrencyDataPoint response = api.getOrderStatistics(appId, aggregateDataBy, dataPointLimit, storeId);

        // TODO: test validations
    }
    
    /**
     * [PRIVATE API] Get paginated APM call list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaginatedCallListTest() throws ApiException {
        String appId = null;
        Integer page = null;
        Integer limit = null;
        List<Integer> storeId = null;
        RestApiPaginationResultPhoneCall response = api.getPaginatedCallList(appId, page, limit, storeId);

        // TODO: test validations
    }
    
}
