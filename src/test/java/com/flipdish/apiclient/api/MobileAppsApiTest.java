/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.AppConfigSalesChannel;
import java.io.File;
import com.flipdish.apiclient.model.MobileAppConfig;
import com.flipdish.apiclient.model.MobileAppsSubmission;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResult;
import com.flipdish.apiclient.model.RestApiResultAppConfigSalesChannel;
import com.flipdish.apiclient.model.RestApiResultMobileAppsDetails;
import com.flipdish.apiclient.model.RestApiResultMobileAppsImage;
import com.flipdish.apiclient.model.RestApiResultMobileAppsSubmission;
import com.flipdish.apiclient.model.RestApiResultMobileAppsSubmissionStatus;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MobileAppsApi
 */
@Ignore
public class MobileAppsApiTest {

    private final MobileAppsApi api = new MobileAppsApi();

    
    /**
     * Submission form mobile apps
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editAppConfigSalesChannelTest() throws ApiException {
        String appId = null;
        MobileAppsSubmission mobileAppsSubmission = null;
        RestApiResultMobileAppsSubmission response = api.editAppConfigSalesChannel(appId, mobileAppsSubmission);

        // TODO: test validations
    }
    
    /**
     * Set the application sales channel configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editAppConfigSalesChannel_0Test() throws ApiException {
        String appId = null;
        AppConfigSalesChannel appConfigSalesChannel = null;
        RestApiResultAppConfigSalesChannel response = api.editAppConfigSalesChannel_0(appId, appConfigSalesChannel);

        // TODO: test validations
    }
    
    /**
     * Get mobile app configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppConfigTest() throws ApiException {
        String appId = null;
        RestApiResultMobileAppsDetails response = api.getAppConfig(appId);

        // TODO: test validations
    }
    
    /**
     * Get mobile app details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDetailsTest() throws ApiException {
        String appId = null;
        RestApiResultMobileAppsDetails response = api.getAppDetails(appId);

        // TODO: test validations
    }
    
    /**
     * Get mobile app submitted status
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMobileAppsSubmissionStatusTest() throws ApiException {
        String appId = null;
        String plataformType = null;
        RestApiResultMobileAppsSubmissionStatus response = api.getMobileAppsSubmissionStatus(appId, plataformType);

        // TODO: test validations
    }
    
    /**
     * Set mobile app configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setAppConfigTest() throws ApiException {
        String appId = null;
        MobileAppConfig configUpdate = null;
        RestApiResult response = api.setAppConfig(appId, configUpdate);

        // TODO: test validations
    }
    
    /**
     * Upload a Mobile Apps Image
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMobileAppsImageTest() throws ApiException {
        String appId = null;
        File image = null;
        RestApiResultMobileAppsImage response = api.uploadMobileAppsImage(appId, image);

        // TODO: test validations
    }
    
}
