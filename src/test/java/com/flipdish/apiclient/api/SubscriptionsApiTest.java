/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.CardBase;
import com.flipdish.apiclient.model.CardWithToken;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultCard;
import com.flipdish.apiclient.model.RestApiResultSubscription;
import com.flipdish.apiclient.model.RestApiResultSubscriptionPlansResponse;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import com.flipdish.apiclient.model.SubscriptionBase;
import com.flipdish.apiclient.model.SubscriptionWithToken;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
@Ignore
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    
    /**
     * Cancel the subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsCancelSubscriptionTest() throws ApiException {
        Integer subscriptionId = null;
        Object response = api.subscriptionsCancelSubscription(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * Get the card linked to the subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsGetCardTest() throws ApiException {
        Integer subscriptionId = null;
        RestApiResultCard response = api.subscriptionsGetCard(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * Get avaialble plans for currency&#39;s user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsGetPlansByCurrencyTest() throws ApiException {
        RestApiResultSubscriptionPlansResponse response = api.subscriptionsGetPlansByCurrency();

        // TODO: test validations
    }
    
    /**
     * Get the subscription including the payment history
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsGetSubscriptionTest() throws ApiException {
        Integer subscriptionId = null;
        RestApiResultSubscription response = api.subscriptionsGetSubscription(subscriptionId);

        // TODO: test validations
    }
    
    /**
     * Get subscription by appId
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsGetUserSubscriptionByAppIdTest() throws ApiException {
        String appId = null;
        RestApiResultSubscription response = api.subscriptionsGetUserSubscriptionByAppId(appId);

        // TODO: test validations
    }
    
    /**
     * Add a new card and replace the old one
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsReplaceOldCardWithNewCardTest() throws ApiException {
        Integer subscriptionId = null;
        CardWithToken card = null;
        Object response = api.subscriptionsReplaceOldCardWithNewCard(subscriptionId, card);

        // TODO: test validations
    }
    
    /**
     * Create a new subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsSubscribeTest() throws ApiException {
        SubscriptionWithToken subscription = null;
        Object response = api.subscriptionsSubscribe(subscription);

        // TODO: test validations
    }
    
    /**
     * Update card expiring date
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsUpdateCardExpiringDateTest() throws ApiException {
        Integer subscriptionId = null;
        CardBase card = null;
        RestApiResultCard response = api.subscriptionsUpdateCardExpiringDate(subscriptionId, card);

        // TODO: test validations
    }
    
    /**
     * Update the subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscriptionsUpdateSubscriptionTest() throws ApiException {
        Integer subscriptionId = null;
        SubscriptionBase subscription = null;
        Object response = api.subscriptionsUpdateSubscription(subscriptionId, subscription);

        // TODO: test validations
    }
    
}
