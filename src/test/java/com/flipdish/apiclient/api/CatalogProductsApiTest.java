/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.model.CreateProduct;
import com.flipdish.apiclient.model.Product;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultProduct;
import com.flipdish.apiclient.model.RestApiResultProduct;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import com.flipdish.apiclient.model.UpdateProduct;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogProductsApi
 */
@Ignore
public class CatalogProductsApiTest {

    private final CatalogProductsApi api = new CatalogProductsApi();

    
    /**
     * Archive Product
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void archiveProductTest() throws Exception {
        String appId = null;
        String catalogItemId = null;
        api.archiveProduct(appId, catalogItemId);

        // TODO: test validations
    }
    
    /**
     * Create a Product
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createProductTest() throws Exception {
        String appId = null;
        CreateProduct createProduct = null;
        RestApiResultProduct response = api.createProduct(appId, createProduct);

        // TODO: test validations
    }
    
    /**
     * Duplicate Product
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void duplicateProductTest() throws Exception {
        String appId = null;
        String catalogItemId = null;
        api.duplicateProduct(appId, catalogItemId);

        // TODO: test validations
    }
    
    /**
     * Get Product by Id
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getProductByIdTest() throws Exception {
        String appId = null;
        String catalogItemId = null;
        Product response = api.getProductById(appId, catalogItemId);

        // TODO: test validations
    }
    
    /**
     * Get paginated products by app name id filtered by types
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getProductsTest() throws Exception {
        String appId = null;
        List<String> productTypes = null;
        String searchTerm = null;
        Integer page = null;
        Integer limit = null;
        RestApiPaginationResultProduct response = api.getProducts(appId, productTypes, searchTerm, page, limit);

        // TODO: test validations
    }
    
    /**
     * Update Product
     *
     * [BETA - this endpoint is under development, do not use it in your production system]
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateProductTest() throws Exception {
        String appId = null;
        String catalogItemId = null;
        UpdateProduct updateProduct = null;
        api.updateProduct(appId, catalogItemId, updateProduct);

        // TODO: test validations
    }
    
}
