/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.OAuthClient;
import com.flipdish.apiclient.model.RestApiArrayResultOAuthClient;
import com.flipdish.apiclient.model.RestApiArrayResultOauthClientRedirectUri;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultOAuthClient;
import com.flipdish.apiclient.model.RestApiResultOauthClientRedirectUri;
import com.flipdish.apiclient.model.RestApiStringResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OAuthClientsApi
 */
@Ignore
public class OAuthClientsApiTest {

    private final OAuthClientsApi api = new OAuthClientsApi();

    
    /**
     * Create OAuth client redirect uri
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRedirectUriTest() throws ApiException {
        String oAuthClientId = null;
        String uri = null;
        RestApiResultOauthClientRedirectUri response = api.addRedirectUri(oAuthClientId, uri);

        // TODO: test validations
    }
    
    /**
     * Create OAuth client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOAuthClientTest() throws ApiException {
        OAuthClient oAuthClient = null;
        api.createOAuthClient(oAuthClient);

        // TODO: test validations
    }
    
    /**
     * Delete OAuth client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOAuthClientTest() throws ApiException {
        String oAuthClientId = null;
        api.deleteOAuthClient(oAuthClientId);

        // TODO: test validations
    }
    
    /**
     * Get OAuth client by identifier
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthClientByClientIdTest() throws ApiException {
        String clientId = null;
        RestApiResultOAuthClient response = api.getOAuthClientByClientId(clientId);

        // TODO: test validations
    }
    
    /**
     * Get OAuth client secret key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthClientSecretTest() throws ApiException {
        String clientId = null;
        RestApiStringResult response = api.getOAuthClientSecret(clientId);

        // TODO: test validations
    }
    
    /**
     * Get all OAuth client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthClientsTest() throws ApiException {
        RestApiArrayResultOAuthClient response = api.getOAuthClients();

        // TODO: test validations
    }
    
    /**
     * Get OAuth access token for client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOauthAccessTokenTest() throws ApiException {
        String oAuthClientId = null;
        RestApiStringResult response = api.getOauthAccessToken(oAuthClientId);

        // TODO: test validations
    }
    
    /**
     * Get OAuth client redirect uris
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRedirectUrisTest() throws ApiException {
        String oAuthClientId = null;
        RestApiArrayResultOauthClientRedirectUri response = api.getRedirectUris(oAuthClientId);

        // TODO: test validations
    }
    
    /**
     * Delete OAuth client redirect uri
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeRedirectUriTest() throws ApiException {
        String oAuthClientId = null;
        Integer uriId = null;
        api.removeRedirectUri(oAuthClientId, uriId);

        // TODO: test validations
    }
    
}
