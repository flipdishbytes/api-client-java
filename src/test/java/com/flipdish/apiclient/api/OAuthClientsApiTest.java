/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.OAuthApp;
import com.flipdish.apiclient.model.RestApiArrayResultOAuthApp;
import com.flipdish.apiclient.model.RestApiArrayResultOauthClientRedirectUri;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultOAuthApp;
import com.flipdish.apiclient.model.RestApiResultOauthClientRedirectUri;
import com.flipdish.apiclient.model.RestApiStringResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OAuthClientsApi
 */
@Ignore
public class OAuthClientsApiTest {

    private final OAuthClientsApi api = new OAuthClientsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addRedirectUriTest() throws ApiException {
        String oauthAppId = null;
        String uri = null;
        String appId = null;
        RestApiResultOauthClientRedirectUri response = api.addRedirectUri(oauthAppId, uri, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOAuthAppTest() throws ApiException {
        OAuthApp oAuthApp = null;
        String appId = null;
        api.createOAuthApp(oAuthApp, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOAuthAppTest() throws ApiException {
        String oauthAppId = null;
        String appId = null;
        api.deleteOAuthApp(oauthAppId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthAppsTest() throws ApiException {
        String appId = null;
        String oauthAppName = null;
        RestApiArrayResultOAuthApp response = api.getOAuthApps(appId, oauthAppName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthClientByClientIdTest() throws ApiException {
        String oauthAppId = null;
        String appId = null;
        RestApiResultOAuthApp response = api.getOAuthClientByClientId(oauthAppId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOAuthClientSecretTest() throws ApiException {
        String oauthAppId = null;
        String appId = null;
        RestApiStringResult response = api.getOAuthClientSecret(oauthAppId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOauthAccessTokenTest() throws ApiException {
        String oauthAppId = null;
        String appId = null;
        RestApiStringResult response = api.getOauthAccessToken(oauthAppId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRedirectUrisTest() throws ApiException {
        String oauthAppId = null;
        String appId = null;
        RestApiArrayResultOauthClientRedirectUri response = api.getRedirectUris(oauthAppId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void oAuthClientsGetApplicationsTest() throws ApiException {
        String appId = null;
        Object response = api.oAuthClientsGetApplications(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeRedirectUriTest() throws ApiException {
        String oauthAppId = null;
        Integer uriId = null;
        String appId = null;
        api.removeRedirectUri(oauthAppId, uriId, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateOAuthAppTest() throws ApiException {
        String oauthAppId = null;
        OAuthApp oAuthApp = null;
        String appId = null;
        api.updateOAuthApp(oauthAppId, oAuthApp, appId);

        // TODO: test validations
    }
    
}
