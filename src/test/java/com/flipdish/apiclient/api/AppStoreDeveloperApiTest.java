/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.CreateAppStoreApp;
import java.io.File;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultAppStoreApp;
import com.flipdish.apiclient.model.RestApiStringResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import com.flipdish.apiclient.model.UpdateAppStoreApp;
import com.flipdish.apiclient.model.UpdateAppStoreAppExternalProduct;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppStoreDeveloperApi
 */
@Ignore
public class AppStoreDeveloperApiTest {

    private final AppStoreDeveloperApi api = new AppStoreDeveloperApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void appVerificationUpdateTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        String verificationStatus = null;
        api.appVerificationUpdate(oauthAppId, appStoreAppId, verificationStatus);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppStoreAppTest() throws ApiException {
        String oauthAppId = null;
        CreateAppStoreApp createAppStoreApp = null;
        RestApiResultAppStoreApp response = api.createAppStoreApp(oauthAppId, createAppStoreApp);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppStoreAppTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        RestApiStringResult response = api.deleteAppStoreApp(oauthAppId, appStoreAppId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppExternalProductTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        api.getAppExternalProduct(oauthAppId, appStoreAppId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExternalFunctionSigningKeyTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        RestApiErrorResult response = api.getExternalFunctionSigningKey(oauthAppId, appStoreAppId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAppStoreAppTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        UpdateAppStoreApp appStoreApp = null;
        api.updateAppStoreApp(oauthAppId, appStoreAppId, appStoreApp);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateExternalProductTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        UpdateAppStoreAppExternalProduct appStoreAppExternalProduct = null;
        api.updateExternalProduct(oauthAppId, appStoreAppId, appStoreAppExternalProduct);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadAppStoreAppLogoTest() throws ApiException {
        String oauthAppId = null;
        String appStoreAppId = null;
        File image = null;
        api.uploadAppStoreAppLogo(oauthAppId, appStoreAppId, image);

        // TODO: test validations
    }
    
}
