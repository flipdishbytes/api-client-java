/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.model.CreateLocation;
import com.flipdish.apiclient.model.RestApiArrayResultLocationAreaLocation;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultLocationAreaLocation;
import com.flipdish.apiclient.model.RestApiResultMappedLocation;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationApi
 */
@Ignore
public class LocationApiTest {

    private final LocationApi api = new LocationApi();

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createLocationTest() throws Exception {
        List<CreateLocation> createLocationInput = null;
        Integer locationAreaId = null;
        String appId = null;
        Integer storeId = null;
        Object response = api.createLocation(createLocationInput, locationAreaId, appId, storeId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteLocationTest() throws Exception {
        Integer locationId = null;
        Integer locationAreaId = null;
        String appId = null;
        Integer storeId = null;
        Object response = api.deleteLocation(locationId, locationAreaId, appId, storeId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void mapLocationToExternalIdTest() throws Exception {
        Integer locationId = null;
        Integer locationAreaId = null;
        String appId = null;
        Integer storeId = null;
        String externalLocationId = null;
        RestApiResultMappedLocation response = api.mapLocationToExternalId(locationId, locationAreaId, appId, storeId, externalLocationId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void moveLocationTest() throws Exception {
        Integer locationId = null;
        Integer locationAreaId = null;
        Integer newLocationAreaId = null;
        String appId = null;
        Integer storeId = null;
        Object response = api.moveLocation(locationId, locationAreaId, newLocationAreaId, appId, storeId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateLocationTest() throws Exception {
        CreateLocation updateLocationInput = null;
        Integer locationAreaId = null;
        Integer locationId = null;
        String appId = null;
        Integer storeId = null;
        RestApiResultLocationAreaLocation response = api.updateLocation(updateLocationInput, locationAreaId, locationId, appId, storeId);

        // TODO: test validations
    }
    
}
