/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.Response;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultChannel;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsApi
 */
@Ignore
public class ChannelsApiTest {

    private final ChannelsApi api = new ChannelsApi();

    
    /**
     * Assign a given AppId to a Sales Channel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignAppIdToSalesChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Object response = api.assignAppIdToSalesChannel(appId, channelId);

        // TODO: test validations
    }
    
    /**
     * Assign a Store to a Sales Channel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignStoreToChannelTest() throws ApiException {
        Integer storeId = null;
        String appId = null;
        Integer channelId = null;
        Object response = api.assignStoreToChannel(storeId, appId, channelId);

        // TODO: test validations
    }
    
    /**
     * Attachs the specified store to the given sales channel.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void attachStoreToSalesChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Integer storeId = null;
        Object response = api.attachStoreToSalesChannel(appId, channelId, storeId);

        // TODO: test validations
    }
    
    /**
     * Detaches all the stores from the given sales channel.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachAllStoresFromSalesChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Object response = api.detachAllStoresFromSalesChannel(appId, channelId);

        // TODO: test validations
    }
    
    /**
     * Detaches the specified store from the given sales channel.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void detachStoreFromSalesChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Integer storeId = null;
        Object response = api.detachStoreFromSalesChannel(appId, channelId, storeId);

        // TODO: test validations
    }
    
    /**
     * Returns a list of sales channels that are assigned to a given whitelabel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssignedChannelsTest() throws ApiException {
        String appId = null;
        Object response = api.getAssignedChannels(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelTest() throws ApiException {
        Integer id = null;
        String appId = null;
        RestApiPaginationResultChannel response = api.getChannel(id, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        String appId = null;
        RestApiPaginationResultChannel response = api.getChannels(appId);

        // TODO: test validations
    }
    
    /**
     * Returns a list of sales channels that are not yet assigned to a given whitelabel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotAssignedChannelsTest() throws ApiException {
        String appId = null;
        Object response = api.getNotAssignedChannels(appId);

        // TODO: test validations
    }
    
    /**
     * Returns a list of store that are assigned to the given sales channel.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStoresAssignedToChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Object response = api.getStoresAssignedToChannel(appId, channelId);

        // TODO: test validations
    }
    
    /**
     * Returns a list of store ids attached to the given channel type for the specified app.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStoresBySalesChannelTest() throws ApiException {
        String appId = null;
        Integer channelId = null;
        Response response = api.getStoresBySalesChannel(appId, channelId);

        // TODO: test validations
    }
    
}
