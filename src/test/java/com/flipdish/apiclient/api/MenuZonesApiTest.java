/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.HttpPostedFileBase;
import com.flipdish.apiclient.model.MenuZone;
import com.flipdish.apiclient.model.RestApiArrayResultMenuZone;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultMenuZone;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MenuZonesApi
 */
@Ignore
public class MenuZonesApiTest {

    private final MenuZonesApi api = new MenuZonesApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addMenuZoneTest() throws ApiException {
        Integer menuId = null;
        MenuZone menuZone = null;
        RestApiResultMenuZone response = api.addMenuZone(menuId, menuZone);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMenuZoneTest() throws ApiException {
        Integer menuZoneId = null;
        String menuId = null;
        api.deleteMenuZone(menuZoneId, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void flipMenuZonesTest() throws ApiException {
        Integer menuZoneId = null;
        Integer menuZoneI2 = null;
        String menuId = null;
        api.flipMenuZones(menuZoneId, menuZoneI2, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuZoneTest() throws ApiException {
        Integer menuId = null;
        Integer menuZoneId = null;
        RestApiResultMenuZone response = api.getMenuZone(menuId, menuZoneId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuZonesForMenuTest() throws ApiException {
        Integer menuId = null;
        RestApiArrayResultMenuZone response = api.getMenuZonesForMenu(menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMenuSectionMenuZoneTest() throws ApiException {
        Integer menuZoneId = null;
        String description = null;
        String menuId = null;
        api.setMenuSectionMenuZone(menuZoneId, description, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMenuSectionMenuZone_0Test() throws ApiException {
        Integer menuZoneId = null;
        Integer menuSectionId = null;
        String menuId = null;
        api.setMenuSectionMenuZone_0(menuZoneId, menuSectionId, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMenuZoneNameTest() throws ApiException {
        Integer menuZoneId = null;
        String menuZoneName = null;
        String menuId = null;
        api.setMenuZoneName(menuZoneId, menuZoneName, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMenuZoneTest() throws ApiException {
        Integer menuId = null;
        Integer menuZoneId = null;
        MenuZone menuZone = null;
        api.updateMenuZone(menuId, menuZoneId, menuZone);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMenuZoneImageTest() throws ApiException {
        Integer menuZoneId = null;
        List<HttpPostedFileBase> file = null;
        String menuId = null;
        api.uploadMenuZoneImage(menuZoneId, file, menuId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMenuZoneImage_0Test() throws ApiException {
        Integer menuZoneId = null;
        String menuId = null;
        api.uploadMenuZoneImage_0(menuZoneId, menuId);

        // TODO: test validations
    }
    
}
