/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.AppConfigUpdateModel;
import com.flipdish.apiclient.model.AppLookup;
import com.flipdish.apiclient.model.AppSalesforceReferences;
import com.flipdish.apiclient.model.CreateAppParameters;
import java.io.File;
import com.flipdish.apiclient.model.Language;
import com.flipdish.apiclient.model.RestApiArrayResultSupportedCountry;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultApp;
import com.flipdish.apiclient.model.RestApiResultApp;
import com.flipdish.apiclient.model.RestApiResultAppCompliance;
import com.flipdish.apiclient.model.RestApiResultDnsRecordInformation;
import com.flipdish.apiclient.model.RestApiStringResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Ignore
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppTest() throws ApiException {
        CreateAppParameters parameters = null;
        RestApiStringResult response = api.createApp(parameters);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppTest() throws ApiException {
        String appId = null;
        RestApiResultApp response = api.getApp(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppHostnameStatusTest() throws ApiException {
        String appId = null;
        RestApiResultDnsRecordInformation response = api.getAppHostnameStatus(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppsTest() throws ApiException {
        String nameFilter = null;
        Integer page = null;
        Integer limit = null;
        RestApiPaginationResultApp response = api.getApps(nameFilter, page, limit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getComplianceTest() throws ApiException {
        String appId = null;
        RestApiResultAppCompliance response = api.getCompliance(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPanaceaVanityUrlTest() throws ApiException {
        String appId = null;
        RestApiStringResult response = api.getPanaceaVanityUrl(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSalesforceReferencesTest() throws ApiException {
        String appId = null;
        AppSalesforceReferences response = api.getSalesforceReferences(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSupportedCountriesTest() throws ApiException {
        RestApiArrayResultSupportedCountry response = api.getSupportedCountries();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void isPanaceaVanityUrlAvailableTest() throws ApiException {
        String vanityUrl = null;
        String appId = null;
        RestApiStringResult response = api.isPanaceaVanityUrlAvailable(vanityUrl, appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lookupByWhitelabelIdTest() throws ApiException {
        Integer whitelabelId = null;
        AppLookup response = api.lookupByWhitelabelId(whitelabelId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setAppConfigTest() throws ApiException {
        String appId = null;
        AppConfigUpdateModel appConfigUpdate = null;
        RestApiResultApp response = api.setAppConfig(appId, appConfigUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setAppHostnameTest() throws ApiException {
        String appId = null;
        String hostname = null;
        Boolean isEmbed = null;
        RestApiStringResult response = api.setAppHostname(appId, hostname, isEmbed);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setAppLanguagesTest() throws ApiException {
        String appId = null;
        List<Language> languages = null;
        RestApiResultApp response = api.setAppLanguages(appId, languages);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setAppStoreNameTest() throws ApiException {
        String appId = null;
        String appStoreName = null;
        api.setAppStoreName(appId, appStoreName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setComplianceTest() throws ApiException {
        String appId = null;
        String complianceType = null;
        RestApiResultAppCompliance response = api.setCompliance(appId, complianceType);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setPanaceaVanityUrlTest() throws ApiException {
        String appId = null;
        String vanityUrl = null;
        RestApiStringResult response = api.setPanaceaVanityUrl(appId, vanityUrl);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setSalesforceReferencesTest() throws ApiException {
        String appId = null;
        AppSalesforceReferences salesforceReferences = null;
        RestApiStringResult response = api.setSalesforceReferences(appId, salesforceReferences);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void toggleNextGenWebTest() throws ApiException {
        String appId = null;
        String hostname = null;
        String vanityUrl = null;
        Boolean isNextGenWeb = null;
        RestApiStringResult response = api.toggleNextGenWeb(appId, hostname, vanityUrl, isNextGenWeb);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadAppLogoTest() throws ApiException {
        String appId = null;
        File image = null;
        api.uploadAppLogo(appId, image);

        // TODO: test validations
    }
    
}
