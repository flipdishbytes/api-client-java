/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.RestApiArrayResultProcessingFeeConfig;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultProcessingFeeConfig;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import com.flipdish.apiclient.model.StoreFeeConfig;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StoreFeeConfigsApi
 */
@Ignore
public class StoreFeeConfigsApiTest {

    private final StoreFeeConfigsApi api = new StoreFeeConfigsApi();

    
    /**
     * Get processing fee configs by store identifier
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessingFeeConfigsByStoreIdTest() throws ApiException {
        Integer storeId = null;
        String appNameId = null;
        RestApiArrayResultProcessingFeeConfig response = api.getProcessingFeeConfigsByStoreId(storeId, appNameId);

        // TODO: test validations
    }
    
    /**
     * Get processing fee configs by store identifier and paymentAccountType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessingFeeConfigsByStoreIdAndPaymentAccountTypeTest() throws ApiException {
        Integer storeId = null;
        String paymentAccountType = null;
        String appNameId = null;
        RestApiResultProcessingFeeConfig response = api.getProcessingFeeConfigsByStoreIdAndPaymentAccountType(storeId, paymentAccountType, appNameId);

        // TODO: test validations
    }
    
    /**
     * Get Store feeConfig
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStoreFeeConfigTest() throws ApiException {
        Integer storeId = null;
        StoreFeeConfig response = api.getStoreFeeConfig(storeId);

        // TODO: test validations
    }
    
}
