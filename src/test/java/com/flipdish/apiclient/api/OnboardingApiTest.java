/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.model.OnboardingConfigUpdate;
import com.flipdish.apiclient.model.OnboardingItemUpdate;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OnboardingApi
 */
@Ignore
public class OnboardingApiTest {

    private final OnboardingApi api = new OnboardingApi();

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingGetOnboardingConfigTest() throws Exception {
        String appId = null;
        Object response = api.onboardingGetOnboardingConfig(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingGetOnboardingConfigsTest() throws Exception {
        String appId = null;
        Object response = api.onboardingGetOnboardingConfigs(appId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingGetOnboardingItemsTest() throws Exception {
        String appId = null;
        Integer storeId = null;
        Integer milestoneId = null;
        Object response = api.onboardingGetOnboardingItems(appId, storeId, milestoneId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingGetOnboardingItemsV2Test() throws Exception {
        String appId = null;
        Integer storeId = null;
        Integer milestoneId = null;
        Object response = api.onboardingGetOnboardingItemsV2(appId, storeId, milestoneId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingUpdateOnboardingConfigTest() throws Exception {
        String appId = null;
        OnboardingConfigUpdate configUpdate = null;
        Object response = api.onboardingUpdateOnboardingConfig(appId, configUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingUpdateOnboardingConfigByIdTest() throws Exception {
        String appId = null;
        Integer configId = null;
        OnboardingConfigUpdate configUpdate = null;
        Object response = api.onboardingUpdateOnboardingConfigById(appId, configId, configUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingUpdateOnboardingItemTest() throws Exception {
        String appId = null;
        Integer storeId = null;
        Integer onboardingItemId = null;
        OnboardingItemUpdate itemUpdate = null;
        Object response = api.onboardingUpdateOnboardingItem(appId, storeId, onboardingItemId, itemUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void onboardingUpdateOnboardingItemV2Test() throws Exception {
        String appId = null;
        Integer onboardingItemId = null;
        OnboardingItemUpdate itemUpdate = null;
        Integer storeId = null;
        Object response = api.onboardingUpdateOnboardingItemV2(appId, onboardingItemId, itemUpdate, storeId);

        // TODO: test validations
    }
    
}
