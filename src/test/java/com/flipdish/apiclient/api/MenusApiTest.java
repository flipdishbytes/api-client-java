/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import java.io.File;
import com.flipdish.apiclient.model.MenuBase;
import com.flipdish.apiclient.model.Metadata;
import com.flipdish.apiclient.model.RestApiArrayResultMetadata;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultMenu;
import com.flipdish.apiclient.model.RestApiResultMetadata;
import com.flipdish.apiclient.model.RestApiStringResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MenusApi
 */
@Ignore
public class MenusApiTest {

    private final MenusApi api = new MenusApi();

    
    /**
     * Delete menu image
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMenuImageTest() throws ApiException {
        Integer menuId = null;
        api.deleteMenuImage(menuId);

        // TODO: test validations
    }
    
    /**
     * Delete menu item metadata
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMenuItemMetadataTest() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer menuItemId = null;
        String key = null;
        api.deleteMenuItemMetadata(menuId, storeId, menuItemId, key);

        // TODO: test validations
    }
    
    /**
     * Get menu by identifier
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuByIdTest() throws ApiException {
        Integer menuId = null;
        RestApiResultMenu response = api.getMenuById(menuId);

        // TODO: test validations
    }
    
    /**
     * Get menu item metadata
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuItemMetadataTest() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer menuItemId = null;
        RestApiArrayResultMetadata response = api.getMenuItemMetadata(menuId, storeId, menuItemId);

        // TODO: test validations
    }
    
    /**
     * Get menu item metadata by key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuItemMetadata_0Test() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer menuItemId = null;
        String key = null;
        api.getMenuItemMetadata_0(menuId, storeId, menuItemId, key);

        // TODO: test validations
    }
    
    /**
     * Get menu item option set item metadata by key
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMenuItemOptionSetItemMetadataTest() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer optionSetItemId = null;
        RestApiResultMetadata response = api.getMenuItemOptionSetItemMetadata(menuId, storeId, optionSetItemId);

        // TODO: test validations
    }
    
    /**
     * Update menu item metadata
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMenuItemMetadataTest() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer menuItemId = null;
        Metadata metadata = null;
        api.setMenuItemMetadata(menuId, storeId, menuItemId, metadata);

        // TODO: test validations
    }
    
    /**
     * Update menu item option set item metadata
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMenuItemOptionSetItemMetadataTest() throws ApiException {
        Integer menuId = null;
        Integer storeId = null;
        Integer optionSetItemId = null;
        Metadata metadata = null;
        api.setMenuItemOptionSetItemMetadata(menuId, storeId, optionSetItemId, metadata);

        // TODO: test validations
    }
    
    /**
     * Update menu
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMenuTest() throws ApiException {
        Integer menuId = null;
        MenuBase menu = null;
        api.updateMenu(menuId, menu);

        // TODO: test validations
    }
    
    /**
     * Upload menu image
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMenuImageTest() throws ApiException {
        Integer menuId = null;
        File image = null;
        RestApiStringResult response = api.uploadMenuImage(menuId, image);

        // TODO: test validations
    }
    
}
