/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.model.ItemNutritionInfoAddUpdateModel;
import com.flipdish.apiclient.model.RestApiArrayResultAllergen;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiResultMenuNutritionInfoHeader;
import com.flipdish.apiclient.model.RestApiResultNutritionInfo;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MenusNutritionInfoApi
 */
@Ignore
public class MenusNutritionInfoApiTest {

    private final MenusNutritionInfoApi api = new MenusNutritionInfoApi();

    
    /**
     * Add or update menuitem nutrition info by menu item&#39;s publicId
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateMenuItemNutritionInfoTest() throws Exception {
        Integer menuId = null;
        String publicId = null;
        ItemNutritionInfoAddUpdateModel addOrUpdateModel = null;
        RestApiResultMenuNutritionInfoHeader response = api.addOrUpdateMenuItemNutritionInfo(menuId, publicId, addOrUpdateModel);

        // TODO: test validations
    }
    
    /**
     * Add or update menuitem optionsetitem nutrition info its publicId
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateMenuItemOptionSetItemNutritionInfoTest() throws Exception {
        Integer menuId = null;
        UUID publicId = null;
        ItemNutritionInfoAddUpdateModel addOrUpdateModel = null;
        RestApiResultMenuNutritionInfoHeader response = api.addOrUpdateMenuItemOptionSetItemNutritionInfo(menuId, publicId, addOrUpdateModel);

        // TODO: test validations
    }
    
    /**
     * Add or update menu nutrition by identifier
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateMenuNutritionInfoByMenuIdTest() throws Exception {
        Integer menuId = null;
        RestApiResultMenuNutritionInfoHeader response = api.addOrUpdateMenuNutritionInfoByMenuId(menuId);

        // TODO: test validations
    }
    
    /**
     * Delete menu nutrition information by menuId
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteMenuNutritionInfoByMenuIdTest() throws Exception {
        Integer menuId = null;
        Object response = api.deleteMenuNutritionInfoByMenuId(menuId);

        // TODO: test validations
    }
    
    /**
     * Get allergens
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllergensTest() throws Exception {
        String appId = null;
        String languageId = null;
        RestApiArrayResultAllergen response = api.getAllergens(appId, languageId);

        // TODO: test validations
    }
    
    /**
     * Get menu nutrition by menuId
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMenuNutritionInfoByMenuIdTest() throws Exception {
        Integer menuId = null;
        RestApiResultNutritionInfo response = api.getMenuNutritionInfoByMenuId(menuId);

        // TODO: test validations
    }
    
}
