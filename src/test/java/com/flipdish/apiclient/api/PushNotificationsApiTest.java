/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.ApiException;
import com.flipdish.apiclient.model.PushNotificationRequest;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultPushNotificationResponse;
import com.flipdish.apiclient.model.RestApiResultPushNotificationResponse;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PushNotificationsApi
 */
@Ignore
public class PushNotificationsApiTest {

    private final PushNotificationsApi api = new PushNotificationsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePushNotificationTest() throws ApiException {
        String appId = null;
        Integer scheduledPushNotificationId = null;
        api.deletePushNotification(appId, scheduledPushNotificationId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPushNotificationsTest() throws ApiException {
        String appId = null;
        Integer page = null;
        Integer limit = null;
        RestApiPaginationResultPushNotificationResponse response = api.getPushNotifications(appId, page, limit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void schedulePushNotificationTest() throws ApiException {
        String appId = null;
        PushNotificationRequest notification = null;
        RestApiResultPushNotificationResponse response = api.schedulePushNotification(appId, notification);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePushNotificationTest() throws ApiException {
        String appId = null;
        Integer scheduledPushNotificationId = null;
        PushNotificationRequest notification = null;
        RestApiResultPushNotificationResponse response = api.updatePushNotification(appId, scheduledPushNotificationId, notification);

        // TODO: test validations
    }
    
}
