/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import com.flipdish.apiclient.model.CreateVoucher;
import com.flipdish.apiclient.model.RestApiArrayResultVoucherDataPoint;
import com.flipdish.apiclient.model.RestApiArrayResultVoucherSummary;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiPaginationResultVoucherSummary;
import com.flipdish.apiclient.model.RestApiResultVoucher;
import com.flipdish.apiclient.model.RestApiResultVoucherWithStats;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import com.flipdish.apiclient.model.SetVoucherValidityPeriodsSimplifiedRequest;
import com.flipdish.apiclient.model.UpdateVoucher;
import com.flipdish.apiclient.model.UpdateVoucherUsage;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VouchersApi
 */
@Ignore
public class VouchersApiTest {

    private final VouchersApi api = new VouchersApi();

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createVoucherTest() throws Exception {
        String appId = null;
        CreateVoucher voucher = null;
        RestApiResultVoucherWithStats response = api.createVoucher(appId, voucher);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVoucherByCodeTest() throws Exception {
        String appId = null;
        String code = null;
        RestApiResultVoucher response = api.getVoucherByCode(appId, code);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVoucherByIdTest() throws Exception {
        Integer voucherId = null;
        RestApiResultVoucherWithStats response = api.getVoucherById(voucherId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVoucherStatsByIdTest() throws Exception {
        Integer voucherId = null;
        String aggregateDataBy = null;
        Integer dataPointLimit = null;
        RestApiArrayResultVoucherDataPoint response = api.getVoucherStatsById(voucherId, aggregateDataBy, dataPointLimit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVoucherValidityPeriodsTest() throws Exception {
        String appId = null;
        Integer voucherId = null;
        api.getVoucherValidityPeriods(appId, voucherId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVouchersTest() throws Exception {
        String appId = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        List<String> searchCodes = null;
        List<String> statusSearch = null;
        List<String> typeSearch = null;
        List<String> subTypeSearch = null;
        List<Integer> storeIds = null;
        List<String> channelRestrictions = null;
        RestApiPaginationResultVoucherSummary response = api.getVouchers(appId, pageIndex, pageSize, searchCodes, statusSearch, typeSearch, subTypeSearch, storeIds, channelRestrictions);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getVouchersByCustomerForAppTest() throws Exception {
        String appId = null;
        Integer customerId = null;
        RestApiArrayResultVoucherSummary response = api.getVouchersByCustomerForApp(appId, customerId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setVoucherValidityPeriodsSimplifiedTest() throws Exception {
        String appId = null;
        Integer voucherId = null;
        SetVoucherValidityPeriodsSimplifiedRequest request = null;
        api.setVoucherValidityPeriodsSimplified(appId, voucherId, request);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateVoucherTest() throws Exception {
        Integer voucherId = null;
        UpdateVoucher voucher = null;
        List<Integer> storeId = null;
        Integer percentValue = null;
        Double lumpValue = null;
        Double maxDiscountAmount = null;
        RestApiResultVoucherWithStats response = api.updateVoucher(voucherId, voucher, storeId, percentValue, lumpValue, maxDiscountAmount);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateVoucherUsageTest() throws Exception {
        String appId = null;
        Integer voucherId = null;
        UpdateVoucherUsage voucherUsage = null;
        api.updateVoucherUsage(appId, voucherId, voucherUsage);

        // TODO: test validations
    }
    
}
