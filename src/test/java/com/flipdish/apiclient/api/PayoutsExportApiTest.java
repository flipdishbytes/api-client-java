/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.api;

import org.threeten.bp.OffsetDateTime;
import com.flipdish.apiclient.model.RestApiErrorResult;
import com.flipdish.apiclient.model.RestApiForbiddenResult;
import com.flipdish.apiclient.model.RestApiUnauthorizedResult;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PayoutsExportApi
 */
@Ignore
public class PayoutsExportApiTest {

    private final PayoutsExportApi api = new PayoutsExportApi();

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutChargebacksTest() throws Exception {
        String appId = null;
        Integer bankAccountId = null;
        Integer payoutId = null;
        List<Integer> storeIds = null;
        String response = api.exportPayoutChargebacks(appId, bankAccountId, payoutId, storeIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutOrdersTest() throws Exception {
        String appId = null;
        Integer bankAccountId = null;
        Integer payoutId = null;
        List<Integer> storeIds = null;
        String response = api.exportPayoutOrders(appId, bankAccountId, payoutId, storeIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutOtherChargesTest() throws Exception {
        String appId = null;
        Integer bankAccountId = null;
        Integer payoutId = null;
        List<Integer> storeIds = null;
        String response = api.exportPayoutOtherCharges(appId, bankAccountId, payoutId, storeIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutRefundsTest() throws Exception {
        String appId = null;
        Integer bankAccountId = null;
        Integer payoutId = null;
        List<Integer> storeIds = null;
        String response = api.exportPayoutRefunds(appId, bankAccountId, payoutId, storeIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutStoresTest() throws Exception {
        String appId = null;
        Integer bankAccountId = null;
        Integer payoutId = null;
        List<Integer> storeIds = null;
        String response = api.exportPayoutStores(appId, bankAccountId, payoutId, storeIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void exportPayoutsTest() throws Exception {
        String appId = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<Integer> payoutRequestIdsBankAccountIds = null;
        List<String> payoutRequestIdsStates = null;
        String response = api.exportPayouts(appId, startDate, endDate, payoutRequestIdsBankAccountIds, payoutRequestIdsStates);

        // TODO: test validations
    }
    
}
