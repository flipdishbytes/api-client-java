/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Subscription plan
 */
@ApiModel(description = "Subscription plan")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-21T10:37:59.975Z")
public class SubscriptionPlan implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("SubscriptionPlanId")
  private Integer subscriptionPlanId = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Currency")
  private String currency = null;

  @SerializedName("Price")
  private Double price = null;

  /**
   * Interval billing for the subscription
   */
  @JsonAdapter(IntervalEnum.Adapter.class)
  public enum IntervalEnum {
    MONTHLY("Monthly"),
    
    YEARLY("Yearly");

    private String value;

    IntervalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntervalEnum fromValue(String text) {
      for (IntervalEnum b : IntervalEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IntervalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntervalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntervalEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IntervalEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Interval")
  private IntervalEnum interval = null;

  public SubscriptionPlan subscriptionPlanId(Integer subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
    return this;
  }

   /**
   * Subscription plan identifier
   * @return subscriptionPlanId
  **/
  @ApiModelProperty(value = "Subscription plan identifier")
  public Integer getSubscriptionPlanId() {
    return subscriptionPlanId;
  }

  public void setSubscriptionPlanId(Integer subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
  }

  public SubscriptionPlan name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the plan
   * @return name
  **/
  @ApiModelProperty(value = "Name of the plan")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SubscriptionPlan currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * ISO Currency
   * @return currency
  **/
  @ApiModelProperty(value = "ISO Currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SubscriptionPlan price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price for single unit
   * @return price
  **/
  @ApiModelProperty(value = "Price for single unit")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public SubscriptionPlan interval(IntervalEnum interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Interval billing for the subscription
   * @return interval
  **/
  @ApiModelProperty(value = "Interval billing for the subscription")
  public IntervalEnum getInterval() {
    return interval;
  }

  public void setInterval(IntervalEnum interval) {
    this.interval = interval;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionPlan subscriptionPlan = (SubscriptionPlan) o;
    return Objects.equals(this.subscriptionPlanId, subscriptionPlan.subscriptionPlanId) &&
        Objects.equals(this.name, subscriptionPlan.name) &&
        Objects.equals(this.currency, subscriptionPlan.currency) &&
        Objects.equals(this.price, subscriptionPlan.price) &&
        Objects.equals(this.interval, subscriptionPlan.interval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionPlanId, name, currency, price, interval);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionPlan {\n");
    
    sb.append("    subscriptionPlanId: ").append(toIndentedString(subscriptionPlanId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

