/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.flipdish.apiclient.model.AnalyticsClientEvent;
import com.flipdish.apiclient.model.CustomerConsentUpdatedEvent;
import com.flipdish.apiclient.model.CustomerCreatedEvent;
import com.flipdish.apiclient.model.CustomerUpdatedEvent;
import com.flipdish.apiclient.model.DeliveryZoneCreatedEvent;
import com.flipdish.apiclient.model.DeliveryZoneDeletedEvent;
import com.flipdish.apiclient.model.DeliveryZoneUpdatedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignCreatedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignDeletedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignUpdatedEvent;
import com.flipdish.apiclient.model.MenuCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetDeletedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemDeletedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemUpdatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetUpdatedEvent;
import com.flipdish.apiclient.model.MenuSectionCreatedEvent;
import com.flipdish.apiclient.model.MenuSectionDeletedEvent;
import com.flipdish.apiclient.model.MenuSectionItemCreatedEvent;
import com.flipdish.apiclient.model.MenuSectionItemDeletedEvent;
import com.flipdish.apiclient.model.MenuSectionItemUpdatedEvent;
import com.flipdish.apiclient.model.MenuSectionUpdatedEvent;
import com.flipdish.apiclient.model.MenuUpdatedEvent;
import com.flipdish.apiclient.model.OrderAcceptedEvent;
import com.flipdish.apiclient.model.OrderCreatedEvent;
import com.flipdish.apiclient.model.OrderRatingUpdatedEvent;
import com.flipdish.apiclient.model.OrderRefundedEvent;
import com.flipdish.apiclient.model.OrderRejectedEvent;
import com.flipdish.apiclient.model.OrderTipUpdatedEvent;
import com.flipdish.apiclient.model.PhoneCallEndedEvent;
import com.flipdish.apiclient.model.PhoneCallStartedEvent;
import com.flipdish.apiclient.model.PrinterAssignedToStoreEvent;
import com.flipdish.apiclient.model.PrinterTurnedOffEvent;
import com.flipdish.apiclient.model.PrinterTurnedOnEvent;
import com.flipdish.apiclient.model.PrinterUnassignedFromStoreEvent;
import com.flipdish.apiclient.model.RetentionCampaignCreatedEvent;
import com.flipdish.apiclient.model.RetentionCampaignDeletedEvent;
import com.flipdish.apiclient.model.RetentionCampaignUpdatedEvent;
import com.flipdish.apiclient.model.SmsReceivedEvent;
import com.flipdish.apiclient.model.StoreAddressUpdatedEvent;
import com.flipdish.apiclient.model.StoreBusinessHoursOverrideCreatedEvent;
import com.flipdish.apiclient.model.StoreBusinessHoursOverrideDeletedEvent;
import com.flipdish.apiclient.model.StoreCreatedEvent;
import com.flipdish.apiclient.model.StoreDeletedEvent;
import com.flipdish.apiclient.model.StoreGroupCreatedEvent;
import com.flipdish.apiclient.model.StoreGroupDeletedEvent;
import com.flipdish.apiclient.model.StoreGroupUpdatedEvent;
import com.flipdish.apiclient.model.StoreOpeningHoursUpdatedEvent;
import com.flipdish.apiclient.model.StoreUpdatedEvent;
import com.flipdish.apiclient.model.TeammateDeletedEvent;
import com.flipdish.apiclient.model.TeammateInviteAcceptedEvent;
import com.flipdish.apiclient.model.TeammateInviteSentEvent;
import com.flipdish.apiclient.model.TeammateUpdatedEvent;
import com.flipdish.apiclient.model.UserCreatedEvent;
import com.flipdish.apiclient.model.UserDeletedEvent;
import com.flipdish.apiclient.model.UserLoginEvent;
import com.flipdish.apiclient.model.UserUpdatedEvent;
import com.flipdish.apiclient.model.VoucherCreatedEvent;
import com.flipdish.apiclient.model.VoucherDeletedEvent;
import com.flipdish.apiclient.model.VoucherUpdatedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionCreatedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionDeletedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionUpdatedEvent;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-21T10:37:59.975Z")
public class EventSearchResult implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("AnalyticsClientEvent")
  private List<AnalyticsClientEvent> analyticsClientEvent = null;

  @SerializedName("OrderAcceptedEvent")
  private List<OrderAcceptedEvent> orderAcceptedEvent = null;

  @SerializedName("OrderCreatedEvent")
  private List<OrderCreatedEvent> orderCreatedEvent = null;

  @SerializedName("OrderRatingUpdatedEvent")
  private List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent = null;

  @SerializedName("OrderRefundedEvent")
  private List<OrderRefundedEvent> orderRefundedEvent = null;

  @SerializedName("OrderRejectedEvent")
  private List<OrderRejectedEvent> orderRejectedEvent = null;

  @SerializedName("OrderTipUpdatedEvent")
  private List<OrderTipUpdatedEvent> orderTipUpdatedEvent = null;

  @SerializedName("StoreCreatedEvent")
  private List<StoreCreatedEvent> storeCreatedEvent = null;

  @SerializedName("StoreDeletedEvent")
  private List<StoreDeletedEvent> storeDeletedEvent = null;

  @SerializedName("StoreAddressUpdatedEvent")
  private List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent = null;

  @SerializedName("DeliveryZoneCreatedEvent")
  private List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent = null;

  @SerializedName("DeliveryZoneUpdatedEvent")
  private List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent = null;

  @SerializedName("DeliveryZoneDeletedEvent")
  private List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent = null;

  @SerializedName("StoreOpeningHoursUpdatedEvent")
  private List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent = null;

  @SerializedName("StoreBusinessHoursOverrideCreatedEvent")
  private List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent = null;

  @SerializedName("StoreBusinessHoursOverrideDeletedEvent")
  private List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent = null;

  @SerializedName("StoreUpdatedEvent")
  private List<StoreUpdatedEvent> storeUpdatedEvent = null;

  @SerializedName("MenuCreatedEvent")
  private List<MenuCreatedEvent> menuCreatedEvent = null;

  @SerializedName("MenuUpdatedEvent")
  private List<MenuUpdatedEvent> menuUpdatedEvent = null;

  @SerializedName("MenuSectionCreatedEvent")
  private List<MenuSectionCreatedEvent> menuSectionCreatedEvent = null;

  @SerializedName("MenuSectionUpdatedEvent")
  private List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent = null;

  @SerializedName("MenuSectionDeletedEvent")
  private List<MenuSectionDeletedEvent> menuSectionDeletedEvent = null;

  @SerializedName("MenuSectionItemCreatedEvent")
  private List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent = null;

  @SerializedName("MenuSectionItemUpdatedEvent")
  private List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent = null;

  @SerializedName("MenuSectionItemDeletedEvent")
  private List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent = null;

  @SerializedName("MenuItemOptionSetCreatedEvent")
  private List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent = null;

  @SerializedName("MenuItemOptionSetUpdatedEvent")
  private List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent = null;

  @SerializedName("MenuItemOptionSetDeletedEvent")
  private List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent = null;

  @SerializedName("MenuItemOptionSetItemCreatedEvent")
  private List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent = null;

  @SerializedName("MenuItemOptionSetItemUpdatedEvent")
  private List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent = null;

  @SerializedName("MenuItemOptionSetItemDeletedEvent")
  private List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent = null;

  @SerializedName("StoreGroupCreatedEvent")
  private List<StoreGroupCreatedEvent> storeGroupCreatedEvent = null;

  @SerializedName("StoreGroupUpdatedEvent")
  private List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent = null;

  @SerializedName("StoreGroupDeletedEvent")
  private List<StoreGroupDeletedEvent> storeGroupDeletedEvent = null;

  @SerializedName("CustomerCreatedEvent")
  private List<CustomerCreatedEvent> customerCreatedEvent = null;

  @SerializedName("CustomerUpdatedEvent")
  private List<CustomerUpdatedEvent> customerUpdatedEvent = null;

  @SerializedName("CustomerConsentUpdatedEvent")
  private List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent = null;

  @SerializedName("WebhookSubscriptionCreatedEvent")
  private List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent = null;

  @SerializedName("WebhookSubscriptionUpdatedEvent")
  private List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent = null;

  @SerializedName("WebhookSubscriptionDeletedEvent")
  private List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent = null;

  @SerializedName("PrinterTurnedOnEvent")
  private List<PrinterTurnedOnEvent> printerTurnedOnEvent = null;

  @SerializedName("PrinterTurnedOffEvent")
  private List<PrinterTurnedOffEvent> printerTurnedOffEvent = null;

  @SerializedName("PrinterAssignedToStoreEvent")
  private List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent = null;

  @SerializedName("PrinterUnassignedFromStoreEvent")
  private List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent = null;

  @SerializedName("PhoneCallStartedEvent")
  private List<PhoneCallStartedEvent> phoneCallStartedEvent = null;

  @SerializedName("PhoneCallEndedEvent")
  private List<PhoneCallEndedEvent> phoneCallEndedEvent = null;

  @SerializedName("LoyaltyCampaignCreatedEvent")
  private List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent = null;

  @SerializedName("LoyaltyCampaignDeletedEvent")
  private List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent = null;

  @SerializedName("LoyaltyCampaignUpdatedEvent")
  private List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent = null;

  @SerializedName("RetentionCampaignCreatedEvent")
  private List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent = null;

  @SerializedName("RetentionCampaignDeletedEvent")
  private List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent = null;

  @SerializedName("RetentionCampaignUpdatedEvent")
  private List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent = null;

  @SerializedName("SmsReceivedEvent")
  private List<SmsReceivedEvent> smsReceivedEvent = null;

  @SerializedName("UserLoginEvent")
  private List<UserLoginEvent> userLoginEvent = null;

  @SerializedName("UserCreatedEvent")
  private List<UserCreatedEvent> userCreatedEvent = null;

  @SerializedName("UserUpdatedEvent")
  private List<UserUpdatedEvent> userUpdatedEvent = null;

  @SerializedName("UserDeletedEvent")
  private List<UserDeletedEvent> userDeletedEvent = null;

  @SerializedName("VoucherCreatedEvent")
  private List<VoucherCreatedEvent> voucherCreatedEvent = null;

  @SerializedName("VoucherUpdatedEvent")
  private List<VoucherUpdatedEvent> voucherUpdatedEvent = null;

  @SerializedName("VoucherDeletedEvent")
  private List<VoucherDeletedEvent> voucherDeletedEvent = null;

  @SerializedName("TeammateInviteSentEvent")
  private List<TeammateInviteSentEvent> teammateInviteSentEvent = null;

  @SerializedName("TeammateInviteAcceptedEvent")
  private List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent = null;

  @SerializedName("TeammateUpdatedEvent")
  private List<TeammateUpdatedEvent> teammateUpdatedEvent = null;

  @SerializedName("TeammateDeletedEvent")
  private List<TeammateDeletedEvent> teammateDeletedEvent = null;

  public EventSearchResult analyticsClientEvent(List<AnalyticsClientEvent> analyticsClientEvent) {
    this.analyticsClientEvent = analyticsClientEvent;
    return this;
  }

  public EventSearchResult addAnalyticsClientEventItem(AnalyticsClientEvent analyticsClientEventItem) {
    if (this.analyticsClientEvent == null) {
      this.analyticsClientEvent = new ArrayList<>();
    }
    this.analyticsClientEvent.add(analyticsClientEventItem);
    return this;
  }

   /**
   * Client Analytics events
   * @return analyticsClientEvent
  **/
  @ApiModelProperty(value = "Client Analytics events")
  public List<AnalyticsClientEvent> getAnalyticsClientEvent() {
    return analyticsClientEvent;
  }

  public void setAnalyticsClientEvent(List<AnalyticsClientEvent> analyticsClientEvent) {
    this.analyticsClientEvent = analyticsClientEvent;
  }

  public EventSearchResult orderAcceptedEvent(List<OrderAcceptedEvent> orderAcceptedEvent) {
    this.orderAcceptedEvent = orderAcceptedEvent;
    return this;
  }

  public EventSearchResult addOrderAcceptedEventItem(OrderAcceptedEvent orderAcceptedEventItem) {
    if (this.orderAcceptedEvent == null) {
      this.orderAcceptedEvent = new ArrayList<>();
    }
    this.orderAcceptedEvent.add(orderAcceptedEventItem);
    return this;
  }

   /**
   * Order accepted events
   * @return orderAcceptedEvent
  **/
  @ApiModelProperty(value = "Order accepted events")
  public List<OrderAcceptedEvent> getOrderAcceptedEvent() {
    return orderAcceptedEvent;
  }

  public void setOrderAcceptedEvent(List<OrderAcceptedEvent> orderAcceptedEvent) {
    this.orderAcceptedEvent = orderAcceptedEvent;
  }

  public EventSearchResult orderCreatedEvent(List<OrderCreatedEvent> orderCreatedEvent) {
    this.orderCreatedEvent = orderCreatedEvent;
    return this;
  }

  public EventSearchResult addOrderCreatedEventItem(OrderCreatedEvent orderCreatedEventItem) {
    if (this.orderCreatedEvent == null) {
      this.orderCreatedEvent = new ArrayList<>();
    }
    this.orderCreatedEvent.add(orderCreatedEventItem);
    return this;
  }

   /**
   * Order created events
   * @return orderCreatedEvent
  **/
  @ApiModelProperty(value = "Order created events")
  public List<OrderCreatedEvent> getOrderCreatedEvent() {
    return orderCreatedEvent;
  }

  public void setOrderCreatedEvent(List<OrderCreatedEvent> orderCreatedEvent) {
    this.orderCreatedEvent = orderCreatedEvent;
  }

  public EventSearchResult orderRatingUpdatedEvent(List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent) {
    this.orderRatingUpdatedEvent = orderRatingUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderRatingUpdatedEventItem(OrderRatingUpdatedEvent orderRatingUpdatedEventItem) {
    if (this.orderRatingUpdatedEvent == null) {
      this.orderRatingUpdatedEvent = new ArrayList<>();
    }
    this.orderRatingUpdatedEvent.add(orderRatingUpdatedEventItem);
    return this;
  }

   /**
   * Order rating updated events
   * @return orderRatingUpdatedEvent
  **/
  @ApiModelProperty(value = "Order rating updated events")
  public List<OrderRatingUpdatedEvent> getOrderRatingUpdatedEvent() {
    return orderRatingUpdatedEvent;
  }

  public void setOrderRatingUpdatedEvent(List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent) {
    this.orderRatingUpdatedEvent = orderRatingUpdatedEvent;
  }

  public EventSearchResult orderRefundedEvent(List<OrderRefundedEvent> orderRefundedEvent) {
    this.orderRefundedEvent = orderRefundedEvent;
    return this;
  }

  public EventSearchResult addOrderRefundedEventItem(OrderRefundedEvent orderRefundedEventItem) {
    if (this.orderRefundedEvent == null) {
      this.orderRefundedEvent = new ArrayList<>();
    }
    this.orderRefundedEvent.add(orderRefundedEventItem);
    return this;
  }

   /**
   * Order refunded events
   * @return orderRefundedEvent
  **/
  @ApiModelProperty(value = "Order refunded events")
  public List<OrderRefundedEvent> getOrderRefundedEvent() {
    return orderRefundedEvent;
  }

  public void setOrderRefundedEvent(List<OrderRefundedEvent> orderRefundedEvent) {
    this.orderRefundedEvent = orderRefundedEvent;
  }

  public EventSearchResult orderRejectedEvent(List<OrderRejectedEvent> orderRejectedEvent) {
    this.orderRejectedEvent = orderRejectedEvent;
    return this;
  }

  public EventSearchResult addOrderRejectedEventItem(OrderRejectedEvent orderRejectedEventItem) {
    if (this.orderRejectedEvent == null) {
      this.orderRejectedEvent = new ArrayList<>();
    }
    this.orderRejectedEvent.add(orderRejectedEventItem);
    return this;
  }

   /**
   * Order rejected events
   * @return orderRejectedEvent
  **/
  @ApiModelProperty(value = "Order rejected events")
  public List<OrderRejectedEvent> getOrderRejectedEvent() {
    return orderRejectedEvent;
  }

  public void setOrderRejectedEvent(List<OrderRejectedEvent> orderRejectedEvent) {
    this.orderRejectedEvent = orderRejectedEvent;
  }

  public EventSearchResult orderTipUpdatedEvent(List<OrderTipUpdatedEvent> orderTipUpdatedEvent) {
    this.orderTipUpdatedEvent = orderTipUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderTipUpdatedEventItem(OrderTipUpdatedEvent orderTipUpdatedEventItem) {
    if (this.orderTipUpdatedEvent == null) {
      this.orderTipUpdatedEvent = new ArrayList<>();
    }
    this.orderTipUpdatedEvent.add(orderTipUpdatedEventItem);
    return this;
  }

   /**
   * Order tip updated events
   * @return orderTipUpdatedEvent
  **/
  @ApiModelProperty(value = "Order tip updated events")
  public List<OrderTipUpdatedEvent> getOrderTipUpdatedEvent() {
    return orderTipUpdatedEvent;
  }

  public void setOrderTipUpdatedEvent(List<OrderTipUpdatedEvent> orderTipUpdatedEvent) {
    this.orderTipUpdatedEvent = orderTipUpdatedEvent;
  }

  public EventSearchResult storeCreatedEvent(List<StoreCreatedEvent> storeCreatedEvent) {
    this.storeCreatedEvent = storeCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreCreatedEventItem(StoreCreatedEvent storeCreatedEventItem) {
    if (this.storeCreatedEvent == null) {
      this.storeCreatedEvent = new ArrayList<>();
    }
    this.storeCreatedEvent.add(storeCreatedEventItem);
    return this;
  }

   /**
   * Store created events
   * @return storeCreatedEvent
  **/
  @ApiModelProperty(value = "Store created events")
  public List<StoreCreatedEvent> getStoreCreatedEvent() {
    return storeCreatedEvent;
  }

  public void setStoreCreatedEvent(List<StoreCreatedEvent> storeCreatedEvent) {
    this.storeCreatedEvent = storeCreatedEvent;
  }

  public EventSearchResult storeDeletedEvent(List<StoreDeletedEvent> storeDeletedEvent) {
    this.storeDeletedEvent = storeDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreDeletedEventItem(StoreDeletedEvent storeDeletedEventItem) {
    if (this.storeDeletedEvent == null) {
      this.storeDeletedEvent = new ArrayList<>();
    }
    this.storeDeletedEvent.add(storeDeletedEventItem);
    return this;
  }

   /**
   * Store deleted events
   * @return storeDeletedEvent
  **/
  @ApiModelProperty(value = "Store deleted events")
  public List<StoreDeletedEvent> getStoreDeletedEvent() {
    return storeDeletedEvent;
  }

  public void setStoreDeletedEvent(List<StoreDeletedEvent> storeDeletedEvent) {
    this.storeDeletedEvent = storeDeletedEvent;
  }

  public EventSearchResult storeAddressUpdatedEvent(List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent) {
    this.storeAddressUpdatedEvent = storeAddressUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreAddressUpdatedEventItem(StoreAddressUpdatedEvent storeAddressUpdatedEventItem) {
    if (this.storeAddressUpdatedEvent == null) {
      this.storeAddressUpdatedEvent = new ArrayList<>();
    }
    this.storeAddressUpdatedEvent.add(storeAddressUpdatedEventItem);
    return this;
  }

   /**
   * Store address updated events
   * @return storeAddressUpdatedEvent
  **/
  @ApiModelProperty(value = "Store address updated events")
  public List<StoreAddressUpdatedEvent> getStoreAddressUpdatedEvent() {
    return storeAddressUpdatedEvent;
  }

  public void setStoreAddressUpdatedEvent(List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent) {
    this.storeAddressUpdatedEvent = storeAddressUpdatedEvent;
  }

  public EventSearchResult deliveryZoneCreatedEvent(List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent) {
    this.deliveryZoneCreatedEvent = deliveryZoneCreatedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneCreatedEventItem(DeliveryZoneCreatedEvent deliveryZoneCreatedEventItem) {
    if (this.deliveryZoneCreatedEvent == null) {
      this.deliveryZoneCreatedEvent = new ArrayList<>();
    }
    this.deliveryZoneCreatedEvent.add(deliveryZoneCreatedEventItem);
    return this;
  }

   /**
   * Store delivery zone created events
   * @return deliveryZoneCreatedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone created events")
  public List<DeliveryZoneCreatedEvent> getDeliveryZoneCreatedEvent() {
    return deliveryZoneCreatedEvent;
  }

  public void setDeliveryZoneCreatedEvent(List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent) {
    this.deliveryZoneCreatedEvent = deliveryZoneCreatedEvent;
  }

  public EventSearchResult deliveryZoneUpdatedEvent(List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent) {
    this.deliveryZoneUpdatedEvent = deliveryZoneUpdatedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneUpdatedEventItem(DeliveryZoneUpdatedEvent deliveryZoneUpdatedEventItem) {
    if (this.deliveryZoneUpdatedEvent == null) {
      this.deliveryZoneUpdatedEvent = new ArrayList<>();
    }
    this.deliveryZoneUpdatedEvent.add(deliveryZoneUpdatedEventItem);
    return this;
  }

   /**
   * Store delivery zone updated events
   * @return deliveryZoneUpdatedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone updated events")
  public List<DeliveryZoneUpdatedEvent> getDeliveryZoneUpdatedEvent() {
    return deliveryZoneUpdatedEvent;
  }

  public void setDeliveryZoneUpdatedEvent(List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent) {
    this.deliveryZoneUpdatedEvent = deliveryZoneUpdatedEvent;
  }

  public EventSearchResult deliveryZoneDeletedEvent(List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent) {
    this.deliveryZoneDeletedEvent = deliveryZoneDeletedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneDeletedEventItem(DeliveryZoneDeletedEvent deliveryZoneDeletedEventItem) {
    if (this.deliveryZoneDeletedEvent == null) {
      this.deliveryZoneDeletedEvent = new ArrayList<>();
    }
    this.deliveryZoneDeletedEvent.add(deliveryZoneDeletedEventItem);
    return this;
  }

   /**
   * Store delivery zone deleted events
   * @return deliveryZoneDeletedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone deleted events")
  public List<DeliveryZoneDeletedEvent> getDeliveryZoneDeletedEvent() {
    return deliveryZoneDeletedEvent;
  }

  public void setDeliveryZoneDeletedEvent(List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent) {
    this.deliveryZoneDeletedEvent = deliveryZoneDeletedEvent;
  }

  public EventSearchResult storeOpeningHoursUpdatedEvent(List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent) {
    this.storeOpeningHoursUpdatedEvent = storeOpeningHoursUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreOpeningHoursUpdatedEventItem(StoreOpeningHoursUpdatedEvent storeOpeningHoursUpdatedEventItem) {
    if (this.storeOpeningHoursUpdatedEvent == null) {
      this.storeOpeningHoursUpdatedEvent = new ArrayList<>();
    }
    this.storeOpeningHoursUpdatedEvent.add(storeOpeningHoursUpdatedEventItem);
    return this;
  }

   /**
   * Store opening hours updated events
   * @return storeOpeningHoursUpdatedEvent
  **/
  @ApiModelProperty(value = "Store opening hours updated events")
  public List<StoreOpeningHoursUpdatedEvent> getStoreOpeningHoursUpdatedEvent() {
    return storeOpeningHoursUpdatedEvent;
  }

  public void setStoreOpeningHoursUpdatedEvent(List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent) {
    this.storeOpeningHoursUpdatedEvent = storeOpeningHoursUpdatedEvent;
  }

  public EventSearchResult storeBusinessHoursOverrideCreatedEvent(List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent) {
    this.storeBusinessHoursOverrideCreatedEvent = storeBusinessHoursOverrideCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreBusinessHoursOverrideCreatedEventItem(StoreBusinessHoursOverrideCreatedEvent storeBusinessHoursOverrideCreatedEventItem) {
    if (this.storeBusinessHoursOverrideCreatedEvent == null) {
      this.storeBusinessHoursOverrideCreatedEvent = new ArrayList<>();
    }
    this.storeBusinessHoursOverrideCreatedEvent.add(storeBusinessHoursOverrideCreatedEventItem);
    return this;
  }

   /**
   * Store business hours override created events
   * @return storeBusinessHoursOverrideCreatedEvent
  **/
  @ApiModelProperty(value = "Store business hours override created events")
  public List<StoreBusinessHoursOverrideCreatedEvent> getStoreBusinessHoursOverrideCreatedEvent() {
    return storeBusinessHoursOverrideCreatedEvent;
  }

  public void setStoreBusinessHoursOverrideCreatedEvent(List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent) {
    this.storeBusinessHoursOverrideCreatedEvent = storeBusinessHoursOverrideCreatedEvent;
  }

  public EventSearchResult storeBusinessHoursOverrideDeletedEvent(List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent) {
    this.storeBusinessHoursOverrideDeletedEvent = storeBusinessHoursOverrideDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreBusinessHoursOverrideDeletedEventItem(StoreBusinessHoursOverrideDeletedEvent storeBusinessHoursOverrideDeletedEventItem) {
    if (this.storeBusinessHoursOverrideDeletedEvent == null) {
      this.storeBusinessHoursOverrideDeletedEvent = new ArrayList<>();
    }
    this.storeBusinessHoursOverrideDeletedEvent.add(storeBusinessHoursOverrideDeletedEventItem);
    return this;
  }

   /**
   * Store business hours override deleted events
   * @return storeBusinessHoursOverrideDeletedEvent
  **/
  @ApiModelProperty(value = "Store business hours override deleted events")
  public List<StoreBusinessHoursOverrideDeletedEvent> getStoreBusinessHoursOverrideDeletedEvent() {
    return storeBusinessHoursOverrideDeletedEvent;
  }

  public void setStoreBusinessHoursOverrideDeletedEvent(List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent) {
    this.storeBusinessHoursOverrideDeletedEvent = storeBusinessHoursOverrideDeletedEvent;
  }

  public EventSearchResult storeUpdatedEvent(List<StoreUpdatedEvent> storeUpdatedEvent) {
    this.storeUpdatedEvent = storeUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreUpdatedEventItem(StoreUpdatedEvent storeUpdatedEventItem) {
    if (this.storeUpdatedEvent == null) {
      this.storeUpdatedEvent = new ArrayList<>();
    }
    this.storeUpdatedEvent.add(storeUpdatedEventItem);
    return this;
  }

   /**
   * Store updated events
   * @return storeUpdatedEvent
  **/
  @ApiModelProperty(value = "Store updated events")
  public List<StoreUpdatedEvent> getStoreUpdatedEvent() {
    return storeUpdatedEvent;
  }

  public void setStoreUpdatedEvent(List<StoreUpdatedEvent> storeUpdatedEvent) {
    this.storeUpdatedEvent = storeUpdatedEvent;
  }

  public EventSearchResult menuCreatedEvent(List<MenuCreatedEvent> menuCreatedEvent) {
    this.menuCreatedEvent = menuCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuCreatedEventItem(MenuCreatedEvent menuCreatedEventItem) {
    if (this.menuCreatedEvent == null) {
      this.menuCreatedEvent = new ArrayList<>();
    }
    this.menuCreatedEvent.add(menuCreatedEventItem);
    return this;
  }

   /**
   * Menu created events
   * @return menuCreatedEvent
  **/
  @ApiModelProperty(value = "Menu created events")
  public List<MenuCreatedEvent> getMenuCreatedEvent() {
    return menuCreatedEvent;
  }

  public void setMenuCreatedEvent(List<MenuCreatedEvent> menuCreatedEvent) {
    this.menuCreatedEvent = menuCreatedEvent;
  }

  public EventSearchResult menuUpdatedEvent(List<MenuUpdatedEvent> menuUpdatedEvent) {
    this.menuUpdatedEvent = menuUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuUpdatedEventItem(MenuUpdatedEvent menuUpdatedEventItem) {
    if (this.menuUpdatedEvent == null) {
      this.menuUpdatedEvent = new ArrayList<>();
    }
    this.menuUpdatedEvent.add(menuUpdatedEventItem);
    return this;
  }

   /**
   * Menu updated events
   * @return menuUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu updated events")
  public List<MenuUpdatedEvent> getMenuUpdatedEvent() {
    return menuUpdatedEvent;
  }

  public void setMenuUpdatedEvent(List<MenuUpdatedEvent> menuUpdatedEvent) {
    this.menuUpdatedEvent = menuUpdatedEvent;
  }

  public EventSearchResult menuSectionCreatedEvent(List<MenuSectionCreatedEvent> menuSectionCreatedEvent) {
    this.menuSectionCreatedEvent = menuSectionCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionCreatedEventItem(MenuSectionCreatedEvent menuSectionCreatedEventItem) {
    if (this.menuSectionCreatedEvent == null) {
      this.menuSectionCreatedEvent = new ArrayList<>();
    }
    this.menuSectionCreatedEvent.add(menuSectionCreatedEventItem);
    return this;
  }

   /**
   * Menu section created events
   * @return menuSectionCreatedEvent
  **/
  @ApiModelProperty(value = "Menu section created events")
  public List<MenuSectionCreatedEvent> getMenuSectionCreatedEvent() {
    return menuSectionCreatedEvent;
  }

  public void setMenuSectionCreatedEvent(List<MenuSectionCreatedEvent> menuSectionCreatedEvent) {
    this.menuSectionCreatedEvent = menuSectionCreatedEvent;
  }

  public EventSearchResult menuSectionUpdatedEvent(List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent) {
    this.menuSectionUpdatedEvent = menuSectionUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionUpdatedEventItem(MenuSectionUpdatedEvent menuSectionUpdatedEventItem) {
    if (this.menuSectionUpdatedEvent == null) {
      this.menuSectionUpdatedEvent = new ArrayList<>();
    }
    this.menuSectionUpdatedEvent.add(menuSectionUpdatedEventItem);
    return this;
  }

   /**
   * Menu section updated events
   * @return menuSectionUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu section updated events")
  public List<MenuSectionUpdatedEvent> getMenuSectionUpdatedEvent() {
    return menuSectionUpdatedEvent;
  }

  public void setMenuSectionUpdatedEvent(List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent) {
    this.menuSectionUpdatedEvent = menuSectionUpdatedEvent;
  }

  public EventSearchResult menuSectionDeletedEvent(List<MenuSectionDeletedEvent> menuSectionDeletedEvent) {
    this.menuSectionDeletedEvent = menuSectionDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionDeletedEventItem(MenuSectionDeletedEvent menuSectionDeletedEventItem) {
    if (this.menuSectionDeletedEvent == null) {
      this.menuSectionDeletedEvent = new ArrayList<>();
    }
    this.menuSectionDeletedEvent.add(menuSectionDeletedEventItem);
    return this;
  }

   /**
   * Menu section deleted events
   * @return menuSectionDeletedEvent
  **/
  @ApiModelProperty(value = "Menu section deleted events")
  public List<MenuSectionDeletedEvent> getMenuSectionDeletedEvent() {
    return menuSectionDeletedEvent;
  }

  public void setMenuSectionDeletedEvent(List<MenuSectionDeletedEvent> menuSectionDeletedEvent) {
    this.menuSectionDeletedEvent = menuSectionDeletedEvent;
  }

  public EventSearchResult menuSectionItemCreatedEvent(List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent) {
    this.menuSectionItemCreatedEvent = menuSectionItemCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemCreatedEventItem(MenuSectionItemCreatedEvent menuSectionItemCreatedEventItem) {
    if (this.menuSectionItemCreatedEvent == null) {
      this.menuSectionItemCreatedEvent = new ArrayList<>();
    }
    this.menuSectionItemCreatedEvent.add(menuSectionItemCreatedEventItem);
    return this;
  }

   /**
   * Menu section item created events
   * @return menuSectionItemCreatedEvent
  **/
  @ApiModelProperty(value = "Menu section item created events")
  public List<MenuSectionItemCreatedEvent> getMenuSectionItemCreatedEvent() {
    return menuSectionItemCreatedEvent;
  }

  public void setMenuSectionItemCreatedEvent(List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent) {
    this.menuSectionItemCreatedEvent = menuSectionItemCreatedEvent;
  }

  public EventSearchResult menuSectionItemUpdatedEvent(List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent) {
    this.menuSectionItemUpdatedEvent = menuSectionItemUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemUpdatedEventItem(MenuSectionItemUpdatedEvent menuSectionItemUpdatedEventItem) {
    if (this.menuSectionItemUpdatedEvent == null) {
      this.menuSectionItemUpdatedEvent = new ArrayList<>();
    }
    this.menuSectionItemUpdatedEvent.add(menuSectionItemUpdatedEventItem);
    return this;
  }

   /**
   * Menu section item updated events
   * @return menuSectionItemUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu section item updated events")
  public List<MenuSectionItemUpdatedEvent> getMenuSectionItemUpdatedEvent() {
    return menuSectionItemUpdatedEvent;
  }

  public void setMenuSectionItemUpdatedEvent(List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent) {
    this.menuSectionItemUpdatedEvent = menuSectionItemUpdatedEvent;
  }

  public EventSearchResult menuSectionItemDeletedEvent(List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent) {
    this.menuSectionItemDeletedEvent = menuSectionItemDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemDeletedEventItem(MenuSectionItemDeletedEvent menuSectionItemDeletedEventItem) {
    if (this.menuSectionItemDeletedEvent == null) {
      this.menuSectionItemDeletedEvent = new ArrayList<>();
    }
    this.menuSectionItemDeletedEvent.add(menuSectionItemDeletedEventItem);
    return this;
  }

   /**
   * Menu section item deleted events
   * @return menuSectionItemDeletedEvent
  **/
  @ApiModelProperty(value = "Menu section item deleted events")
  public List<MenuSectionItemDeletedEvent> getMenuSectionItemDeletedEvent() {
    return menuSectionItemDeletedEvent;
  }

  public void setMenuSectionItemDeletedEvent(List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent) {
    this.menuSectionItemDeletedEvent = menuSectionItemDeletedEvent;
  }

  public EventSearchResult menuItemOptionSetCreatedEvent(List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent) {
    this.menuItemOptionSetCreatedEvent = menuItemOptionSetCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetCreatedEventItem(MenuItemOptionSetCreatedEvent menuItemOptionSetCreatedEventItem) {
    if (this.menuItemOptionSetCreatedEvent == null) {
      this.menuItemOptionSetCreatedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetCreatedEvent.add(menuItemOptionSetCreatedEventItem);
    return this;
  }

   /**
   * Menu item option set created events
   * @return menuItemOptionSetCreatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set created events")
  public List<MenuItemOptionSetCreatedEvent> getMenuItemOptionSetCreatedEvent() {
    return menuItemOptionSetCreatedEvent;
  }

  public void setMenuItemOptionSetCreatedEvent(List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent) {
    this.menuItemOptionSetCreatedEvent = menuItemOptionSetCreatedEvent;
  }

  public EventSearchResult menuItemOptionSetUpdatedEvent(List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent) {
    this.menuItemOptionSetUpdatedEvent = menuItemOptionSetUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetUpdatedEventItem(MenuItemOptionSetUpdatedEvent menuItemOptionSetUpdatedEventItem) {
    if (this.menuItemOptionSetUpdatedEvent == null) {
      this.menuItemOptionSetUpdatedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetUpdatedEvent.add(menuItemOptionSetUpdatedEventItem);
    return this;
  }

   /**
   * Menu item option set  updated events
   * @return menuItemOptionSetUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set  updated events")
  public List<MenuItemOptionSetUpdatedEvent> getMenuItemOptionSetUpdatedEvent() {
    return menuItemOptionSetUpdatedEvent;
  }

  public void setMenuItemOptionSetUpdatedEvent(List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent) {
    this.menuItemOptionSetUpdatedEvent = menuItemOptionSetUpdatedEvent;
  }

  public EventSearchResult menuItemOptionSetDeletedEvent(List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent) {
    this.menuItemOptionSetDeletedEvent = menuItemOptionSetDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetDeletedEventItem(MenuItemOptionSetDeletedEvent menuItemOptionSetDeletedEventItem) {
    if (this.menuItemOptionSetDeletedEvent == null) {
      this.menuItemOptionSetDeletedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetDeletedEvent.add(menuItemOptionSetDeletedEventItem);
    return this;
  }

   /**
   * Menu item option set deleted events
   * @return menuItemOptionSetDeletedEvent
  **/
  @ApiModelProperty(value = "Menu item option set deleted events")
  public List<MenuItemOptionSetDeletedEvent> getMenuItemOptionSetDeletedEvent() {
    return menuItemOptionSetDeletedEvent;
  }

  public void setMenuItemOptionSetDeletedEvent(List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent) {
    this.menuItemOptionSetDeletedEvent = menuItemOptionSetDeletedEvent;
  }

  public EventSearchResult menuItemOptionSetItemCreatedEvent(List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent) {
    this.menuItemOptionSetItemCreatedEvent = menuItemOptionSetItemCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemCreatedEventItem(MenuItemOptionSetItemCreatedEvent menuItemOptionSetItemCreatedEventItem) {
    if (this.menuItemOptionSetItemCreatedEvent == null) {
      this.menuItemOptionSetItemCreatedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetItemCreatedEvent.add(menuItemOptionSetItemCreatedEventItem);
    return this;
  }

   /**
   * Menu item option set item created events
   * @return menuItemOptionSetItemCreatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item created events")
  public List<MenuItemOptionSetItemCreatedEvent> getMenuItemOptionSetItemCreatedEvent() {
    return menuItemOptionSetItemCreatedEvent;
  }

  public void setMenuItemOptionSetItemCreatedEvent(List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent) {
    this.menuItemOptionSetItemCreatedEvent = menuItemOptionSetItemCreatedEvent;
  }

  public EventSearchResult menuItemOptionSetItemUpdatedEvent(List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent) {
    this.menuItemOptionSetItemUpdatedEvent = menuItemOptionSetItemUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemUpdatedEventItem(MenuItemOptionSetItemUpdatedEvent menuItemOptionSetItemUpdatedEventItem) {
    if (this.menuItemOptionSetItemUpdatedEvent == null) {
      this.menuItemOptionSetItemUpdatedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetItemUpdatedEvent.add(menuItemOptionSetItemUpdatedEventItem);
    return this;
  }

   /**
   * Menu item option set item updated events
   * @return menuItemOptionSetItemUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item updated events")
  public List<MenuItemOptionSetItemUpdatedEvent> getMenuItemOptionSetItemUpdatedEvent() {
    return menuItemOptionSetItemUpdatedEvent;
  }

  public void setMenuItemOptionSetItemUpdatedEvent(List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent) {
    this.menuItemOptionSetItemUpdatedEvent = menuItemOptionSetItemUpdatedEvent;
  }

  public EventSearchResult menuItemOptionSetItemDeletedEvent(List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent) {
    this.menuItemOptionSetItemDeletedEvent = menuItemOptionSetItemDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemDeletedEventItem(MenuItemOptionSetItemDeletedEvent menuItemOptionSetItemDeletedEventItem) {
    if (this.menuItemOptionSetItemDeletedEvent == null) {
      this.menuItemOptionSetItemDeletedEvent = new ArrayList<>();
    }
    this.menuItemOptionSetItemDeletedEvent.add(menuItemOptionSetItemDeletedEventItem);
    return this;
  }

   /**
   * Menu item option set item deleted events
   * @return menuItemOptionSetItemDeletedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item deleted events")
  public List<MenuItemOptionSetItemDeletedEvent> getMenuItemOptionSetItemDeletedEvent() {
    return menuItemOptionSetItemDeletedEvent;
  }

  public void setMenuItemOptionSetItemDeletedEvent(List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent) {
    this.menuItemOptionSetItemDeletedEvent = menuItemOptionSetItemDeletedEvent;
  }

  public EventSearchResult storeGroupCreatedEvent(List<StoreGroupCreatedEvent> storeGroupCreatedEvent) {
    this.storeGroupCreatedEvent = storeGroupCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupCreatedEventItem(StoreGroupCreatedEvent storeGroupCreatedEventItem) {
    if (this.storeGroupCreatedEvent == null) {
      this.storeGroupCreatedEvent = new ArrayList<>();
    }
    this.storeGroupCreatedEvent.add(storeGroupCreatedEventItem);
    return this;
  }

   /**
   * Store group created events
   * @return storeGroupCreatedEvent
  **/
  @ApiModelProperty(value = "Store group created events")
  public List<StoreGroupCreatedEvent> getStoreGroupCreatedEvent() {
    return storeGroupCreatedEvent;
  }

  public void setStoreGroupCreatedEvent(List<StoreGroupCreatedEvent> storeGroupCreatedEvent) {
    this.storeGroupCreatedEvent = storeGroupCreatedEvent;
  }

  public EventSearchResult storeGroupUpdatedEvent(List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent) {
    this.storeGroupUpdatedEvent = storeGroupUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupUpdatedEventItem(StoreGroupUpdatedEvent storeGroupUpdatedEventItem) {
    if (this.storeGroupUpdatedEvent == null) {
      this.storeGroupUpdatedEvent = new ArrayList<>();
    }
    this.storeGroupUpdatedEvent.add(storeGroupUpdatedEventItem);
    return this;
  }

   /**
   * Store group updated events
   * @return storeGroupUpdatedEvent
  **/
  @ApiModelProperty(value = "Store group updated events")
  public List<StoreGroupUpdatedEvent> getStoreGroupUpdatedEvent() {
    return storeGroupUpdatedEvent;
  }

  public void setStoreGroupUpdatedEvent(List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent) {
    this.storeGroupUpdatedEvent = storeGroupUpdatedEvent;
  }

  public EventSearchResult storeGroupDeletedEvent(List<StoreGroupDeletedEvent> storeGroupDeletedEvent) {
    this.storeGroupDeletedEvent = storeGroupDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupDeletedEventItem(StoreGroupDeletedEvent storeGroupDeletedEventItem) {
    if (this.storeGroupDeletedEvent == null) {
      this.storeGroupDeletedEvent = new ArrayList<>();
    }
    this.storeGroupDeletedEvent.add(storeGroupDeletedEventItem);
    return this;
  }

   /**
   * Store group deleted events
   * @return storeGroupDeletedEvent
  **/
  @ApiModelProperty(value = "Store group deleted events")
  public List<StoreGroupDeletedEvent> getStoreGroupDeletedEvent() {
    return storeGroupDeletedEvent;
  }

  public void setStoreGroupDeletedEvent(List<StoreGroupDeletedEvent> storeGroupDeletedEvent) {
    this.storeGroupDeletedEvent = storeGroupDeletedEvent;
  }

  public EventSearchResult customerCreatedEvent(List<CustomerCreatedEvent> customerCreatedEvent) {
    this.customerCreatedEvent = customerCreatedEvent;
    return this;
  }

  public EventSearchResult addCustomerCreatedEventItem(CustomerCreatedEvent customerCreatedEventItem) {
    if (this.customerCreatedEvent == null) {
      this.customerCreatedEvent = new ArrayList<>();
    }
    this.customerCreatedEvent.add(customerCreatedEventItem);
    return this;
  }

   /**
   * Customer created events
   * @return customerCreatedEvent
  **/
  @ApiModelProperty(value = "Customer created events")
  public List<CustomerCreatedEvent> getCustomerCreatedEvent() {
    return customerCreatedEvent;
  }

  public void setCustomerCreatedEvent(List<CustomerCreatedEvent> customerCreatedEvent) {
    this.customerCreatedEvent = customerCreatedEvent;
  }

  public EventSearchResult customerUpdatedEvent(List<CustomerUpdatedEvent> customerUpdatedEvent) {
    this.customerUpdatedEvent = customerUpdatedEvent;
    return this;
  }

  public EventSearchResult addCustomerUpdatedEventItem(CustomerUpdatedEvent customerUpdatedEventItem) {
    if (this.customerUpdatedEvent == null) {
      this.customerUpdatedEvent = new ArrayList<>();
    }
    this.customerUpdatedEvent.add(customerUpdatedEventItem);
    return this;
  }

   /**
   * Customer updated events
   * @return customerUpdatedEvent
  **/
  @ApiModelProperty(value = "Customer updated events")
  public List<CustomerUpdatedEvent> getCustomerUpdatedEvent() {
    return customerUpdatedEvent;
  }

  public void setCustomerUpdatedEvent(List<CustomerUpdatedEvent> customerUpdatedEvent) {
    this.customerUpdatedEvent = customerUpdatedEvent;
  }

  public EventSearchResult customerConsentUpdatedEvent(List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent) {
    this.customerConsentUpdatedEvent = customerConsentUpdatedEvent;
    return this;
  }

  public EventSearchResult addCustomerConsentUpdatedEventItem(CustomerConsentUpdatedEvent customerConsentUpdatedEventItem) {
    if (this.customerConsentUpdatedEvent == null) {
      this.customerConsentUpdatedEvent = new ArrayList<>();
    }
    this.customerConsentUpdatedEvent.add(customerConsentUpdatedEventItem);
    return this;
  }

   /**
   * Customer consent updated events
   * @return customerConsentUpdatedEvent
  **/
  @ApiModelProperty(value = "Customer consent updated events")
  public List<CustomerConsentUpdatedEvent> getCustomerConsentUpdatedEvent() {
    return customerConsentUpdatedEvent;
  }

  public void setCustomerConsentUpdatedEvent(List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent) {
    this.customerConsentUpdatedEvent = customerConsentUpdatedEvent;
  }

  public EventSearchResult webhookSubscriptionCreatedEvent(List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent) {
    this.webhookSubscriptionCreatedEvent = webhookSubscriptionCreatedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionCreatedEventItem(WebhookSubscriptionCreatedEvent webhookSubscriptionCreatedEventItem) {
    if (this.webhookSubscriptionCreatedEvent == null) {
      this.webhookSubscriptionCreatedEvent = new ArrayList<>();
    }
    this.webhookSubscriptionCreatedEvent.add(webhookSubscriptionCreatedEventItem);
    return this;
  }

   /**
   * Webhook subscription created events
   * @return webhookSubscriptionCreatedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription created events")
  public List<WebhookSubscriptionCreatedEvent> getWebhookSubscriptionCreatedEvent() {
    return webhookSubscriptionCreatedEvent;
  }

  public void setWebhookSubscriptionCreatedEvent(List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent) {
    this.webhookSubscriptionCreatedEvent = webhookSubscriptionCreatedEvent;
  }

  public EventSearchResult webhookSubscriptionUpdatedEvent(List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent) {
    this.webhookSubscriptionUpdatedEvent = webhookSubscriptionUpdatedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionUpdatedEventItem(WebhookSubscriptionUpdatedEvent webhookSubscriptionUpdatedEventItem) {
    if (this.webhookSubscriptionUpdatedEvent == null) {
      this.webhookSubscriptionUpdatedEvent = new ArrayList<>();
    }
    this.webhookSubscriptionUpdatedEvent.add(webhookSubscriptionUpdatedEventItem);
    return this;
  }

   /**
   * Webhook subscription updated events
   * @return webhookSubscriptionUpdatedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription updated events")
  public List<WebhookSubscriptionUpdatedEvent> getWebhookSubscriptionUpdatedEvent() {
    return webhookSubscriptionUpdatedEvent;
  }

  public void setWebhookSubscriptionUpdatedEvent(List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent) {
    this.webhookSubscriptionUpdatedEvent = webhookSubscriptionUpdatedEvent;
  }

  public EventSearchResult webhookSubscriptionDeletedEvent(List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent) {
    this.webhookSubscriptionDeletedEvent = webhookSubscriptionDeletedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionDeletedEventItem(WebhookSubscriptionDeletedEvent webhookSubscriptionDeletedEventItem) {
    if (this.webhookSubscriptionDeletedEvent == null) {
      this.webhookSubscriptionDeletedEvent = new ArrayList<>();
    }
    this.webhookSubscriptionDeletedEvent.add(webhookSubscriptionDeletedEventItem);
    return this;
  }

   /**
   * Webhook subscription deleted events
   * @return webhookSubscriptionDeletedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription deleted events")
  public List<WebhookSubscriptionDeletedEvent> getWebhookSubscriptionDeletedEvent() {
    return webhookSubscriptionDeletedEvent;
  }

  public void setWebhookSubscriptionDeletedEvent(List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent) {
    this.webhookSubscriptionDeletedEvent = webhookSubscriptionDeletedEvent;
  }

  public EventSearchResult printerTurnedOnEvent(List<PrinterTurnedOnEvent> printerTurnedOnEvent) {
    this.printerTurnedOnEvent = printerTurnedOnEvent;
    return this;
  }

  public EventSearchResult addPrinterTurnedOnEventItem(PrinterTurnedOnEvent printerTurnedOnEventItem) {
    if (this.printerTurnedOnEvent == null) {
      this.printerTurnedOnEvent = new ArrayList<>();
    }
    this.printerTurnedOnEvent.add(printerTurnedOnEventItem);
    return this;
  }

   /**
   * Printer turned ON event
   * @return printerTurnedOnEvent
  **/
  @ApiModelProperty(value = "Printer turned ON event")
  public List<PrinterTurnedOnEvent> getPrinterTurnedOnEvent() {
    return printerTurnedOnEvent;
  }

  public void setPrinterTurnedOnEvent(List<PrinterTurnedOnEvent> printerTurnedOnEvent) {
    this.printerTurnedOnEvent = printerTurnedOnEvent;
  }

  public EventSearchResult printerTurnedOffEvent(List<PrinterTurnedOffEvent> printerTurnedOffEvent) {
    this.printerTurnedOffEvent = printerTurnedOffEvent;
    return this;
  }

  public EventSearchResult addPrinterTurnedOffEventItem(PrinterTurnedOffEvent printerTurnedOffEventItem) {
    if (this.printerTurnedOffEvent == null) {
      this.printerTurnedOffEvent = new ArrayList<>();
    }
    this.printerTurnedOffEvent.add(printerTurnedOffEventItem);
    return this;
  }

   /**
   * Printer turned OFF event
   * @return printerTurnedOffEvent
  **/
  @ApiModelProperty(value = "Printer turned OFF event")
  public List<PrinterTurnedOffEvent> getPrinterTurnedOffEvent() {
    return printerTurnedOffEvent;
  }

  public void setPrinterTurnedOffEvent(List<PrinterTurnedOffEvent> printerTurnedOffEvent) {
    this.printerTurnedOffEvent = printerTurnedOffEvent;
  }

  public EventSearchResult printerAssignedToStoreEvent(List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent) {
    this.printerAssignedToStoreEvent = printerAssignedToStoreEvent;
    return this;
  }

  public EventSearchResult addPrinterAssignedToStoreEventItem(PrinterAssignedToStoreEvent printerAssignedToStoreEventItem) {
    if (this.printerAssignedToStoreEvent == null) {
      this.printerAssignedToStoreEvent = new ArrayList<>();
    }
    this.printerAssignedToStoreEvent.add(printerAssignedToStoreEventItem);
    return this;
  }

   /**
   * Printer assigned to store event
   * @return printerAssignedToStoreEvent
  **/
  @ApiModelProperty(value = "Printer assigned to store event")
  public List<PrinterAssignedToStoreEvent> getPrinterAssignedToStoreEvent() {
    return printerAssignedToStoreEvent;
  }

  public void setPrinterAssignedToStoreEvent(List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent) {
    this.printerAssignedToStoreEvent = printerAssignedToStoreEvent;
  }

  public EventSearchResult printerUnassignedFromStoreEvent(List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent) {
    this.printerUnassignedFromStoreEvent = printerUnassignedFromStoreEvent;
    return this;
  }

  public EventSearchResult addPrinterUnassignedFromStoreEventItem(PrinterUnassignedFromStoreEvent printerUnassignedFromStoreEventItem) {
    if (this.printerUnassignedFromStoreEvent == null) {
      this.printerUnassignedFromStoreEvent = new ArrayList<>();
    }
    this.printerUnassignedFromStoreEvent.add(printerUnassignedFromStoreEventItem);
    return this;
  }

   /**
   * Printer unassigned from store event
   * @return printerUnassignedFromStoreEvent
  **/
  @ApiModelProperty(value = "Printer unassigned from store event")
  public List<PrinterUnassignedFromStoreEvent> getPrinterUnassignedFromStoreEvent() {
    return printerUnassignedFromStoreEvent;
  }

  public void setPrinterUnassignedFromStoreEvent(List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent) {
    this.printerUnassignedFromStoreEvent = printerUnassignedFromStoreEvent;
  }

  public EventSearchResult phoneCallStartedEvent(List<PhoneCallStartedEvent> phoneCallStartedEvent) {
    this.phoneCallStartedEvent = phoneCallStartedEvent;
    return this;
  }

  public EventSearchResult addPhoneCallStartedEventItem(PhoneCallStartedEvent phoneCallStartedEventItem) {
    if (this.phoneCallStartedEvent == null) {
      this.phoneCallStartedEvent = new ArrayList<>();
    }
    this.phoneCallStartedEvent.add(phoneCallStartedEventItem);
    return this;
  }

   /**
   * Phone call started event
   * @return phoneCallStartedEvent
  **/
  @ApiModelProperty(value = "Phone call started event")
  public List<PhoneCallStartedEvent> getPhoneCallStartedEvent() {
    return phoneCallStartedEvent;
  }

  public void setPhoneCallStartedEvent(List<PhoneCallStartedEvent> phoneCallStartedEvent) {
    this.phoneCallStartedEvent = phoneCallStartedEvent;
  }

  public EventSearchResult phoneCallEndedEvent(List<PhoneCallEndedEvent> phoneCallEndedEvent) {
    this.phoneCallEndedEvent = phoneCallEndedEvent;
    return this;
  }

  public EventSearchResult addPhoneCallEndedEventItem(PhoneCallEndedEvent phoneCallEndedEventItem) {
    if (this.phoneCallEndedEvent == null) {
      this.phoneCallEndedEvent = new ArrayList<>();
    }
    this.phoneCallEndedEvent.add(phoneCallEndedEventItem);
    return this;
  }

   /**
   * Phone call ended event
   * @return phoneCallEndedEvent
  **/
  @ApiModelProperty(value = "Phone call ended event")
  public List<PhoneCallEndedEvent> getPhoneCallEndedEvent() {
    return phoneCallEndedEvent;
  }

  public void setPhoneCallEndedEvent(List<PhoneCallEndedEvent> phoneCallEndedEvent) {
    this.phoneCallEndedEvent = phoneCallEndedEvent;
  }

  public EventSearchResult loyaltyCampaignCreatedEvent(List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent) {
    this.loyaltyCampaignCreatedEvent = loyaltyCampaignCreatedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignCreatedEventItem(LoyaltyCampaignCreatedEvent loyaltyCampaignCreatedEventItem) {
    if (this.loyaltyCampaignCreatedEvent == null) {
      this.loyaltyCampaignCreatedEvent = new ArrayList<>();
    }
    this.loyaltyCampaignCreatedEvent.add(loyaltyCampaignCreatedEventItem);
    return this;
  }

   /**
   * Loyalty campaign created event
   * @return loyaltyCampaignCreatedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign created event")
  public List<LoyaltyCampaignCreatedEvent> getLoyaltyCampaignCreatedEvent() {
    return loyaltyCampaignCreatedEvent;
  }

  public void setLoyaltyCampaignCreatedEvent(List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent) {
    this.loyaltyCampaignCreatedEvent = loyaltyCampaignCreatedEvent;
  }

  public EventSearchResult loyaltyCampaignDeletedEvent(List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent) {
    this.loyaltyCampaignDeletedEvent = loyaltyCampaignDeletedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignDeletedEventItem(LoyaltyCampaignDeletedEvent loyaltyCampaignDeletedEventItem) {
    if (this.loyaltyCampaignDeletedEvent == null) {
      this.loyaltyCampaignDeletedEvent = new ArrayList<>();
    }
    this.loyaltyCampaignDeletedEvent.add(loyaltyCampaignDeletedEventItem);
    return this;
  }

   /**
   * Loyalty campaign deleted event
   * @return loyaltyCampaignDeletedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign deleted event")
  public List<LoyaltyCampaignDeletedEvent> getLoyaltyCampaignDeletedEvent() {
    return loyaltyCampaignDeletedEvent;
  }

  public void setLoyaltyCampaignDeletedEvent(List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent) {
    this.loyaltyCampaignDeletedEvent = loyaltyCampaignDeletedEvent;
  }

  public EventSearchResult loyaltyCampaignUpdatedEvent(List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent) {
    this.loyaltyCampaignUpdatedEvent = loyaltyCampaignUpdatedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignUpdatedEventItem(LoyaltyCampaignUpdatedEvent loyaltyCampaignUpdatedEventItem) {
    if (this.loyaltyCampaignUpdatedEvent == null) {
      this.loyaltyCampaignUpdatedEvent = new ArrayList<>();
    }
    this.loyaltyCampaignUpdatedEvent.add(loyaltyCampaignUpdatedEventItem);
    return this;
  }

   /**
   * Loyalty campaign updated event
   * @return loyaltyCampaignUpdatedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign updated event")
  public List<LoyaltyCampaignUpdatedEvent> getLoyaltyCampaignUpdatedEvent() {
    return loyaltyCampaignUpdatedEvent;
  }

  public void setLoyaltyCampaignUpdatedEvent(List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent) {
    this.loyaltyCampaignUpdatedEvent = loyaltyCampaignUpdatedEvent;
  }

  public EventSearchResult retentionCampaignCreatedEvent(List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent) {
    this.retentionCampaignCreatedEvent = retentionCampaignCreatedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignCreatedEventItem(RetentionCampaignCreatedEvent retentionCampaignCreatedEventItem) {
    if (this.retentionCampaignCreatedEvent == null) {
      this.retentionCampaignCreatedEvent = new ArrayList<>();
    }
    this.retentionCampaignCreatedEvent.add(retentionCampaignCreatedEventItem);
    return this;
  }

   /**
   * Retention campaign created event
   * @return retentionCampaignCreatedEvent
  **/
  @ApiModelProperty(value = "Retention campaign created event")
  public List<RetentionCampaignCreatedEvent> getRetentionCampaignCreatedEvent() {
    return retentionCampaignCreatedEvent;
  }

  public void setRetentionCampaignCreatedEvent(List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent) {
    this.retentionCampaignCreatedEvent = retentionCampaignCreatedEvent;
  }

  public EventSearchResult retentionCampaignDeletedEvent(List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent) {
    this.retentionCampaignDeletedEvent = retentionCampaignDeletedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignDeletedEventItem(RetentionCampaignDeletedEvent retentionCampaignDeletedEventItem) {
    if (this.retentionCampaignDeletedEvent == null) {
      this.retentionCampaignDeletedEvent = new ArrayList<>();
    }
    this.retentionCampaignDeletedEvent.add(retentionCampaignDeletedEventItem);
    return this;
  }

   /**
   * Retention campaign deleted event
   * @return retentionCampaignDeletedEvent
  **/
  @ApiModelProperty(value = "Retention campaign deleted event")
  public List<RetentionCampaignDeletedEvent> getRetentionCampaignDeletedEvent() {
    return retentionCampaignDeletedEvent;
  }

  public void setRetentionCampaignDeletedEvent(List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent) {
    this.retentionCampaignDeletedEvent = retentionCampaignDeletedEvent;
  }

  public EventSearchResult retentionCampaignUpdatedEvent(List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent) {
    this.retentionCampaignUpdatedEvent = retentionCampaignUpdatedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignUpdatedEventItem(RetentionCampaignUpdatedEvent retentionCampaignUpdatedEventItem) {
    if (this.retentionCampaignUpdatedEvent == null) {
      this.retentionCampaignUpdatedEvent = new ArrayList<>();
    }
    this.retentionCampaignUpdatedEvent.add(retentionCampaignUpdatedEventItem);
    return this;
  }

   /**
   * Retention campaign updated event
   * @return retentionCampaignUpdatedEvent
  **/
  @ApiModelProperty(value = "Retention campaign updated event")
  public List<RetentionCampaignUpdatedEvent> getRetentionCampaignUpdatedEvent() {
    return retentionCampaignUpdatedEvent;
  }

  public void setRetentionCampaignUpdatedEvent(List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent) {
    this.retentionCampaignUpdatedEvent = retentionCampaignUpdatedEvent;
  }

  public EventSearchResult smsReceivedEvent(List<SmsReceivedEvent> smsReceivedEvent) {
    this.smsReceivedEvent = smsReceivedEvent;
    return this;
  }

  public EventSearchResult addSmsReceivedEventItem(SmsReceivedEvent smsReceivedEventItem) {
    if (this.smsReceivedEvent == null) {
      this.smsReceivedEvent = new ArrayList<>();
    }
    this.smsReceivedEvent.add(smsReceivedEventItem);
    return this;
  }

   /**
   * Sms received event
   * @return smsReceivedEvent
  **/
  @ApiModelProperty(value = "Sms received event")
  public List<SmsReceivedEvent> getSmsReceivedEvent() {
    return smsReceivedEvent;
  }

  public void setSmsReceivedEvent(List<SmsReceivedEvent> smsReceivedEvent) {
    this.smsReceivedEvent = smsReceivedEvent;
  }

  public EventSearchResult userLoginEvent(List<UserLoginEvent> userLoginEvent) {
    this.userLoginEvent = userLoginEvent;
    return this;
  }

  public EventSearchResult addUserLoginEventItem(UserLoginEvent userLoginEventItem) {
    if (this.userLoginEvent == null) {
      this.userLoginEvent = new ArrayList<>();
    }
    this.userLoginEvent.add(userLoginEventItem);
    return this;
  }

   /**
   * User login event
   * @return userLoginEvent
  **/
  @ApiModelProperty(value = "User login event")
  public List<UserLoginEvent> getUserLoginEvent() {
    return userLoginEvent;
  }

  public void setUserLoginEvent(List<UserLoginEvent> userLoginEvent) {
    this.userLoginEvent = userLoginEvent;
  }

  public EventSearchResult userCreatedEvent(List<UserCreatedEvent> userCreatedEvent) {
    this.userCreatedEvent = userCreatedEvent;
    return this;
  }

  public EventSearchResult addUserCreatedEventItem(UserCreatedEvent userCreatedEventItem) {
    if (this.userCreatedEvent == null) {
      this.userCreatedEvent = new ArrayList<>();
    }
    this.userCreatedEvent.add(userCreatedEventItem);
    return this;
  }

   /**
   * User created event
   * @return userCreatedEvent
  **/
  @ApiModelProperty(value = "User created event")
  public List<UserCreatedEvent> getUserCreatedEvent() {
    return userCreatedEvent;
  }

  public void setUserCreatedEvent(List<UserCreatedEvent> userCreatedEvent) {
    this.userCreatedEvent = userCreatedEvent;
  }

  public EventSearchResult userUpdatedEvent(List<UserUpdatedEvent> userUpdatedEvent) {
    this.userUpdatedEvent = userUpdatedEvent;
    return this;
  }

  public EventSearchResult addUserUpdatedEventItem(UserUpdatedEvent userUpdatedEventItem) {
    if (this.userUpdatedEvent == null) {
      this.userUpdatedEvent = new ArrayList<>();
    }
    this.userUpdatedEvent.add(userUpdatedEventItem);
    return this;
  }

   /**
   * User updated event
   * @return userUpdatedEvent
  **/
  @ApiModelProperty(value = "User updated event")
  public List<UserUpdatedEvent> getUserUpdatedEvent() {
    return userUpdatedEvent;
  }

  public void setUserUpdatedEvent(List<UserUpdatedEvent> userUpdatedEvent) {
    this.userUpdatedEvent = userUpdatedEvent;
  }

  public EventSearchResult userDeletedEvent(List<UserDeletedEvent> userDeletedEvent) {
    this.userDeletedEvent = userDeletedEvent;
    return this;
  }

  public EventSearchResult addUserDeletedEventItem(UserDeletedEvent userDeletedEventItem) {
    if (this.userDeletedEvent == null) {
      this.userDeletedEvent = new ArrayList<>();
    }
    this.userDeletedEvent.add(userDeletedEventItem);
    return this;
  }

   /**
   * User deleted event
   * @return userDeletedEvent
  **/
  @ApiModelProperty(value = "User deleted event")
  public List<UserDeletedEvent> getUserDeletedEvent() {
    return userDeletedEvent;
  }

  public void setUserDeletedEvent(List<UserDeletedEvent> userDeletedEvent) {
    this.userDeletedEvent = userDeletedEvent;
  }

  public EventSearchResult voucherCreatedEvent(List<VoucherCreatedEvent> voucherCreatedEvent) {
    this.voucherCreatedEvent = voucherCreatedEvent;
    return this;
  }

  public EventSearchResult addVoucherCreatedEventItem(VoucherCreatedEvent voucherCreatedEventItem) {
    if (this.voucherCreatedEvent == null) {
      this.voucherCreatedEvent = new ArrayList<>();
    }
    this.voucherCreatedEvent.add(voucherCreatedEventItem);
    return this;
  }

   /**
   * Voucher created event
   * @return voucherCreatedEvent
  **/
  @ApiModelProperty(value = "Voucher created event")
  public List<VoucherCreatedEvent> getVoucherCreatedEvent() {
    return voucherCreatedEvent;
  }

  public void setVoucherCreatedEvent(List<VoucherCreatedEvent> voucherCreatedEvent) {
    this.voucherCreatedEvent = voucherCreatedEvent;
  }

  public EventSearchResult voucherUpdatedEvent(List<VoucherUpdatedEvent> voucherUpdatedEvent) {
    this.voucherUpdatedEvent = voucherUpdatedEvent;
    return this;
  }

  public EventSearchResult addVoucherUpdatedEventItem(VoucherUpdatedEvent voucherUpdatedEventItem) {
    if (this.voucherUpdatedEvent == null) {
      this.voucherUpdatedEvent = new ArrayList<>();
    }
    this.voucherUpdatedEvent.add(voucherUpdatedEventItem);
    return this;
  }

   /**
   * Voucher updated event
   * @return voucherUpdatedEvent
  **/
  @ApiModelProperty(value = "Voucher updated event")
  public List<VoucherUpdatedEvent> getVoucherUpdatedEvent() {
    return voucherUpdatedEvent;
  }

  public void setVoucherUpdatedEvent(List<VoucherUpdatedEvent> voucherUpdatedEvent) {
    this.voucherUpdatedEvent = voucherUpdatedEvent;
  }

  public EventSearchResult voucherDeletedEvent(List<VoucherDeletedEvent> voucherDeletedEvent) {
    this.voucherDeletedEvent = voucherDeletedEvent;
    return this;
  }

  public EventSearchResult addVoucherDeletedEventItem(VoucherDeletedEvent voucherDeletedEventItem) {
    if (this.voucherDeletedEvent == null) {
      this.voucherDeletedEvent = new ArrayList<>();
    }
    this.voucherDeletedEvent.add(voucherDeletedEventItem);
    return this;
  }

   /**
   * Voucher deleted event
   * @return voucherDeletedEvent
  **/
  @ApiModelProperty(value = "Voucher deleted event")
  public List<VoucherDeletedEvent> getVoucherDeletedEvent() {
    return voucherDeletedEvent;
  }

  public void setVoucherDeletedEvent(List<VoucherDeletedEvent> voucherDeletedEvent) {
    this.voucherDeletedEvent = voucherDeletedEvent;
  }

  public EventSearchResult teammateInviteSentEvent(List<TeammateInviteSentEvent> teammateInviteSentEvent) {
    this.teammateInviteSentEvent = teammateInviteSentEvent;
    return this;
  }

  public EventSearchResult addTeammateInviteSentEventItem(TeammateInviteSentEvent teammateInviteSentEventItem) {
    if (this.teammateInviteSentEvent == null) {
      this.teammateInviteSentEvent = new ArrayList<>();
    }
    this.teammateInviteSentEvent.add(teammateInviteSentEventItem);
    return this;
  }

   /**
   * Teammate invite sent event
   * @return teammateInviteSentEvent
  **/
  @ApiModelProperty(value = "Teammate invite sent event")
  public List<TeammateInviteSentEvent> getTeammateInviteSentEvent() {
    return teammateInviteSentEvent;
  }

  public void setTeammateInviteSentEvent(List<TeammateInviteSentEvent> teammateInviteSentEvent) {
    this.teammateInviteSentEvent = teammateInviteSentEvent;
  }

  public EventSearchResult teammateInviteAcceptedEvent(List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent) {
    this.teammateInviteAcceptedEvent = teammateInviteAcceptedEvent;
    return this;
  }

  public EventSearchResult addTeammateInviteAcceptedEventItem(TeammateInviteAcceptedEvent teammateInviteAcceptedEventItem) {
    if (this.teammateInviteAcceptedEvent == null) {
      this.teammateInviteAcceptedEvent = new ArrayList<>();
    }
    this.teammateInviteAcceptedEvent.add(teammateInviteAcceptedEventItem);
    return this;
  }

   /**
   * Teammate invite accepted event
   * @return teammateInviteAcceptedEvent
  **/
  @ApiModelProperty(value = "Teammate invite accepted event")
  public List<TeammateInviteAcceptedEvent> getTeammateInviteAcceptedEvent() {
    return teammateInviteAcceptedEvent;
  }

  public void setTeammateInviteAcceptedEvent(List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent) {
    this.teammateInviteAcceptedEvent = teammateInviteAcceptedEvent;
  }

  public EventSearchResult teammateUpdatedEvent(List<TeammateUpdatedEvent> teammateUpdatedEvent) {
    this.teammateUpdatedEvent = teammateUpdatedEvent;
    return this;
  }

  public EventSearchResult addTeammateUpdatedEventItem(TeammateUpdatedEvent teammateUpdatedEventItem) {
    if (this.teammateUpdatedEvent == null) {
      this.teammateUpdatedEvent = new ArrayList<>();
    }
    this.teammateUpdatedEvent.add(teammateUpdatedEventItem);
    return this;
  }

   /**
   * Teammate updated event
   * @return teammateUpdatedEvent
  **/
  @ApiModelProperty(value = "Teammate updated event")
  public List<TeammateUpdatedEvent> getTeammateUpdatedEvent() {
    return teammateUpdatedEvent;
  }

  public void setTeammateUpdatedEvent(List<TeammateUpdatedEvent> teammateUpdatedEvent) {
    this.teammateUpdatedEvent = teammateUpdatedEvent;
  }

  public EventSearchResult teammateDeletedEvent(List<TeammateDeletedEvent> teammateDeletedEvent) {
    this.teammateDeletedEvent = teammateDeletedEvent;
    return this;
  }

  public EventSearchResult addTeammateDeletedEventItem(TeammateDeletedEvent teammateDeletedEventItem) {
    if (this.teammateDeletedEvent == null) {
      this.teammateDeletedEvent = new ArrayList<>();
    }
    this.teammateDeletedEvent.add(teammateDeletedEventItem);
    return this;
  }

   /**
   * Teammate deleted event
   * @return teammateDeletedEvent
  **/
  @ApiModelProperty(value = "Teammate deleted event")
  public List<TeammateDeletedEvent> getTeammateDeletedEvent() {
    return teammateDeletedEvent;
  }

  public void setTeammateDeletedEvent(List<TeammateDeletedEvent> teammateDeletedEvent) {
    this.teammateDeletedEvent = teammateDeletedEvent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventSearchResult eventSearchResult = (EventSearchResult) o;
    return Objects.equals(this.analyticsClientEvent, eventSearchResult.analyticsClientEvent) &&
        Objects.equals(this.orderAcceptedEvent, eventSearchResult.orderAcceptedEvent) &&
        Objects.equals(this.orderCreatedEvent, eventSearchResult.orderCreatedEvent) &&
        Objects.equals(this.orderRatingUpdatedEvent, eventSearchResult.orderRatingUpdatedEvent) &&
        Objects.equals(this.orderRefundedEvent, eventSearchResult.orderRefundedEvent) &&
        Objects.equals(this.orderRejectedEvent, eventSearchResult.orderRejectedEvent) &&
        Objects.equals(this.orderTipUpdatedEvent, eventSearchResult.orderTipUpdatedEvent) &&
        Objects.equals(this.storeCreatedEvent, eventSearchResult.storeCreatedEvent) &&
        Objects.equals(this.storeDeletedEvent, eventSearchResult.storeDeletedEvent) &&
        Objects.equals(this.storeAddressUpdatedEvent, eventSearchResult.storeAddressUpdatedEvent) &&
        Objects.equals(this.deliveryZoneCreatedEvent, eventSearchResult.deliveryZoneCreatedEvent) &&
        Objects.equals(this.deliveryZoneUpdatedEvent, eventSearchResult.deliveryZoneUpdatedEvent) &&
        Objects.equals(this.deliveryZoneDeletedEvent, eventSearchResult.deliveryZoneDeletedEvent) &&
        Objects.equals(this.storeOpeningHoursUpdatedEvent, eventSearchResult.storeOpeningHoursUpdatedEvent) &&
        Objects.equals(this.storeBusinessHoursOverrideCreatedEvent, eventSearchResult.storeBusinessHoursOverrideCreatedEvent) &&
        Objects.equals(this.storeBusinessHoursOverrideDeletedEvent, eventSearchResult.storeBusinessHoursOverrideDeletedEvent) &&
        Objects.equals(this.storeUpdatedEvent, eventSearchResult.storeUpdatedEvent) &&
        Objects.equals(this.menuCreatedEvent, eventSearchResult.menuCreatedEvent) &&
        Objects.equals(this.menuUpdatedEvent, eventSearchResult.menuUpdatedEvent) &&
        Objects.equals(this.menuSectionCreatedEvent, eventSearchResult.menuSectionCreatedEvent) &&
        Objects.equals(this.menuSectionUpdatedEvent, eventSearchResult.menuSectionUpdatedEvent) &&
        Objects.equals(this.menuSectionDeletedEvent, eventSearchResult.menuSectionDeletedEvent) &&
        Objects.equals(this.menuSectionItemCreatedEvent, eventSearchResult.menuSectionItemCreatedEvent) &&
        Objects.equals(this.menuSectionItemUpdatedEvent, eventSearchResult.menuSectionItemUpdatedEvent) &&
        Objects.equals(this.menuSectionItemDeletedEvent, eventSearchResult.menuSectionItemDeletedEvent) &&
        Objects.equals(this.menuItemOptionSetCreatedEvent, eventSearchResult.menuItemOptionSetCreatedEvent) &&
        Objects.equals(this.menuItemOptionSetUpdatedEvent, eventSearchResult.menuItemOptionSetUpdatedEvent) &&
        Objects.equals(this.menuItemOptionSetDeletedEvent, eventSearchResult.menuItemOptionSetDeletedEvent) &&
        Objects.equals(this.menuItemOptionSetItemCreatedEvent, eventSearchResult.menuItemOptionSetItemCreatedEvent) &&
        Objects.equals(this.menuItemOptionSetItemUpdatedEvent, eventSearchResult.menuItemOptionSetItemUpdatedEvent) &&
        Objects.equals(this.menuItemOptionSetItemDeletedEvent, eventSearchResult.menuItemOptionSetItemDeletedEvent) &&
        Objects.equals(this.storeGroupCreatedEvent, eventSearchResult.storeGroupCreatedEvent) &&
        Objects.equals(this.storeGroupUpdatedEvent, eventSearchResult.storeGroupUpdatedEvent) &&
        Objects.equals(this.storeGroupDeletedEvent, eventSearchResult.storeGroupDeletedEvent) &&
        Objects.equals(this.customerCreatedEvent, eventSearchResult.customerCreatedEvent) &&
        Objects.equals(this.customerUpdatedEvent, eventSearchResult.customerUpdatedEvent) &&
        Objects.equals(this.customerConsentUpdatedEvent, eventSearchResult.customerConsentUpdatedEvent) &&
        Objects.equals(this.webhookSubscriptionCreatedEvent, eventSearchResult.webhookSubscriptionCreatedEvent) &&
        Objects.equals(this.webhookSubscriptionUpdatedEvent, eventSearchResult.webhookSubscriptionUpdatedEvent) &&
        Objects.equals(this.webhookSubscriptionDeletedEvent, eventSearchResult.webhookSubscriptionDeletedEvent) &&
        Objects.equals(this.printerTurnedOnEvent, eventSearchResult.printerTurnedOnEvent) &&
        Objects.equals(this.printerTurnedOffEvent, eventSearchResult.printerTurnedOffEvent) &&
        Objects.equals(this.printerAssignedToStoreEvent, eventSearchResult.printerAssignedToStoreEvent) &&
        Objects.equals(this.printerUnassignedFromStoreEvent, eventSearchResult.printerUnassignedFromStoreEvent) &&
        Objects.equals(this.phoneCallStartedEvent, eventSearchResult.phoneCallStartedEvent) &&
        Objects.equals(this.phoneCallEndedEvent, eventSearchResult.phoneCallEndedEvent) &&
        Objects.equals(this.loyaltyCampaignCreatedEvent, eventSearchResult.loyaltyCampaignCreatedEvent) &&
        Objects.equals(this.loyaltyCampaignDeletedEvent, eventSearchResult.loyaltyCampaignDeletedEvent) &&
        Objects.equals(this.loyaltyCampaignUpdatedEvent, eventSearchResult.loyaltyCampaignUpdatedEvent) &&
        Objects.equals(this.retentionCampaignCreatedEvent, eventSearchResult.retentionCampaignCreatedEvent) &&
        Objects.equals(this.retentionCampaignDeletedEvent, eventSearchResult.retentionCampaignDeletedEvent) &&
        Objects.equals(this.retentionCampaignUpdatedEvent, eventSearchResult.retentionCampaignUpdatedEvent) &&
        Objects.equals(this.smsReceivedEvent, eventSearchResult.smsReceivedEvent) &&
        Objects.equals(this.userLoginEvent, eventSearchResult.userLoginEvent) &&
        Objects.equals(this.userCreatedEvent, eventSearchResult.userCreatedEvent) &&
        Objects.equals(this.userUpdatedEvent, eventSearchResult.userUpdatedEvent) &&
        Objects.equals(this.userDeletedEvent, eventSearchResult.userDeletedEvent) &&
        Objects.equals(this.voucherCreatedEvent, eventSearchResult.voucherCreatedEvent) &&
        Objects.equals(this.voucherUpdatedEvent, eventSearchResult.voucherUpdatedEvent) &&
        Objects.equals(this.voucherDeletedEvent, eventSearchResult.voucherDeletedEvent) &&
        Objects.equals(this.teammateInviteSentEvent, eventSearchResult.teammateInviteSentEvent) &&
        Objects.equals(this.teammateInviteAcceptedEvent, eventSearchResult.teammateInviteAcceptedEvent) &&
        Objects.equals(this.teammateUpdatedEvent, eventSearchResult.teammateUpdatedEvent) &&
        Objects.equals(this.teammateDeletedEvent, eventSearchResult.teammateDeletedEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticsClientEvent, orderAcceptedEvent, orderCreatedEvent, orderRatingUpdatedEvent, orderRefundedEvent, orderRejectedEvent, orderTipUpdatedEvent, storeCreatedEvent, storeDeletedEvent, storeAddressUpdatedEvent, deliveryZoneCreatedEvent, deliveryZoneUpdatedEvent, deliveryZoneDeletedEvent, storeOpeningHoursUpdatedEvent, storeBusinessHoursOverrideCreatedEvent, storeBusinessHoursOverrideDeletedEvent, storeUpdatedEvent, menuCreatedEvent, menuUpdatedEvent, menuSectionCreatedEvent, menuSectionUpdatedEvent, menuSectionDeletedEvent, menuSectionItemCreatedEvent, menuSectionItemUpdatedEvent, menuSectionItemDeletedEvent, menuItemOptionSetCreatedEvent, menuItemOptionSetUpdatedEvent, menuItemOptionSetDeletedEvent, menuItemOptionSetItemCreatedEvent, menuItemOptionSetItemUpdatedEvent, menuItemOptionSetItemDeletedEvent, storeGroupCreatedEvent, storeGroupUpdatedEvent, storeGroupDeletedEvent, customerCreatedEvent, customerUpdatedEvent, customerConsentUpdatedEvent, webhookSubscriptionCreatedEvent, webhookSubscriptionUpdatedEvent, webhookSubscriptionDeletedEvent, printerTurnedOnEvent, printerTurnedOffEvent, printerAssignedToStoreEvent, printerUnassignedFromStoreEvent, phoneCallStartedEvent, phoneCallEndedEvent, loyaltyCampaignCreatedEvent, loyaltyCampaignDeletedEvent, loyaltyCampaignUpdatedEvent, retentionCampaignCreatedEvent, retentionCampaignDeletedEvent, retentionCampaignUpdatedEvent, smsReceivedEvent, userLoginEvent, userCreatedEvent, userUpdatedEvent, userDeletedEvent, voucherCreatedEvent, voucherUpdatedEvent, voucherDeletedEvent, teammateInviteSentEvent, teammateInviteAcceptedEvent, teammateUpdatedEvent, teammateDeletedEvent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventSearchResult {\n");
    
    sb.append("    analyticsClientEvent: ").append(toIndentedString(analyticsClientEvent)).append("\n");
    sb.append("    orderAcceptedEvent: ").append(toIndentedString(orderAcceptedEvent)).append("\n");
    sb.append("    orderCreatedEvent: ").append(toIndentedString(orderCreatedEvent)).append("\n");
    sb.append("    orderRatingUpdatedEvent: ").append(toIndentedString(orderRatingUpdatedEvent)).append("\n");
    sb.append("    orderRefundedEvent: ").append(toIndentedString(orderRefundedEvent)).append("\n");
    sb.append("    orderRejectedEvent: ").append(toIndentedString(orderRejectedEvent)).append("\n");
    sb.append("    orderTipUpdatedEvent: ").append(toIndentedString(orderTipUpdatedEvent)).append("\n");
    sb.append("    storeCreatedEvent: ").append(toIndentedString(storeCreatedEvent)).append("\n");
    sb.append("    storeDeletedEvent: ").append(toIndentedString(storeDeletedEvent)).append("\n");
    sb.append("    storeAddressUpdatedEvent: ").append(toIndentedString(storeAddressUpdatedEvent)).append("\n");
    sb.append("    deliveryZoneCreatedEvent: ").append(toIndentedString(deliveryZoneCreatedEvent)).append("\n");
    sb.append("    deliveryZoneUpdatedEvent: ").append(toIndentedString(deliveryZoneUpdatedEvent)).append("\n");
    sb.append("    deliveryZoneDeletedEvent: ").append(toIndentedString(deliveryZoneDeletedEvent)).append("\n");
    sb.append("    storeOpeningHoursUpdatedEvent: ").append(toIndentedString(storeOpeningHoursUpdatedEvent)).append("\n");
    sb.append("    storeBusinessHoursOverrideCreatedEvent: ").append(toIndentedString(storeBusinessHoursOverrideCreatedEvent)).append("\n");
    sb.append("    storeBusinessHoursOverrideDeletedEvent: ").append(toIndentedString(storeBusinessHoursOverrideDeletedEvent)).append("\n");
    sb.append("    storeUpdatedEvent: ").append(toIndentedString(storeUpdatedEvent)).append("\n");
    sb.append("    menuCreatedEvent: ").append(toIndentedString(menuCreatedEvent)).append("\n");
    sb.append("    menuUpdatedEvent: ").append(toIndentedString(menuUpdatedEvent)).append("\n");
    sb.append("    menuSectionCreatedEvent: ").append(toIndentedString(menuSectionCreatedEvent)).append("\n");
    sb.append("    menuSectionUpdatedEvent: ").append(toIndentedString(menuSectionUpdatedEvent)).append("\n");
    sb.append("    menuSectionDeletedEvent: ").append(toIndentedString(menuSectionDeletedEvent)).append("\n");
    sb.append("    menuSectionItemCreatedEvent: ").append(toIndentedString(menuSectionItemCreatedEvent)).append("\n");
    sb.append("    menuSectionItemUpdatedEvent: ").append(toIndentedString(menuSectionItemUpdatedEvent)).append("\n");
    sb.append("    menuSectionItemDeletedEvent: ").append(toIndentedString(menuSectionItemDeletedEvent)).append("\n");
    sb.append("    menuItemOptionSetCreatedEvent: ").append(toIndentedString(menuItemOptionSetCreatedEvent)).append("\n");
    sb.append("    menuItemOptionSetUpdatedEvent: ").append(toIndentedString(menuItemOptionSetUpdatedEvent)).append("\n");
    sb.append("    menuItemOptionSetDeletedEvent: ").append(toIndentedString(menuItemOptionSetDeletedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemCreatedEvent: ").append(toIndentedString(menuItemOptionSetItemCreatedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemUpdatedEvent: ").append(toIndentedString(menuItemOptionSetItemUpdatedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemDeletedEvent: ").append(toIndentedString(menuItemOptionSetItemDeletedEvent)).append("\n");
    sb.append("    storeGroupCreatedEvent: ").append(toIndentedString(storeGroupCreatedEvent)).append("\n");
    sb.append("    storeGroupUpdatedEvent: ").append(toIndentedString(storeGroupUpdatedEvent)).append("\n");
    sb.append("    storeGroupDeletedEvent: ").append(toIndentedString(storeGroupDeletedEvent)).append("\n");
    sb.append("    customerCreatedEvent: ").append(toIndentedString(customerCreatedEvent)).append("\n");
    sb.append("    customerUpdatedEvent: ").append(toIndentedString(customerUpdatedEvent)).append("\n");
    sb.append("    customerConsentUpdatedEvent: ").append(toIndentedString(customerConsentUpdatedEvent)).append("\n");
    sb.append("    webhookSubscriptionCreatedEvent: ").append(toIndentedString(webhookSubscriptionCreatedEvent)).append("\n");
    sb.append("    webhookSubscriptionUpdatedEvent: ").append(toIndentedString(webhookSubscriptionUpdatedEvent)).append("\n");
    sb.append("    webhookSubscriptionDeletedEvent: ").append(toIndentedString(webhookSubscriptionDeletedEvent)).append("\n");
    sb.append("    printerTurnedOnEvent: ").append(toIndentedString(printerTurnedOnEvent)).append("\n");
    sb.append("    printerTurnedOffEvent: ").append(toIndentedString(printerTurnedOffEvent)).append("\n");
    sb.append("    printerAssignedToStoreEvent: ").append(toIndentedString(printerAssignedToStoreEvent)).append("\n");
    sb.append("    printerUnassignedFromStoreEvent: ").append(toIndentedString(printerUnassignedFromStoreEvent)).append("\n");
    sb.append("    phoneCallStartedEvent: ").append(toIndentedString(phoneCallStartedEvent)).append("\n");
    sb.append("    phoneCallEndedEvent: ").append(toIndentedString(phoneCallEndedEvent)).append("\n");
    sb.append("    loyaltyCampaignCreatedEvent: ").append(toIndentedString(loyaltyCampaignCreatedEvent)).append("\n");
    sb.append("    loyaltyCampaignDeletedEvent: ").append(toIndentedString(loyaltyCampaignDeletedEvent)).append("\n");
    sb.append("    loyaltyCampaignUpdatedEvent: ").append(toIndentedString(loyaltyCampaignUpdatedEvent)).append("\n");
    sb.append("    retentionCampaignCreatedEvent: ").append(toIndentedString(retentionCampaignCreatedEvent)).append("\n");
    sb.append("    retentionCampaignDeletedEvent: ").append(toIndentedString(retentionCampaignDeletedEvent)).append("\n");
    sb.append("    retentionCampaignUpdatedEvent: ").append(toIndentedString(retentionCampaignUpdatedEvent)).append("\n");
    sb.append("    smsReceivedEvent: ").append(toIndentedString(smsReceivedEvent)).append("\n");
    sb.append("    userLoginEvent: ").append(toIndentedString(userLoginEvent)).append("\n");
    sb.append("    userCreatedEvent: ").append(toIndentedString(userCreatedEvent)).append("\n");
    sb.append("    userUpdatedEvent: ").append(toIndentedString(userUpdatedEvent)).append("\n");
    sb.append("    userDeletedEvent: ").append(toIndentedString(userDeletedEvent)).append("\n");
    sb.append("    voucherCreatedEvent: ").append(toIndentedString(voucherCreatedEvent)).append("\n");
    sb.append("    voucherUpdatedEvent: ").append(toIndentedString(voucherUpdatedEvent)).append("\n");
    sb.append("    voucherDeletedEvent: ").append(toIndentedString(voucherDeletedEvent)).append("\n");
    sb.append("    teammateInviteSentEvent: ").append(toIndentedString(teammateInviteSentEvent)).append("\n");
    sb.append("    teammateInviteAcceptedEvent: ").append(toIndentedString(teammateInviteAcceptedEvent)).append("\n");
    sb.append("    teammateUpdatedEvent: ").append(toIndentedString(teammateUpdatedEvent)).append("\n");
    sb.append("    teammateDeletedEvent: ").append(toIndentedString(teammateDeletedEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

