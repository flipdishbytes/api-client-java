/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.flipdish.apiclient.model.WhiteLabelAssetModel;
import com.flipdish.apiclient.model.WhiteLabelColorSchemeModel;
import com.flipdish.apiclient.model.WhiteLabelLanguageModel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * WhiteLabelConfig model
 */
@ApiModel(description = "WhiteLabelConfig model")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-30T11:59:09.391Z")
public class WhiteLabelConfigModel {
  @SerializedName("WhiteLabelLanguages")
  private List<WhiteLabelLanguageModel> whiteLabelLanguages = null;

  @SerializedName("WhiteLabelAssets")
  private List<WhiteLabelAssetModel> whiteLabelAssets = null;

  @SerializedName("ColorScheme")
  private WhiteLabelColorSchemeModel colorScheme = null;

  @SerializedName("WhiteLabelConfigId")
  private Integer whiteLabelConfigId = null;

  @SerializedName("WhiteLabelId")
  private Integer whiteLabelId = null;

  @SerializedName("WhiteLabelName")
  private String whiteLabelName = null;

  @SerializedName("AppNameId")
  private String appNameId = null;

  @SerializedName("OrgId")
  private String orgId = null;

  @SerializedName("SmsRestaurantName")
  private String smsRestaurantName = null;

  @SerializedName("DeepLinkUrlScheme")
  private String deepLinkUrlScheme = null;

  @SerializedName("HostName")
  private String hostName = null;

  @SerializedName("NexmoSupportSmsNumber")
  private String nexmoSupportSmsNumber = null;

  @SerializedName("TwilioSupportSmsNumber")
  private String twilioSupportSmsNumber = null;

  @SerializedName("MixpanelToken")
  private String mixpanelToken = null;

  @SerializedName("IntercomAppId")
  private String intercomAppId = null;

  @SerializedName("ShareMessageEmailSubject")
  private String shareMessageEmailSubject = null;

  @SerializedName("ShareMessageEmailMessage")
  private String shareMessageEmailMessage = null;

  @SerializedName("ShareMessageSmsMessage")
  private String shareMessageSmsMessage = null;

  @SerializedName("ShareMessageWhatsAppMessage")
  private String shareMessageWhatsAppMessage = null;

  @SerializedName("ShareMessageFacebookMessage")
  private String shareMessageFacebookMessage = null;

  @SerializedName("ShareMessageTwitterMessage")
  private String shareMessageTwitterMessage = null;

  @SerializedName("ShareMessageGenericMessage")
  private String shareMessageGenericMessage = null;

  @SerializedName("DisplayDeliveryRestaurantListScreen")
  private Boolean displayDeliveryRestaurantListScreen = null;

  @SerializedName("ContactFormType")
  private Integer contactFormType = null;

  @SerializedName("ContactPhoneNumber")
  private String contactPhoneNumber = null;

  @SerializedName("DisplayBumpSideMenuItem")
  private Boolean displayBumpSideMenuItem = null;

  @SerializedName("DisplayFreeCokeSideMenuItem")
  private Boolean displayFreeCokeSideMenuItem = null;

  @SerializedName("AppStoreUrl")
  private String appStoreUrl = null;

  @SerializedName("DeliveryEnabled")
  private Boolean deliveryEnabled = null;

  @SerializedName("PickupEnabled")
  private Boolean pickupEnabled = null;

  @SerializedName("DisplayPickupRestaurantListScreen")
  private Boolean displayPickupRestaurantListScreen = null;

  @SerializedName("DisplayCuisineTypeListAndRestaurantSearchBar")
  private Boolean displayCuisineTypeListAndRestaurantSearchBar = null;

  @SerializedName("DisplayUserRestaurantRatings")
  private Boolean displayUserRestaurantRatings = null;

  @SerializedName("ReadyToPublishWeb")
  private Boolean readyToPublishWeb = null;

  @SerializedName("ReadyToPublishIos")
  private Boolean readyToPublishIos = null;

  @SerializedName("ReadyToPublishAndroid")
  private Boolean readyToPublishAndroid = null;

  @SerializedName("DisplayFooterLinksToOtherSites")
  private Boolean displayFooterLinksToOtherSites = null;

  @SerializedName("DisplayOnlineOrderingMenu")
  private Boolean displayOnlineOrderingMenu = null;

  @SerializedName("HideAppConfigFromAdminList")
  private Boolean hideAppConfigFromAdminList = null;

  /**
   * Compliance type
   */
  @JsonAdapter(ComplianceTypeEnum.Adapter.class)
  public enum ComplianceTypeEnum {
    DEFAULT("Default"),
    
    GDPRCOMPLIANCE("GdprCompliance");

    private String value;

    ComplianceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ComplianceTypeEnum fromValue(String text) {
      for (ComplianceTypeEnum b : ComplianceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ComplianceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ComplianceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ComplianceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ComplianceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ComplianceType")
  private ComplianceTypeEnum complianceType = null;

  @SerializedName("IsMenuMigratedToRms")
  private Boolean isMenuMigratedToRms = null;

  @SerializedName("MapBoundryMaxLongitude")
  private Double mapBoundryMaxLongitude = null;

  @SerializedName("MapBoundryMinLongitude")
  private Double mapBoundryMinLongitude = null;

  @SerializedName("MapBoundryMaxLatitude")
  private Double mapBoundryMaxLatitude = null;

  @SerializedName("MapBoundryMinLatitude")
  private Double mapBoundryMinLatitude = null;

  @SerializedName("AppStoreAppleId")
  private String appStoreAppleId = null;

  @SerializedName("AppStoreToken")
  private String appStoreToken = null;

  @SerializedName("WebsiteDisplayStaticMenuPage")
  private Boolean websiteDisplayStaticMenuPage = null;

  @SerializedName("IsEmbed")
  private Boolean isEmbed = null;

  @SerializedName("DisplayTipOptionToUsersByDefault")
  private Boolean displayTipOptionToUsersByDefault = null;

  @SerializedName("EmailRequestMode")
  private Integer emailRequestMode = null;

  @SerializedName("AddressEntryType")
  private Integer addressEntryType = null;

  @SerializedName("AddressLayout")
  private Integer addressLayout = null;

  @SerializedName("Category")
  private Integer category = null;

  @SerializedName("MapCenterLatitude")
  private Double mapCenterLatitude = null;

  @SerializedName("MapCenterLongitude")
  private Double mapCenterLongitude = null;

  @SerializedName("IntercomTokenIos")
  private String intercomTokenIos = null;

  @SerializedName("IntercomTokenAndroid")
  private String intercomTokenAndroid = null;

  @SerializedName("GoogleAnalyticsTokensCsv")
  private String googleAnalyticsTokensCsv = null;

  @SerializedName("FacebookTokensCsv")
  private String facebookTokensCsv = null;

  @SerializedName("ShareMessageGenericUrl")
  private String shareMessageGenericUrl = null;

  @SerializedName("PrivateSupportEmailAddress")
  private String privateSupportEmailAddress = null;

  @SerializedName("AppStoreId")
  private String appStoreId = null;

  @SerializedName("PlayConsoleAccount")
  private Integer playConsoleAccount = null;

  @SerializedName("ApnCertificateValidAfter")
  private OffsetDateTime apnCertificateValidAfter = null;

  @SerializedName("ApnCertificateValidBefore")
  private OffsetDateTime apnCertificateValidBefore = null;

  @SerializedName("DineInEnabled")
  private Boolean dineInEnabled = null;

  @SerializedName("AppFont")
  private String appFont = null;

  @SerializedName("WhiteLabelColorSchemeId")
  private Integer whiteLabelColorSchemeId = null;

  @SerializedName("WhiteLabelImagesId")
  private Integer whiteLabelImagesId = null;

  @SerializedName("AppStoreCopyright")
  private String appStoreCopyright = null;

  @SerializedName("AppStoreDescription")
  private String appStoreDescription = null;

  @SerializedName("AppStoreShortDescription")
  private String appStoreShortDescription = null;

  @SerializedName("AppStoreKeywords")
  private String appStoreKeywords = null;

  @SerializedName("AppStoreMarketingUrl")
  private String appStoreMarketingUrl = null;

  @SerializedName("AppStoreName")
  private String appStoreName = null;

  @SerializedName("AppStorePrivacyUrl")
  private String appStorePrivacyUrl = null;

  @SerializedName("AppStoreSupportUrl")
  private String appStoreSupportUrl = null;

  @SerializedName("AppStoreReleaseNotes")
  private String appStoreReleaseNotes = null;

  @SerializedName("AppStoreIconUrl")
  private String appStoreIconUrl = null;

  @SerializedName("AppStoreIconThumbnail100Url")
  private String appStoreIconThumbnail100Url = null;

  @SerializedName("TransparentLogoUrl")
  private String transparentLogoUrl = null;

  @SerializedName("LogoImageName")
  private String logoImageName = null;

  @SerializedName("KioskNameScreenImage")
  private String kioskNameScreenImage = null;

  @SerializedName("WebToAppRedirect")
  private Integer webToAppRedirect = null;

  @SerializedName("FeaturesCsv")
  private String featuresCsv = null;

  @SerializedName("AppStorePassword")
  private String appStorePassword = null;

  @SerializedName("AppStoreTeamId")
  private String appStoreTeamId = null;

  @SerializedName("AppStoreAppGroup")
  private String appStoreAppGroup = null;

  @SerializedName("AppStoreSigningIdentity")
  private String appStoreSigningIdentity = null;

  @SerializedName("AppStoreItcTeamId")
  private String appStoreItcTeamId = null;

  @SerializedName("HeadHtml")
  private String headHtml = null;

  @SerializedName("SocialTwitterUrl")
  private String socialTwitterUrl = null;

  @SerializedName("SocialFacebookUrl")
  private String socialFacebookUrl = null;

  @SerializedName("SocialInstagramUrl")
  private String socialInstagramUrl = null;

  @SerializedName("SocialPintrestUrl")
  private String socialPintrestUrl = null;

  @SerializedName("SocialTripAdvisorUrl")
  private String socialTripAdvisorUrl = null;

  @SerializedName("SocialGooglePlusUrl")
  private String socialGooglePlusUrl = null;

  @SerializedName("SocialFourSquareUrl")
  private String socialFourSquareUrl = null;

  @SerializedName("SocialYelpUrl")
  private String socialYelpUrl = null;

  @SerializedName("WebsiteType")
  private Integer websiteType = null;

  @SerializedName("ExternalOrderingPageUrl")
  private String externalOrderingPageUrl = null;

  @SerializedName("PanaceaEnabled")
  private Boolean panaceaEnabled = null;

  @SerializedName("CookieConsentPromptEnabled")
  private Boolean cookieConsentPromptEnabled = null;

  @SerializedName("PanaceaVanityUrl")
  private String panaceaVanityUrl = null;

  @SerializedName("CountryId")
  private String countryId = null;

  @SerializedName("ReferralUserId")
  private Integer referralUserId = null;

  @SerializedName("ReferralCampaignId")
  private String referralCampaignId = null;

  public WhiteLabelConfigModel whiteLabelLanguages(List<WhiteLabelLanguageModel> whiteLabelLanguages) {
    this.whiteLabelLanguages = whiteLabelLanguages;
    return this;
  }

  public WhiteLabelConfigModel addWhiteLabelLanguagesItem(WhiteLabelLanguageModel whiteLabelLanguagesItem) {
    if (this.whiteLabelLanguages == null) {
      this.whiteLabelLanguages = new ArrayList<WhiteLabelLanguageModel>();
    }
    this.whiteLabelLanguages.add(whiteLabelLanguagesItem);
    return this;
  }

   /**
   * White label languages
   * @return whiteLabelLanguages
  **/
  @ApiModelProperty(value = "White label languages")
  public List<WhiteLabelLanguageModel> getWhiteLabelLanguages() {
    return whiteLabelLanguages;
  }

  public void setWhiteLabelLanguages(List<WhiteLabelLanguageModel> whiteLabelLanguages) {
    this.whiteLabelLanguages = whiteLabelLanguages;
  }

  public WhiteLabelConfigModel whiteLabelAssets(List<WhiteLabelAssetModel> whiteLabelAssets) {
    this.whiteLabelAssets = whiteLabelAssets;
    return this;
  }

  public WhiteLabelConfigModel addWhiteLabelAssetsItem(WhiteLabelAssetModel whiteLabelAssetsItem) {
    if (this.whiteLabelAssets == null) {
      this.whiteLabelAssets = new ArrayList<WhiteLabelAssetModel>();
    }
    this.whiteLabelAssets.add(whiteLabelAssetsItem);
    return this;
  }

   /**
   * White label assets
   * @return whiteLabelAssets
  **/
  @ApiModelProperty(value = "White label assets")
  public List<WhiteLabelAssetModel> getWhiteLabelAssets() {
    return whiteLabelAssets;
  }

  public void setWhiteLabelAssets(List<WhiteLabelAssetModel> whiteLabelAssets) {
    this.whiteLabelAssets = whiteLabelAssets;
  }

  public WhiteLabelConfigModel colorScheme(WhiteLabelColorSchemeModel colorScheme) {
    this.colorScheme = colorScheme;
    return this;
  }

   /**
   * White label color scheme
   * @return colorScheme
  **/
  @ApiModelProperty(value = "White label color scheme")
  public WhiteLabelColorSchemeModel getColorScheme() {
    return colorScheme;
  }

  public void setColorScheme(WhiteLabelColorSchemeModel colorScheme) {
    this.colorScheme = colorScheme;
  }

  public WhiteLabelConfigModel whiteLabelConfigId(Integer whiteLabelConfigId) {
    this.whiteLabelConfigId = whiteLabelConfigId;
    return this;
  }

   /**
   * White label configuration ID
   * @return whiteLabelConfigId
  **/
  @ApiModelProperty(value = "White label configuration ID")
  public Integer getWhiteLabelConfigId() {
    return whiteLabelConfigId;
  }

  public void setWhiteLabelConfigId(Integer whiteLabelConfigId) {
    this.whiteLabelConfigId = whiteLabelConfigId;
  }

  public WhiteLabelConfigModel whiteLabelId(Integer whiteLabelId) {
    this.whiteLabelId = whiteLabelId;
    return this;
  }

   /**
   * White label ID
   * @return whiteLabelId
  **/
  @ApiModelProperty(value = "White label ID")
  public Integer getWhiteLabelId() {
    return whiteLabelId;
  }

  public void setWhiteLabelId(Integer whiteLabelId) {
    this.whiteLabelId = whiteLabelId;
  }

  public WhiteLabelConfigModel whiteLabelName(String whiteLabelName) {
    this.whiteLabelName = whiteLabelName;
    return this;
  }

   /**
   * White label name
   * @return whiteLabelName
  **/
  @ApiModelProperty(value = "White label name")
  public String getWhiteLabelName() {
    return whiteLabelName;
  }

  public void setWhiteLabelName(String whiteLabelName) {
    this.whiteLabelName = whiteLabelName;
  }

  public WhiteLabelConfigModel appNameId(String appNameId) {
    this.appNameId = appNameId;
    return this;
  }

   /**
   * App name ID (Bundle ID Suffix)
   * @return appNameId
  **/
  @ApiModelProperty(value = "App name ID (Bundle ID Suffix)")
  public String getAppNameId() {
    return appNameId;
  }

  public void setAppNameId(String appNameId) {
    this.appNameId = appNameId;
  }

  public WhiteLabelConfigModel orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Organization ID
   * @return orgId
  **/
  @ApiModelProperty(value = "Organization ID")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public WhiteLabelConfigModel smsRestaurantName(String smsRestaurantName) {
    this.smsRestaurantName = smsRestaurantName;
    return this;
  }

   /**
   * SMS restaurant name
   * @return smsRestaurantName
  **/
  @ApiModelProperty(value = "SMS restaurant name")
  public String getSmsRestaurantName() {
    return smsRestaurantName;
  }

  public void setSmsRestaurantName(String smsRestaurantName) {
    this.smsRestaurantName = smsRestaurantName;
  }

  public WhiteLabelConfigModel deepLinkUrlScheme(String deepLinkUrlScheme) {
    this.deepLinkUrlScheme = deepLinkUrlScheme;
    return this;
  }

   /**
   * Deep link URL scheme
   * @return deepLinkUrlScheme
  **/
  @ApiModelProperty(value = "Deep link URL scheme")
  public String getDeepLinkUrlScheme() {
    return deepLinkUrlScheme;
  }

  public void setDeepLinkUrlScheme(String deepLinkUrlScheme) {
    this.deepLinkUrlScheme = deepLinkUrlScheme;
  }

  public WhiteLabelConfigModel hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * Host name
   * @return hostName
  **/
  @ApiModelProperty(value = "Host name")
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }

  public WhiteLabelConfigModel nexmoSupportSmsNumber(String nexmoSupportSmsNumber) {
    this.nexmoSupportSmsNumber = nexmoSupportSmsNumber;
    return this;
  }

   /**
   * Nexmo support SMS number
   * @return nexmoSupportSmsNumber
  **/
  @ApiModelProperty(value = "Nexmo support SMS number")
  public String getNexmoSupportSmsNumber() {
    return nexmoSupportSmsNumber;
  }

  public void setNexmoSupportSmsNumber(String nexmoSupportSmsNumber) {
    this.nexmoSupportSmsNumber = nexmoSupportSmsNumber;
  }

  public WhiteLabelConfigModel twilioSupportSmsNumber(String twilioSupportSmsNumber) {
    this.twilioSupportSmsNumber = twilioSupportSmsNumber;
    return this;
  }

   /**
   * Twilio support SMS number
   * @return twilioSupportSmsNumber
  **/
  @ApiModelProperty(value = "Twilio support SMS number")
  public String getTwilioSupportSmsNumber() {
    return twilioSupportSmsNumber;
  }

  public void setTwilioSupportSmsNumber(String twilioSupportSmsNumber) {
    this.twilioSupportSmsNumber = twilioSupportSmsNumber;
  }

  public WhiteLabelConfigModel mixpanelToken(String mixpanelToken) {
    this.mixpanelToken = mixpanelToken;
    return this;
  }

   /**
   * Mixpanel token
   * @return mixpanelToken
  **/
  @ApiModelProperty(value = "Mixpanel token")
  public String getMixpanelToken() {
    return mixpanelToken;
  }

  public void setMixpanelToken(String mixpanelToken) {
    this.mixpanelToken = mixpanelToken;
  }

  public WhiteLabelConfigModel intercomAppId(String intercomAppId) {
    this.intercomAppId = intercomAppId;
    return this;
  }

   /**
   * Intercom app ID
   * @return intercomAppId
  **/
  @ApiModelProperty(value = "Intercom app ID")
  public String getIntercomAppId() {
    return intercomAppId;
  }

  public void setIntercomAppId(String intercomAppId) {
    this.intercomAppId = intercomAppId;
  }

  public WhiteLabelConfigModel shareMessageEmailSubject(String shareMessageEmailSubject) {
    this.shareMessageEmailSubject = shareMessageEmailSubject;
    return this;
  }

   /**
   * Share message email subject
   * @return shareMessageEmailSubject
  **/
  @ApiModelProperty(value = "Share message email subject")
  public String getShareMessageEmailSubject() {
    return shareMessageEmailSubject;
  }

  public void setShareMessageEmailSubject(String shareMessageEmailSubject) {
    this.shareMessageEmailSubject = shareMessageEmailSubject;
  }

  public WhiteLabelConfigModel shareMessageEmailMessage(String shareMessageEmailMessage) {
    this.shareMessageEmailMessage = shareMessageEmailMessage;
    return this;
  }

   /**
   * Share message email message
   * @return shareMessageEmailMessage
  **/
  @ApiModelProperty(value = "Share message email message")
  public String getShareMessageEmailMessage() {
    return shareMessageEmailMessage;
  }

  public void setShareMessageEmailMessage(String shareMessageEmailMessage) {
    this.shareMessageEmailMessage = shareMessageEmailMessage;
  }

  public WhiteLabelConfigModel shareMessageSmsMessage(String shareMessageSmsMessage) {
    this.shareMessageSmsMessage = shareMessageSmsMessage;
    return this;
  }

   /**
   * Share message SMS message
   * @return shareMessageSmsMessage
  **/
  @ApiModelProperty(value = "Share message SMS message")
  public String getShareMessageSmsMessage() {
    return shareMessageSmsMessage;
  }

  public void setShareMessageSmsMessage(String shareMessageSmsMessage) {
    this.shareMessageSmsMessage = shareMessageSmsMessage;
  }

  public WhiteLabelConfigModel shareMessageWhatsAppMessage(String shareMessageWhatsAppMessage) {
    this.shareMessageWhatsAppMessage = shareMessageWhatsAppMessage;
    return this;
  }

   /**
   * Share message WhatsApp message
   * @return shareMessageWhatsAppMessage
  **/
  @ApiModelProperty(value = "Share message WhatsApp message")
  public String getShareMessageWhatsAppMessage() {
    return shareMessageWhatsAppMessage;
  }

  public void setShareMessageWhatsAppMessage(String shareMessageWhatsAppMessage) {
    this.shareMessageWhatsAppMessage = shareMessageWhatsAppMessage;
  }

  public WhiteLabelConfigModel shareMessageFacebookMessage(String shareMessageFacebookMessage) {
    this.shareMessageFacebookMessage = shareMessageFacebookMessage;
    return this;
  }

   /**
   * Share message Facebook message
   * @return shareMessageFacebookMessage
  **/
  @ApiModelProperty(value = "Share message Facebook message")
  public String getShareMessageFacebookMessage() {
    return shareMessageFacebookMessage;
  }

  public void setShareMessageFacebookMessage(String shareMessageFacebookMessage) {
    this.shareMessageFacebookMessage = shareMessageFacebookMessage;
  }

  public WhiteLabelConfigModel shareMessageTwitterMessage(String shareMessageTwitterMessage) {
    this.shareMessageTwitterMessage = shareMessageTwitterMessage;
    return this;
  }

   /**
   * Share message Twitter message
   * @return shareMessageTwitterMessage
  **/
  @ApiModelProperty(value = "Share message Twitter message")
  public String getShareMessageTwitterMessage() {
    return shareMessageTwitterMessage;
  }

  public void setShareMessageTwitterMessage(String shareMessageTwitterMessage) {
    this.shareMessageTwitterMessage = shareMessageTwitterMessage;
  }

  public WhiteLabelConfigModel shareMessageGenericMessage(String shareMessageGenericMessage) {
    this.shareMessageGenericMessage = shareMessageGenericMessage;
    return this;
  }

   /**
   * Share message generic message
   * @return shareMessageGenericMessage
  **/
  @ApiModelProperty(value = "Share message generic message")
  public String getShareMessageGenericMessage() {
    return shareMessageGenericMessage;
  }

  public void setShareMessageGenericMessage(String shareMessageGenericMessage) {
    this.shareMessageGenericMessage = shareMessageGenericMessage;
  }

  public WhiteLabelConfigModel displayDeliveryRestaurantListScreen(Boolean displayDeliveryRestaurantListScreen) {
    this.displayDeliveryRestaurantListScreen = displayDeliveryRestaurantListScreen;
    return this;
  }

   /**
   * Display delivery restaurant list screen
   * @return displayDeliveryRestaurantListScreen
  **/
  @ApiModelProperty(value = "Display delivery restaurant list screen")
  public Boolean isDisplayDeliveryRestaurantListScreen() {
    return displayDeliveryRestaurantListScreen;
  }

  public void setDisplayDeliveryRestaurantListScreen(Boolean displayDeliveryRestaurantListScreen) {
    this.displayDeliveryRestaurantListScreen = displayDeliveryRestaurantListScreen;
  }

  public WhiteLabelConfigModel contactFormType(Integer contactFormType) {
    this.contactFormType = contactFormType;
    return this;
  }

   /**
   * Contact form type
   * @return contactFormType
  **/
  @ApiModelProperty(value = "Contact form type")
  public Integer getContactFormType() {
    return contactFormType;
  }

  public void setContactFormType(Integer contactFormType) {
    this.contactFormType = contactFormType;
  }

  public WhiteLabelConfigModel contactPhoneNumber(String contactPhoneNumber) {
    this.contactPhoneNumber = contactPhoneNumber;
    return this;
  }

   /**
   * Contact phone number
   * @return contactPhoneNumber
  **/
  @ApiModelProperty(value = "Contact phone number")
  public String getContactPhoneNumber() {
    return contactPhoneNumber;
  }

  public void setContactPhoneNumber(String contactPhoneNumber) {
    this.contactPhoneNumber = contactPhoneNumber;
  }

  public WhiteLabelConfigModel displayBumpSideMenuItem(Boolean displayBumpSideMenuItem) {
    this.displayBumpSideMenuItem = displayBumpSideMenuItem;
    return this;
  }

   /**
   * Display bump side menu item
   * @return displayBumpSideMenuItem
  **/
  @ApiModelProperty(value = "Display bump side menu item")
  public Boolean isDisplayBumpSideMenuItem() {
    return displayBumpSideMenuItem;
  }

  public void setDisplayBumpSideMenuItem(Boolean displayBumpSideMenuItem) {
    this.displayBumpSideMenuItem = displayBumpSideMenuItem;
  }

  public WhiteLabelConfigModel displayFreeCokeSideMenuItem(Boolean displayFreeCokeSideMenuItem) {
    this.displayFreeCokeSideMenuItem = displayFreeCokeSideMenuItem;
    return this;
  }

   /**
   * Display free coke side menu item
   * @return displayFreeCokeSideMenuItem
  **/
  @ApiModelProperty(value = "Display free coke side menu item")
  public Boolean isDisplayFreeCokeSideMenuItem() {
    return displayFreeCokeSideMenuItem;
  }

  public void setDisplayFreeCokeSideMenuItem(Boolean displayFreeCokeSideMenuItem) {
    this.displayFreeCokeSideMenuItem = displayFreeCokeSideMenuItem;
  }

  public WhiteLabelConfigModel appStoreUrl(String appStoreUrl) {
    this.appStoreUrl = appStoreUrl;
    return this;
  }

   /**
   * App store URL
   * @return appStoreUrl
  **/
  @ApiModelProperty(value = "App store URL")
  public String getAppStoreUrl() {
    return appStoreUrl;
  }

  public void setAppStoreUrl(String appStoreUrl) {
    this.appStoreUrl = appStoreUrl;
  }

  public WhiteLabelConfigModel deliveryEnabled(Boolean deliveryEnabled) {
    this.deliveryEnabled = deliveryEnabled;
    return this;
  }

   /**
   * Delivery enabled
   * @return deliveryEnabled
  **/
  @ApiModelProperty(value = "Delivery enabled")
  public Boolean isDeliveryEnabled() {
    return deliveryEnabled;
  }

  public void setDeliveryEnabled(Boolean deliveryEnabled) {
    this.deliveryEnabled = deliveryEnabled;
  }

  public WhiteLabelConfigModel pickupEnabled(Boolean pickupEnabled) {
    this.pickupEnabled = pickupEnabled;
    return this;
  }

   /**
   * Pickup enabled
   * @return pickupEnabled
  **/
  @ApiModelProperty(value = "Pickup enabled")
  public Boolean isPickupEnabled() {
    return pickupEnabled;
  }

  public void setPickupEnabled(Boolean pickupEnabled) {
    this.pickupEnabled = pickupEnabled;
  }

  public WhiteLabelConfigModel displayPickupRestaurantListScreen(Boolean displayPickupRestaurantListScreen) {
    this.displayPickupRestaurantListScreen = displayPickupRestaurantListScreen;
    return this;
  }

   /**
   * Display pickup restaurant list screen
   * @return displayPickupRestaurantListScreen
  **/
  @ApiModelProperty(value = "Display pickup restaurant list screen")
  public Boolean isDisplayPickupRestaurantListScreen() {
    return displayPickupRestaurantListScreen;
  }

  public void setDisplayPickupRestaurantListScreen(Boolean displayPickupRestaurantListScreen) {
    this.displayPickupRestaurantListScreen = displayPickupRestaurantListScreen;
  }

  public WhiteLabelConfigModel displayCuisineTypeListAndRestaurantSearchBar(Boolean displayCuisineTypeListAndRestaurantSearchBar) {
    this.displayCuisineTypeListAndRestaurantSearchBar = displayCuisineTypeListAndRestaurantSearchBar;
    return this;
  }

   /**
   * Display cuisine type list and restaurant search bar
   * @return displayCuisineTypeListAndRestaurantSearchBar
  **/
  @ApiModelProperty(value = "Display cuisine type list and restaurant search bar")
  public Boolean isDisplayCuisineTypeListAndRestaurantSearchBar() {
    return displayCuisineTypeListAndRestaurantSearchBar;
  }

  public void setDisplayCuisineTypeListAndRestaurantSearchBar(Boolean displayCuisineTypeListAndRestaurantSearchBar) {
    this.displayCuisineTypeListAndRestaurantSearchBar = displayCuisineTypeListAndRestaurantSearchBar;
  }

  public WhiteLabelConfigModel displayUserRestaurantRatings(Boolean displayUserRestaurantRatings) {
    this.displayUserRestaurantRatings = displayUserRestaurantRatings;
    return this;
  }

   /**
   * Display user restaurant ratings
   * @return displayUserRestaurantRatings
  **/
  @ApiModelProperty(value = "Display user restaurant ratings")
  public Boolean isDisplayUserRestaurantRatings() {
    return displayUserRestaurantRatings;
  }

  public void setDisplayUserRestaurantRatings(Boolean displayUserRestaurantRatings) {
    this.displayUserRestaurantRatings = displayUserRestaurantRatings;
  }

  public WhiteLabelConfigModel readyToPublishWeb(Boolean readyToPublishWeb) {
    this.readyToPublishWeb = readyToPublishWeb;
    return this;
  }

   /**
   * Ready to publish web
   * @return readyToPublishWeb
  **/
  @ApiModelProperty(value = "Ready to publish web")
  public Boolean isReadyToPublishWeb() {
    return readyToPublishWeb;
  }

  public void setReadyToPublishWeb(Boolean readyToPublishWeb) {
    this.readyToPublishWeb = readyToPublishWeb;
  }

  public WhiteLabelConfigModel readyToPublishIos(Boolean readyToPublishIos) {
    this.readyToPublishIos = readyToPublishIos;
    return this;
  }

   /**
   * Ready to publish iOS
   * @return readyToPublishIos
  **/
  @ApiModelProperty(value = "Ready to publish iOS")
  public Boolean isReadyToPublishIos() {
    return readyToPublishIos;
  }

  public void setReadyToPublishIos(Boolean readyToPublishIos) {
    this.readyToPublishIos = readyToPublishIos;
  }

  public WhiteLabelConfigModel readyToPublishAndroid(Boolean readyToPublishAndroid) {
    this.readyToPublishAndroid = readyToPublishAndroid;
    return this;
  }

   /**
   * Ready to publish Android
   * @return readyToPublishAndroid
  **/
  @ApiModelProperty(value = "Ready to publish Android")
  public Boolean isReadyToPublishAndroid() {
    return readyToPublishAndroid;
  }

  public void setReadyToPublishAndroid(Boolean readyToPublishAndroid) {
    this.readyToPublishAndroid = readyToPublishAndroid;
  }

  public WhiteLabelConfigModel displayFooterLinksToOtherSites(Boolean displayFooterLinksToOtherSites) {
    this.displayFooterLinksToOtherSites = displayFooterLinksToOtherSites;
    return this;
  }

   /**
   * Display footer links to other sites
   * @return displayFooterLinksToOtherSites
  **/
  @ApiModelProperty(value = "Display footer links to other sites")
  public Boolean isDisplayFooterLinksToOtherSites() {
    return displayFooterLinksToOtherSites;
  }

  public void setDisplayFooterLinksToOtherSites(Boolean displayFooterLinksToOtherSites) {
    this.displayFooterLinksToOtherSites = displayFooterLinksToOtherSites;
  }

  public WhiteLabelConfigModel displayOnlineOrderingMenu(Boolean displayOnlineOrderingMenu) {
    this.displayOnlineOrderingMenu = displayOnlineOrderingMenu;
    return this;
  }

   /**
   * Display online ordering menu
   * @return displayOnlineOrderingMenu
  **/
  @ApiModelProperty(value = "Display online ordering menu")
  public Boolean isDisplayOnlineOrderingMenu() {
    return displayOnlineOrderingMenu;
  }

  public void setDisplayOnlineOrderingMenu(Boolean displayOnlineOrderingMenu) {
    this.displayOnlineOrderingMenu = displayOnlineOrderingMenu;
  }

  public WhiteLabelConfigModel hideAppConfigFromAdminList(Boolean hideAppConfigFromAdminList) {
    this.hideAppConfigFromAdminList = hideAppConfigFromAdminList;
    return this;
  }

   /**
   * Hide app config from admin list
   * @return hideAppConfigFromAdminList
  **/
  @ApiModelProperty(value = "Hide app config from admin list")
  public Boolean isHideAppConfigFromAdminList() {
    return hideAppConfigFromAdminList;
  }

  public void setHideAppConfigFromAdminList(Boolean hideAppConfigFromAdminList) {
    this.hideAppConfigFromAdminList = hideAppConfigFromAdminList;
  }

  public WhiteLabelConfigModel complianceType(ComplianceTypeEnum complianceType) {
    this.complianceType = complianceType;
    return this;
  }

   /**
   * Compliance type
   * @return complianceType
  **/
  @ApiModelProperty(value = "Compliance type")
  public ComplianceTypeEnum getComplianceType() {
    return complianceType;
  }

  public void setComplianceType(ComplianceTypeEnum complianceType) {
    this.complianceType = complianceType;
  }

  public WhiteLabelConfigModel isMenuMigratedToRms(Boolean isMenuMigratedToRms) {
    this.isMenuMigratedToRms = isMenuMigratedToRms;
    return this;
  }

   /**
   * Is menu migrated to RMS
   * @return isMenuMigratedToRms
  **/
  @ApiModelProperty(value = "Is menu migrated to RMS")
  public Boolean isIsMenuMigratedToRms() {
    return isMenuMigratedToRms;
  }

  public void setIsMenuMigratedToRms(Boolean isMenuMigratedToRms) {
    this.isMenuMigratedToRms = isMenuMigratedToRms;
  }

  public WhiteLabelConfigModel mapBoundryMaxLongitude(Double mapBoundryMaxLongitude) {
    this.mapBoundryMaxLongitude = mapBoundryMaxLongitude;
    return this;
  }

   /**
   * Map boundary max longitude
   * @return mapBoundryMaxLongitude
  **/
  @ApiModelProperty(value = "Map boundary max longitude")
  public Double getMapBoundryMaxLongitude() {
    return mapBoundryMaxLongitude;
  }

  public void setMapBoundryMaxLongitude(Double mapBoundryMaxLongitude) {
    this.mapBoundryMaxLongitude = mapBoundryMaxLongitude;
  }

  public WhiteLabelConfigModel mapBoundryMinLongitude(Double mapBoundryMinLongitude) {
    this.mapBoundryMinLongitude = mapBoundryMinLongitude;
    return this;
  }

   /**
   * Map boundary min longitude
   * @return mapBoundryMinLongitude
  **/
  @ApiModelProperty(value = "Map boundary min longitude")
  public Double getMapBoundryMinLongitude() {
    return mapBoundryMinLongitude;
  }

  public void setMapBoundryMinLongitude(Double mapBoundryMinLongitude) {
    this.mapBoundryMinLongitude = mapBoundryMinLongitude;
  }

  public WhiteLabelConfigModel mapBoundryMaxLatitude(Double mapBoundryMaxLatitude) {
    this.mapBoundryMaxLatitude = mapBoundryMaxLatitude;
    return this;
  }

   /**
   * Map boundary max latitude
   * @return mapBoundryMaxLatitude
  **/
  @ApiModelProperty(value = "Map boundary max latitude")
  public Double getMapBoundryMaxLatitude() {
    return mapBoundryMaxLatitude;
  }

  public void setMapBoundryMaxLatitude(Double mapBoundryMaxLatitude) {
    this.mapBoundryMaxLatitude = mapBoundryMaxLatitude;
  }

  public WhiteLabelConfigModel mapBoundryMinLatitude(Double mapBoundryMinLatitude) {
    this.mapBoundryMinLatitude = mapBoundryMinLatitude;
    return this;
  }

   /**
   * Map boundary min latitude
   * @return mapBoundryMinLatitude
  **/
  @ApiModelProperty(value = "Map boundary min latitude")
  public Double getMapBoundryMinLatitude() {
    return mapBoundryMinLatitude;
  }

  public void setMapBoundryMinLatitude(Double mapBoundryMinLatitude) {
    this.mapBoundryMinLatitude = mapBoundryMinLatitude;
  }

  public WhiteLabelConfigModel appStoreAppleId(String appStoreAppleId) {
    this.appStoreAppleId = appStoreAppleId;
    return this;
  }

   /**
   * App store Apple ID
   * @return appStoreAppleId
  **/
  @ApiModelProperty(value = "App store Apple ID")
  public String getAppStoreAppleId() {
    return appStoreAppleId;
  }

  public void setAppStoreAppleId(String appStoreAppleId) {
    this.appStoreAppleId = appStoreAppleId;
  }

  public WhiteLabelConfigModel appStoreToken(String appStoreToken) {
    this.appStoreToken = appStoreToken;
    return this;
  }

   /**
   * App store token
   * @return appStoreToken
  **/
  @ApiModelProperty(value = "App store token")
  public String getAppStoreToken() {
    return appStoreToken;
  }

  public void setAppStoreToken(String appStoreToken) {
    this.appStoreToken = appStoreToken;
  }

  public WhiteLabelConfigModel websiteDisplayStaticMenuPage(Boolean websiteDisplayStaticMenuPage) {
    this.websiteDisplayStaticMenuPage = websiteDisplayStaticMenuPage;
    return this;
  }

   /**
   * Website display static menu page
   * @return websiteDisplayStaticMenuPage
  **/
  @ApiModelProperty(value = "Website display static menu page")
  public Boolean isWebsiteDisplayStaticMenuPage() {
    return websiteDisplayStaticMenuPage;
  }

  public void setWebsiteDisplayStaticMenuPage(Boolean websiteDisplayStaticMenuPage) {
    this.websiteDisplayStaticMenuPage = websiteDisplayStaticMenuPage;
  }

  public WhiteLabelConfigModel isEmbed(Boolean isEmbed) {
    this.isEmbed = isEmbed;
    return this;
  }

   /**
   * Is embed
   * @return isEmbed
  **/
  @ApiModelProperty(value = "Is embed")
  public Boolean isIsEmbed() {
    return isEmbed;
  }

  public void setIsEmbed(Boolean isEmbed) {
    this.isEmbed = isEmbed;
  }

  public WhiteLabelConfigModel displayTipOptionToUsersByDefault(Boolean displayTipOptionToUsersByDefault) {
    this.displayTipOptionToUsersByDefault = displayTipOptionToUsersByDefault;
    return this;
  }

   /**
   * Display tip option to users by default
   * @return displayTipOptionToUsersByDefault
  **/
  @ApiModelProperty(value = "Display tip option to users by default")
  public Boolean isDisplayTipOptionToUsersByDefault() {
    return displayTipOptionToUsersByDefault;
  }

  public void setDisplayTipOptionToUsersByDefault(Boolean displayTipOptionToUsersByDefault) {
    this.displayTipOptionToUsersByDefault = displayTipOptionToUsersByDefault;
  }

  public WhiteLabelConfigModel emailRequestMode(Integer emailRequestMode) {
    this.emailRequestMode = emailRequestMode;
    return this;
  }

   /**
   * Email request mode
   * @return emailRequestMode
  **/
  @ApiModelProperty(value = "Email request mode")
  public Integer getEmailRequestMode() {
    return emailRequestMode;
  }

  public void setEmailRequestMode(Integer emailRequestMode) {
    this.emailRequestMode = emailRequestMode;
  }

  public WhiteLabelConfigModel addressEntryType(Integer addressEntryType) {
    this.addressEntryType = addressEntryType;
    return this;
  }

   /**
   * Address entry type
   * @return addressEntryType
  **/
  @ApiModelProperty(value = "Address entry type")
  public Integer getAddressEntryType() {
    return addressEntryType;
  }

  public void setAddressEntryType(Integer addressEntryType) {
    this.addressEntryType = addressEntryType;
  }

  public WhiteLabelConfigModel addressLayout(Integer addressLayout) {
    this.addressLayout = addressLayout;
    return this;
  }

   /**
   * Address layout
   * @return addressLayout
  **/
  @ApiModelProperty(value = "Address layout")
  public Integer getAddressLayout() {
    return addressLayout;
  }

  public void setAddressLayout(Integer addressLayout) {
    this.addressLayout = addressLayout;
  }

  public WhiteLabelConfigModel category(Integer category) {
    this.category = category;
    return this;
  }

   /**
   * Category
   * @return category
  **/
  @ApiModelProperty(value = "Category")
  public Integer getCategory() {
    return category;
  }

  public void setCategory(Integer category) {
    this.category = category;
  }

  public WhiteLabelConfigModel mapCenterLatitude(Double mapCenterLatitude) {
    this.mapCenterLatitude = mapCenterLatitude;
    return this;
  }

   /**
   * Map center latitude
   * @return mapCenterLatitude
  **/
  @ApiModelProperty(value = "Map center latitude")
  public Double getMapCenterLatitude() {
    return mapCenterLatitude;
  }

  public void setMapCenterLatitude(Double mapCenterLatitude) {
    this.mapCenterLatitude = mapCenterLatitude;
  }

  public WhiteLabelConfigModel mapCenterLongitude(Double mapCenterLongitude) {
    this.mapCenterLongitude = mapCenterLongitude;
    return this;
  }

   /**
   * Map center longitude
   * @return mapCenterLongitude
  **/
  @ApiModelProperty(value = "Map center longitude")
  public Double getMapCenterLongitude() {
    return mapCenterLongitude;
  }

  public void setMapCenterLongitude(Double mapCenterLongitude) {
    this.mapCenterLongitude = mapCenterLongitude;
  }

  public WhiteLabelConfigModel intercomTokenIos(String intercomTokenIos) {
    this.intercomTokenIos = intercomTokenIos;
    return this;
  }

   /**
   * Intercom token iOS
   * @return intercomTokenIos
  **/
  @ApiModelProperty(value = "Intercom token iOS")
  public String getIntercomTokenIos() {
    return intercomTokenIos;
  }

  public void setIntercomTokenIos(String intercomTokenIos) {
    this.intercomTokenIos = intercomTokenIos;
  }

  public WhiteLabelConfigModel intercomTokenAndroid(String intercomTokenAndroid) {
    this.intercomTokenAndroid = intercomTokenAndroid;
    return this;
  }

   /**
   * Intercom token Android
   * @return intercomTokenAndroid
  **/
  @ApiModelProperty(value = "Intercom token Android")
  public String getIntercomTokenAndroid() {
    return intercomTokenAndroid;
  }

  public void setIntercomTokenAndroid(String intercomTokenAndroid) {
    this.intercomTokenAndroid = intercomTokenAndroid;
  }

  public WhiteLabelConfigModel googleAnalyticsTokensCsv(String googleAnalyticsTokensCsv) {
    this.googleAnalyticsTokensCsv = googleAnalyticsTokensCsv;
    return this;
  }

   /**
   * Google Analytics tokens CSV
   * @return googleAnalyticsTokensCsv
  **/
  @ApiModelProperty(value = "Google Analytics tokens CSV")
  public String getGoogleAnalyticsTokensCsv() {
    return googleAnalyticsTokensCsv;
  }

  public void setGoogleAnalyticsTokensCsv(String googleAnalyticsTokensCsv) {
    this.googleAnalyticsTokensCsv = googleAnalyticsTokensCsv;
  }

  public WhiteLabelConfigModel facebookTokensCsv(String facebookTokensCsv) {
    this.facebookTokensCsv = facebookTokensCsv;
    return this;
  }

   /**
   * Facebook tokens CSV
   * @return facebookTokensCsv
  **/
  @ApiModelProperty(value = "Facebook tokens CSV")
  public String getFacebookTokensCsv() {
    return facebookTokensCsv;
  }

  public void setFacebookTokensCsv(String facebookTokensCsv) {
    this.facebookTokensCsv = facebookTokensCsv;
  }

  public WhiteLabelConfigModel shareMessageGenericUrl(String shareMessageGenericUrl) {
    this.shareMessageGenericUrl = shareMessageGenericUrl;
    return this;
  }

   /**
   * Share message generic URL
   * @return shareMessageGenericUrl
  **/
  @ApiModelProperty(value = "Share message generic URL")
  public String getShareMessageGenericUrl() {
    return shareMessageGenericUrl;
  }

  public void setShareMessageGenericUrl(String shareMessageGenericUrl) {
    this.shareMessageGenericUrl = shareMessageGenericUrl;
  }

  public WhiteLabelConfigModel privateSupportEmailAddress(String privateSupportEmailAddress) {
    this.privateSupportEmailAddress = privateSupportEmailAddress;
    return this;
  }

   /**
   * Private support email address
   * @return privateSupportEmailAddress
  **/
  @ApiModelProperty(value = "Private support email address")
  public String getPrivateSupportEmailAddress() {
    return privateSupportEmailAddress;
  }

  public void setPrivateSupportEmailAddress(String privateSupportEmailAddress) {
    this.privateSupportEmailAddress = privateSupportEmailAddress;
  }

  public WhiteLabelConfigModel appStoreId(String appStoreId) {
    this.appStoreId = appStoreId;
    return this;
  }

   /**
   * App store ID
   * @return appStoreId
  **/
  @ApiModelProperty(value = "App store ID")
  public String getAppStoreId() {
    return appStoreId;
  }

  public void setAppStoreId(String appStoreId) {
    this.appStoreId = appStoreId;
  }

  public WhiteLabelConfigModel playConsoleAccount(Integer playConsoleAccount) {
    this.playConsoleAccount = playConsoleAccount;
    return this;
  }

   /**
   * Play console account
   * @return playConsoleAccount
  **/
  @ApiModelProperty(value = "Play console account")
  public Integer getPlayConsoleAccount() {
    return playConsoleAccount;
  }

  public void setPlayConsoleAccount(Integer playConsoleAccount) {
    this.playConsoleAccount = playConsoleAccount;
  }

  public WhiteLabelConfigModel apnCertificateValidAfter(OffsetDateTime apnCertificateValidAfter) {
    this.apnCertificateValidAfter = apnCertificateValidAfter;
    return this;
  }

   /**
   * APN certificate valid after
   * @return apnCertificateValidAfter
  **/
  @ApiModelProperty(value = "APN certificate valid after")
  public OffsetDateTime getApnCertificateValidAfter() {
    return apnCertificateValidAfter;
  }

  public void setApnCertificateValidAfter(OffsetDateTime apnCertificateValidAfter) {
    this.apnCertificateValidAfter = apnCertificateValidAfter;
  }

  public WhiteLabelConfigModel apnCertificateValidBefore(OffsetDateTime apnCertificateValidBefore) {
    this.apnCertificateValidBefore = apnCertificateValidBefore;
    return this;
  }

   /**
   * APN certificate valid before
   * @return apnCertificateValidBefore
  **/
  @ApiModelProperty(value = "APN certificate valid before")
  public OffsetDateTime getApnCertificateValidBefore() {
    return apnCertificateValidBefore;
  }

  public void setApnCertificateValidBefore(OffsetDateTime apnCertificateValidBefore) {
    this.apnCertificateValidBefore = apnCertificateValidBefore;
  }

  public WhiteLabelConfigModel dineInEnabled(Boolean dineInEnabled) {
    this.dineInEnabled = dineInEnabled;
    return this;
  }

   /**
   * Dine in enabled
   * @return dineInEnabled
  **/
  @ApiModelProperty(value = "Dine in enabled")
  public Boolean isDineInEnabled() {
    return dineInEnabled;
  }

  public void setDineInEnabled(Boolean dineInEnabled) {
    this.dineInEnabled = dineInEnabled;
  }

  public WhiteLabelConfigModel appFont(String appFont) {
    this.appFont = appFont;
    return this;
  }

   /**
   * App font
   * @return appFont
  **/
  @ApiModelProperty(value = "App font")
  public String getAppFont() {
    return appFont;
  }

  public void setAppFont(String appFont) {
    this.appFont = appFont;
  }

  public WhiteLabelConfigModel whiteLabelColorSchemeId(Integer whiteLabelColorSchemeId) {
    this.whiteLabelColorSchemeId = whiteLabelColorSchemeId;
    return this;
  }

   /**
   * White label color scheme ID
   * @return whiteLabelColorSchemeId
  **/
  @ApiModelProperty(value = "White label color scheme ID")
  public Integer getWhiteLabelColorSchemeId() {
    return whiteLabelColorSchemeId;
  }

  public void setWhiteLabelColorSchemeId(Integer whiteLabelColorSchemeId) {
    this.whiteLabelColorSchemeId = whiteLabelColorSchemeId;
  }

  public WhiteLabelConfigModel whiteLabelImagesId(Integer whiteLabelImagesId) {
    this.whiteLabelImagesId = whiteLabelImagesId;
    return this;
  }

   /**
   * White label images ID
   * @return whiteLabelImagesId
  **/
  @ApiModelProperty(value = "White label images ID")
  public Integer getWhiteLabelImagesId() {
    return whiteLabelImagesId;
  }

  public void setWhiteLabelImagesId(Integer whiteLabelImagesId) {
    this.whiteLabelImagesId = whiteLabelImagesId;
  }

  public WhiteLabelConfigModel appStoreCopyright(String appStoreCopyright) {
    this.appStoreCopyright = appStoreCopyright;
    return this;
  }

   /**
   * App store copyright
   * @return appStoreCopyright
  **/
  @ApiModelProperty(value = "App store copyright")
  public String getAppStoreCopyright() {
    return appStoreCopyright;
  }

  public void setAppStoreCopyright(String appStoreCopyright) {
    this.appStoreCopyright = appStoreCopyright;
  }

  public WhiteLabelConfigModel appStoreDescription(String appStoreDescription) {
    this.appStoreDescription = appStoreDescription;
    return this;
  }

   /**
   * App store description
   * @return appStoreDescription
  **/
  @ApiModelProperty(value = "App store description")
  public String getAppStoreDescription() {
    return appStoreDescription;
  }

  public void setAppStoreDescription(String appStoreDescription) {
    this.appStoreDescription = appStoreDescription;
  }

  public WhiteLabelConfigModel appStoreShortDescription(String appStoreShortDescription) {
    this.appStoreShortDescription = appStoreShortDescription;
    return this;
  }

   /**
   * App store short description
   * @return appStoreShortDescription
  **/
  @ApiModelProperty(value = "App store short description")
  public String getAppStoreShortDescription() {
    return appStoreShortDescription;
  }

  public void setAppStoreShortDescription(String appStoreShortDescription) {
    this.appStoreShortDescription = appStoreShortDescription;
  }

  public WhiteLabelConfigModel appStoreKeywords(String appStoreKeywords) {
    this.appStoreKeywords = appStoreKeywords;
    return this;
  }

   /**
   * App store keywords
   * @return appStoreKeywords
  **/
  @ApiModelProperty(value = "App store keywords")
  public String getAppStoreKeywords() {
    return appStoreKeywords;
  }

  public void setAppStoreKeywords(String appStoreKeywords) {
    this.appStoreKeywords = appStoreKeywords;
  }

  public WhiteLabelConfigModel appStoreMarketingUrl(String appStoreMarketingUrl) {
    this.appStoreMarketingUrl = appStoreMarketingUrl;
    return this;
  }

   /**
   * App store marketing URL
   * @return appStoreMarketingUrl
  **/
  @ApiModelProperty(value = "App store marketing URL")
  public String getAppStoreMarketingUrl() {
    return appStoreMarketingUrl;
  }

  public void setAppStoreMarketingUrl(String appStoreMarketingUrl) {
    this.appStoreMarketingUrl = appStoreMarketingUrl;
  }

  public WhiteLabelConfigModel appStoreName(String appStoreName) {
    this.appStoreName = appStoreName;
    return this;
  }

   /**
   * App store name
   * @return appStoreName
  **/
  @ApiModelProperty(value = "App store name")
  public String getAppStoreName() {
    return appStoreName;
  }

  public void setAppStoreName(String appStoreName) {
    this.appStoreName = appStoreName;
  }

  public WhiteLabelConfigModel appStorePrivacyUrl(String appStorePrivacyUrl) {
    this.appStorePrivacyUrl = appStorePrivacyUrl;
    return this;
  }

   /**
   * App store privacy URL
   * @return appStorePrivacyUrl
  **/
  @ApiModelProperty(value = "App store privacy URL")
  public String getAppStorePrivacyUrl() {
    return appStorePrivacyUrl;
  }

  public void setAppStorePrivacyUrl(String appStorePrivacyUrl) {
    this.appStorePrivacyUrl = appStorePrivacyUrl;
  }

  public WhiteLabelConfigModel appStoreSupportUrl(String appStoreSupportUrl) {
    this.appStoreSupportUrl = appStoreSupportUrl;
    return this;
  }

   /**
   * App store support URL
   * @return appStoreSupportUrl
  **/
  @ApiModelProperty(value = "App store support URL")
  public String getAppStoreSupportUrl() {
    return appStoreSupportUrl;
  }

  public void setAppStoreSupportUrl(String appStoreSupportUrl) {
    this.appStoreSupportUrl = appStoreSupportUrl;
  }

  public WhiteLabelConfigModel appStoreReleaseNotes(String appStoreReleaseNotes) {
    this.appStoreReleaseNotes = appStoreReleaseNotes;
    return this;
  }

   /**
   * App store release notes
   * @return appStoreReleaseNotes
  **/
  @ApiModelProperty(value = "App store release notes")
  public String getAppStoreReleaseNotes() {
    return appStoreReleaseNotes;
  }

  public void setAppStoreReleaseNotes(String appStoreReleaseNotes) {
    this.appStoreReleaseNotes = appStoreReleaseNotes;
  }

  public WhiteLabelConfigModel appStoreIconUrl(String appStoreIconUrl) {
    this.appStoreIconUrl = appStoreIconUrl;
    return this;
  }

   /**
   * App store icon URL
   * @return appStoreIconUrl
  **/
  @ApiModelProperty(value = "App store icon URL")
  public String getAppStoreIconUrl() {
    return appStoreIconUrl;
  }

  public void setAppStoreIconUrl(String appStoreIconUrl) {
    this.appStoreIconUrl = appStoreIconUrl;
  }

  public WhiteLabelConfigModel appStoreIconThumbnail100Url(String appStoreIconThumbnail100Url) {
    this.appStoreIconThumbnail100Url = appStoreIconThumbnail100Url;
    return this;
  }

   /**
   * App store icon thumbnail 100 URL
   * @return appStoreIconThumbnail100Url
  **/
  @ApiModelProperty(value = "App store icon thumbnail 100 URL")
  public String getAppStoreIconThumbnail100Url() {
    return appStoreIconThumbnail100Url;
  }

  public void setAppStoreIconThumbnail100Url(String appStoreIconThumbnail100Url) {
    this.appStoreIconThumbnail100Url = appStoreIconThumbnail100Url;
  }

  public WhiteLabelConfigModel transparentLogoUrl(String transparentLogoUrl) {
    this.transparentLogoUrl = transparentLogoUrl;
    return this;
  }

   /**
   * Transparent logo URL
   * @return transparentLogoUrl
  **/
  @ApiModelProperty(value = "Transparent logo URL")
  public String getTransparentLogoUrl() {
    return transparentLogoUrl;
  }

  public void setTransparentLogoUrl(String transparentLogoUrl) {
    this.transparentLogoUrl = transparentLogoUrl;
  }

  public WhiteLabelConfigModel logoImageName(String logoImageName) {
    this.logoImageName = logoImageName;
    return this;
  }

   /**
   * Logo image name
   * @return logoImageName
  **/
  @ApiModelProperty(value = "Logo image name")
  public String getLogoImageName() {
    return logoImageName;
  }

  public void setLogoImageName(String logoImageName) {
    this.logoImageName = logoImageName;
  }

  public WhiteLabelConfigModel kioskNameScreenImage(String kioskNameScreenImage) {
    this.kioskNameScreenImage = kioskNameScreenImage;
    return this;
  }

   /**
   * Kiosk name screen image
   * @return kioskNameScreenImage
  **/
  @ApiModelProperty(value = "Kiosk name screen image")
  public String getKioskNameScreenImage() {
    return kioskNameScreenImage;
  }

  public void setKioskNameScreenImage(String kioskNameScreenImage) {
    this.kioskNameScreenImage = kioskNameScreenImage;
  }

  public WhiteLabelConfigModel webToAppRedirect(Integer webToAppRedirect) {
    this.webToAppRedirect = webToAppRedirect;
    return this;
  }

   /**
   * Web to app redirect
   * @return webToAppRedirect
  **/
  @ApiModelProperty(value = "Web to app redirect")
  public Integer getWebToAppRedirect() {
    return webToAppRedirect;
  }

  public void setWebToAppRedirect(Integer webToAppRedirect) {
    this.webToAppRedirect = webToAppRedirect;
  }

  public WhiteLabelConfigModel featuresCsv(String featuresCsv) {
    this.featuresCsv = featuresCsv;
    return this;
  }

   /**
   * Features CSV
   * @return featuresCsv
  **/
  @ApiModelProperty(value = "Features CSV")
  public String getFeaturesCsv() {
    return featuresCsv;
  }

  public void setFeaturesCsv(String featuresCsv) {
    this.featuresCsv = featuresCsv;
  }

  public WhiteLabelConfigModel appStorePassword(String appStorePassword) {
    this.appStorePassword = appStorePassword;
    return this;
  }

   /**
   * App store password
   * @return appStorePassword
  **/
  @ApiModelProperty(value = "App store password")
  public String getAppStorePassword() {
    return appStorePassword;
  }

  public void setAppStorePassword(String appStorePassword) {
    this.appStorePassword = appStorePassword;
  }

  public WhiteLabelConfigModel appStoreTeamId(String appStoreTeamId) {
    this.appStoreTeamId = appStoreTeamId;
    return this;
  }

   /**
   * App store team ID
   * @return appStoreTeamId
  **/
  @ApiModelProperty(value = "App store team ID")
  public String getAppStoreTeamId() {
    return appStoreTeamId;
  }

  public void setAppStoreTeamId(String appStoreTeamId) {
    this.appStoreTeamId = appStoreTeamId;
  }

  public WhiteLabelConfigModel appStoreAppGroup(String appStoreAppGroup) {
    this.appStoreAppGroup = appStoreAppGroup;
    return this;
  }

   /**
   * App store app group
   * @return appStoreAppGroup
  **/
  @ApiModelProperty(value = "App store app group")
  public String getAppStoreAppGroup() {
    return appStoreAppGroup;
  }

  public void setAppStoreAppGroup(String appStoreAppGroup) {
    this.appStoreAppGroup = appStoreAppGroup;
  }

  public WhiteLabelConfigModel appStoreSigningIdentity(String appStoreSigningIdentity) {
    this.appStoreSigningIdentity = appStoreSigningIdentity;
    return this;
  }

   /**
   * App store signing identity
   * @return appStoreSigningIdentity
  **/
  @ApiModelProperty(value = "App store signing identity")
  public String getAppStoreSigningIdentity() {
    return appStoreSigningIdentity;
  }

  public void setAppStoreSigningIdentity(String appStoreSigningIdentity) {
    this.appStoreSigningIdentity = appStoreSigningIdentity;
  }

  public WhiteLabelConfigModel appStoreItcTeamId(String appStoreItcTeamId) {
    this.appStoreItcTeamId = appStoreItcTeamId;
    return this;
  }

   /**
   * App store ITC team ID
   * @return appStoreItcTeamId
  **/
  @ApiModelProperty(value = "App store ITC team ID")
  public String getAppStoreItcTeamId() {
    return appStoreItcTeamId;
  }

  public void setAppStoreItcTeamId(String appStoreItcTeamId) {
    this.appStoreItcTeamId = appStoreItcTeamId;
  }

  public WhiteLabelConfigModel headHtml(String headHtml) {
    this.headHtml = headHtml;
    return this;
  }

   /**
   * Head HTML
   * @return headHtml
  **/
  @ApiModelProperty(value = "Head HTML")
  public String getHeadHtml() {
    return headHtml;
  }

  public void setHeadHtml(String headHtml) {
    this.headHtml = headHtml;
  }

  public WhiteLabelConfigModel socialTwitterUrl(String socialTwitterUrl) {
    this.socialTwitterUrl = socialTwitterUrl;
    return this;
  }

   /**
   * Social Twitter URL
   * @return socialTwitterUrl
  **/
  @ApiModelProperty(value = "Social Twitter URL")
  public String getSocialTwitterUrl() {
    return socialTwitterUrl;
  }

  public void setSocialTwitterUrl(String socialTwitterUrl) {
    this.socialTwitterUrl = socialTwitterUrl;
  }

  public WhiteLabelConfigModel socialFacebookUrl(String socialFacebookUrl) {
    this.socialFacebookUrl = socialFacebookUrl;
    return this;
  }

   /**
   * Social Facebook URL
   * @return socialFacebookUrl
  **/
  @ApiModelProperty(value = "Social Facebook URL")
  public String getSocialFacebookUrl() {
    return socialFacebookUrl;
  }

  public void setSocialFacebookUrl(String socialFacebookUrl) {
    this.socialFacebookUrl = socialFacebookUrl;
  }

  public WhiteLabelConfigModel socialInstagramUrl(String socialInstagramUrl) {
    this.socialInstagramUrl = socialInstagramUrl;
    return this;
  }

   /**
   * Social Instagram URL
   * @return socialInstagramUrl
  **/
  @ApiModelProperty(value = "Social Instagram URL")
  public String getSocialInstagramUrl() {
    return socialInstagramUrl;
  }

  public void setSocialInstagramUrl(String socialInstagramUrl) {
    this.socialInstagramUrl = socialInstagramUrl;
  }

  public WhiteLabelConfigModel socialPintrestUrl(String socialPintrestUrl) {
    this.socialPintrestUrl = socialPintrestUrl;
    return this;
  }

   /**
   * Social Pinterest URL
   * @return socialPintrestUrl
  **/
  @ApiModelProperty(value = "Social Pinterest URL")
  public String getSocialPintrestUrl() {
    return socialPintrestUrl;
  }

  public void setSocialPintrestUrl(String socialPintrestUrl) {
    this.socialPintrestUrl = socialPintrestUrl;
  }

  public WhiteLabelConfigModel socialTripAdvisorUrl(String socialTripAdvisorUrl) {
    this.socialTripAdvisorUrl = socialTripAdvisorUrl;
    return this;
  }

   /**
   * Social TripAdvisor URL
   * @return socialTripAdvisorUrl
  **/
  @ApiModelProperty(value = "Social TripAdvisor URL")
  public String getSocialTripAdvisorUrl() {
    return socialTripAdvisorUrl;
  }

  public void setSocialTripAdvisorUrl(String socialTripAdvisorUrl) {
    this.socialTripAdvisorUrl = socialTripAdvisorUrl;
  }

  public WhiteLabelConfigModel socialGooglePlusUrl(String socialGooglePlusUrl) {
    this.socialGooglePlusUrl = socialGooglePlusUrl;
    return this;
  }

   /**
   * Social Google Plus URL
   * @return socialGooglePlusUrl
  **/
  @ApiModelProperty(value = "Social Google Plus URL")
  public String getSocialGooglePlusUrl() {
    return socialGooglePlusUrl;
  }

  public void setSocialGooglePlusUrl(String socialGooglePlusUrl) {
    this.socialGooglePlusUrl = socialGooglePlusUrl;
  }

  public WhiteLabelConfigModel socialFourSquareUrl(String socialFourSquareUrl) {
    this.socialFourSquareUrl = socialFourSquareUrl;
    return this;
  }

   /**
   * Social FourSquare URL
   * @return socialFourSquareUrl
  **/
  @ApiModelProperty(value = "Social FourSquare URL")
  public String getSocialFourSquareUrl() {
    return socialFourSquareUrl;
  }

  public void setSocialFourSquareUrl(String socialFourSquareUrl) {
    this.socialFourSquareUrl = socialFourSquareUrl;
  }

  public WhiteLabelConfigModel socialYelpUrl(String socialYelpUrl) {
    this.socialYelpUrl = socialYelpUrl;
    return this;
  }

   /**
   * Social Yelp URL
   * @return socialYelpUrl
  **/
  @ApiModelProperty(value = "Social Yelp URL")
  public String getSocialYelpUrl() {
    return socialYelpUrl;
  }

  public void setSocialYelpUrl(String socialYelpUrl) {
    this.socialYelpUrl = socialYelpUrl;
  }

  public WhiteLabelConfigModel websiteType(Integer websiteType) {
    this.websiteType = websiteType;
    return this;
  }

   /**
   * Website type
   * @return websiteType
  **/
  @ApiModelProperty(value = "Website type")
  public Integer getWebsiteType() {
    return websiteType;
  }

  public void setWebsiteType(Integer websiteType) {
    this.websiteType = websiteType;
  }

  public WhiteLabelConfigModel externalOrderingPageUrl(String externalOrderingPageUrl) {
    this.externalOrderingPageUrl = externalOrderingPageUrl;
    return this;
  }

   /**
   * External ordering page URL
   * @return externalOrderingPageUrl
  **/
  @ApiModelProperty(value = "External ordering page URL")
  public String getExternalOrderingPageUrl() {
    return externalOrderingPageUrl;
  }

  public void setExternalOrderingPageUrl(String externalOrderingPageUrl) {
    this.externalOrderingPageUrl = externalOrderingPageUrl;
  }

  public WhiteLabelConfigModel panaceaEnabled(Boolean panaceaEnabled) {
    this.panaceaEnabled = panaceaEnabled;
    return this;
  }

   /**
   * Panacea enabled
   * @return panaceaEnabled
  **/
  @ApiModelProperty(value = "Panacea enabled")
  public Boolean isPanaceaEnabled() {
    return panaceaEnabled;
  }

  public void setPanaceaEnabled(Boolean panaceaEnabled) {
    this.panaceaEnabled = panaceaEnabled;
  }

  public WhiteLabelConfigModel cookieConsentPromptEnabled(Boolean cookieConsentPromptEnabled) {
    this.cookieConsentPromptEnabled = cookieConsentPromptEnabled;
    return this;
  }

   /**
   * Cookie consent prompt enabled
   * @return cookieConsentPromptEnabled
  **/
  @ApiModelProperty(value = "Cookie consent prompt enabled")
  public Boolean isCookieConsentPromptEnabled() {
    return cookieConsentPromptEnabled;
  }

  public void setCookieConsentPromptEnabled(Boolean cookieConsentPromptEnabled) {
    this.cookieConsentPromptEnabled = cookieConsentPromptEnabled;
  }

  public WhiteLabelConfigModel panaceaVanityUrl(String panaceaVanityUrl) {
    this.panaceaVanityUrl = panaceaVanityUrl;
    return this;
  }

   /**
   * Panacea vanity URL
   * @return panaceaVanityUrl
  **/
  @ApiModelProperty(value = "Panacea vanity URL")
  public String getPanaceaVanityUrl() {
    return panaceaVanityUrl;
  }

  public void setPanaceaVanityUrl(String panaceaVanityUrl) {
    this.panaceaVanityUrl = panaceaVanityUrl;
  }

  public WhiteLabelConfigModel countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

   /**
   * Country ID
   * @return countryId
  **/
  @ApiModelProperty(value = "Country ID")
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }

  public WhiteLabelConfigModel referralUserId(Integer referralUserId) {
    this.referralUserId = referralUserId;
    return this;
  }

   /**
   * Referral user ID
   * @return referralUserId
  **/
  @ApiModelProperty(value = "Referral user ID")
  public Integer getReferralUserId() {
    return referralUserId;
  }

  public void setReferralUserId(Integer referralUserId) {
    this.referralUserId = referralUserId;
  }

  public WhiteLabelConfigModel referralCampaignId(String referralCampaignId) {
    this.referralCampaignId = referralCampaignId;
    return this;
  }

   /**
   * Referral campaign ID
   * @return referralCampaignId
  **/
  @ApiModelProperty(value = "Referral campaign ID")
  public String getReferralCampaignId() {
    return referralCampaignId;
  }

  public void setReferralCampaignId(String referralCampaignId) {
    this.referralCampaignId = referralCampaignId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WhiteLabelConfigModel whiteLabelConfigModel = (WhiteLabelConfigModel) o;
    return Objects.equals(this.whiteLabelLanguages, whiteLabelConfigModel.whiteLabelLanguages) &&
        Objects.equals(this.whiteLabelAssets, whiteLabelConfigModel.whiteLabelAssets) &&
        Objects.equals(this.colorScheme, whiteLabelConfigModel.colorScheme) &&
        Objects.equals(this.whiteLabelConfigId, whiteLabelConfigModel.whiteLabelConfigId) &&
        Objects.equals(this.whiteLabelId, whiteLabelConfigModel.whiteLabelId) &&
        Objects.equals(this.whiteLabelName, whiteLabelConfigModel.whiteLabelName) &&
        Objects.equals(this.appNameId, whiteLabelConfigModel.appNameId) &&
        Objects.equals(this.orgId, whiteLabelConfigModel.orgId) &&
        Objects.equals(this.smsRestaurantName, whiteLabelConfigModel.smsRestaurantName) &&
        Objects.equals(this.deepLinkUrlScheme, whiteLabelConfigModel.deepLinkUrlScheme) &&
        Objects.equals(this.hostName, whiteLabelConfigModel.hostName) &&
        Objects.equals(this.nexmoSupportSmsNumber, whiteLabelConfigModel.nexmoSupportSmsNumber) &&
        Objects.equals(this.twilioSupportSmsNumber, whiteLabelConfigModel.twilioSupportSmsNumber) &&
        Objects.equals(this.mixpanelToken, whiteLabelConfigModel.mixpanelToken) &&
        Objects.equals(this.intercomAppId, whiteLabelConfigModel.intercomAppId) &&
        Objects.equals(this.shareMessageEmailSubject, whiteLabelConfigModel.shareMessageEmailSubject) &&
        Objects.equals(this.shareMessageEmailMessage, whiteLabelConfigModel.shareMessageEmailMessage) &&
        Objects.equals(this.shareMessageSmsMessage, whiteLabelConfigModel.shareMessageSmsMessage) &&
        Objects.equals(this.shareMessageWhatsAppMessage, whiteLabelConfigModel.shareMessageWhatsAppMessage) &&
        Objects.equals(this.shareMessageFacebookMessage, whiteLabelConfigModel.shareMessageFacebookMessage) &&
        Objects.equals(this.shareMessageTwitterMessage, whiteLabelConfigModel.shareMessageTwitterMessage) &&
        Objects.equals(this.shareMessageGenericMessage, whiteLabelConfigModel.shareMessageGenericMessage) &&
        Objects.equals(this.displayDeliveryRestaurantListScreen, whiteLabelConfigModel.displayDeliveryRestaurantListScreen) &&
        Objects.equals(this.contactFormType, whiteLabelConfigModel.contactFormType) &&
        Objects.equals(this.contactPhoneNumber, whiteLabelConfigModel.contactPhoneNumber) &&
        Objects.equals(this.displayBumpSideMenuItem, whiteLabelConfigModel.displayBumpSideMenuItem) &&
        Objects.equals(this.displayFreeCokeSideMenuItem, whiteLabelConfigModel.displayFreeCokeSideMenuItem) &&
        Objects.equals(this.appStoreUrl, whiteLabelConfigModel.appStoreUrl) &&
        Objects.equals(this.deliveryEnabled, whiteLabelConfigModel.deliveryEnabled) &&
        Objects.equals(this.pickupEnabled, whiteLabelConfigModel.pickupEnabled) &&
        Objects.equals(this.displayPickupRestaurantListScreen, whiteLabelConfigModel.displayPickupRestaurantListScreen) &&
        Objects.equals(this.displayCuisineTypeListAndRestaurantSearchBar, whiteLabelConfigModel.displayCuisineTypeListAndRestaurantSearchBar) &&
        Objects.equals(this.displayUserRestaurantRatings, whiteLabelConfigModel.displayUserRestaurantRatings) &&
        Objects.equals(this.readyToPublishWeb, whiteLabelConfigModel.readyToPublishWeb) &&
        Objects.equals(this.readyToPublishIos, whiteLabelConfigModel.readyToPublishIos) &&
        Objects.equals(this.readyToPublishAndroid, whiteLabelConfigModel.readyToPublishAndroid) &&
        Objects.equals(this.displayFooterLinksToOtherSites, whiteLabelConfigModel.displayFooterLinksToOtherSites) &&
        Objects.equals(this.displayOnlineOrderingMenu, whiteLabelConfigModel.displayOnlineOrderingMenu) &&
        Objects.equals(this.hideAppConfigFromAdminList, whiteLabelConfigModel.hideAppConfigFromAdminList) &&
        Objects.equals(this.complianceType, whiteLabelConfigModel.complianceType) &&
        Objects.equals(this.isMenuMigratedToRms, whiteLabelConfigModel.isMenuMigratedToRms) &&
        Objects.equals(this.mapBoundryMaxLongitude, whiteLabelConfigModel.mapBoundryMaxLongitude) &&
        Objects.equals(this.mapBoundryMinLongitude, whiteLabelConfigModel.mapBoundryMinLongitude) &&
        Objects.equals(this.mapBoundryMaxLatitude, whiteLabelConfigModel.mapBoundryMaxLatitude) &&
        Objects.equals(this.mapBoundryMinLatitude, whiteLabelConfigModel.mapBoundryMinLatitude) &&
        Objects.equals(this.appStoreAppleId, whiteLabelConfigModel.appStoreAppleId) &&
        Objects.equals(this.appStoreToken, whiteLabelConfigModel.appStoreToken) &&
        Objects.equals(this.websiteDisplayStaticMenuPage, whiteLabelConfigModel.websiteDisplayStaticMenuPage) &&
        Objects.equals(this.isEmbed, whiteLabelConfigModel.isEmbed) &&
        Objects.equals(this.displayTipOptionToUsersByDefault, whiteLabelConfigModel.displayTipOptionToUsersByDefault) &&
        Objects.equals(this.emailRequestMode, whiteLabelConfigModel.emailRequestMode) &&
        Objects.equals(this.addressEntryType, whiteLabelConfigModel.addressEntryType) &&
        Objects.equals(this.addressLayout, whiteLabelConfigModel.addressLayout) &&
        Objects.equals(this.category, whiteLabelConfigModel.category) &&
        Objects.equals(this.mapCenterLatitude, whiteLabelConfigModel.mapCenterLatitude) &&
        Objects.equals(this.mapCenterLongitude, whiteLabelConfigModel.mapCenterLongitude) &&
        Objects.equals(this.intercomTokenIos, whiteLabelConfigModel.intercomTokenIos) &&
        Objects.equals(this.intercomTokenAndroid, whiteLabelConfigModel.intercomTokenAndroid) &&
        Objects.equals(this.googleAnalyticsTokensCsv, whiteLabelConfigModel.googleAnalyticsTokensCsv) &&
        Objects.equals(this.facebookTokensCsv, whiteLabelConfigModel.facebookTokensCsv) &&
        Objects.equals(this.shareMessageGenericUrl, whiteLabelConfigModel.shareMessageGenericUrl) &&
        Objects.equals(this.privateSupportEmailAddress, whiteLabelConfigModel.privateSupportEmailAddress) &&
        Objects.equals(this.appStoreId, whiteLabelConfigModel.appStoreId) &&
        Objects.equals(this.playConsoleAccount, whiteLabelConfigModel.playConsoleAccount) &&
        Objects.equals(this.apnCertificateValidAfter, whiteLabelConfigModel.apnCertificateValidAfter) &&
        Objects.equals(this.apnCertificateValidBefore, whiteLabelConfigModel.apnCertificateValidBefore) &&
        Objects.equals(this.dineInEnabled, whiteLabelConfigModel.dineInEnabled) &&
        Objects.equals(this.appFont, whiteLabelConfigModel.appFont) &&
        Objects.equals(this.whiteLabelColorSchemeId, whiteLabelConfigModel.whiteLabelColorSchemeId) &&
        Objects.equals(this.whiteLabelImagesId, whiteLabelConfigModel.whiteLabelImagesId) &&
        Objects.equals(this.appStoreCopyright, whiteLabelConfigModel.appStoreCopyright) &&
        Objects.equals(this.appStoreDescription, whiteLabelConfigModel.appStoreDescription) &&
        Objects.equals(this.appStoreShortDescription, whiteLabelConfigModel.appStoreShortDescription) &&
        Objects.equals(this.appStoreKeywords, whiteLabelConfigModel.appStoreKeywords) &&
        Objects.equals(this.appStoreMarketingUrl, whiteLabelConfigModel.appStoreMarketingUrl) &&
        Objects.equals(this.appStoreName, whiteLabelConfigModel.appStoreName) &&
        Objects.equals(this.appStorePrivacyUrl, whiteLabelConfigModel.appStorePrivacyUrl) &&
        Objects.equals(this.appStoreSupportUrl, whiteLabelConfigModel.appStoreSupportUrl) &&
        Objects.equals(this.appStoreReleaseNotes, whiteLabelConfigModel.appStoreReleaseNotes) &&
        Objects.equals(this.appStoreIconUrl, whiteLabelConfigModel.appStoreIconUrl) &&
        Objects.equals(this.appStoreIconThumbnail100Url, whiteLabelConfigModel.appStoreIconThumbnail100Url) &&
        Objects.equals(this.transparentLogoUrl, whiteLabelConfigModel.transparentLogoUrl) &&
        Objects.equals(this.logoImageName, whiteLabelConfigModel.logoImageName) &&
        Objects.equals(this.kioskNameScreenImage, whiteLabelConfigModel.kioskNameScreenImage) &&
        Objects.equals(this.webToAppRedirect, whiteLabelConfigModel.webToAppRedirect) &&
        Objects.equals(this.featuresCsv, whiteLabelConfigModel.featuresCsv) &&
        Objects.equals(this.appStorePassword, whiteLabelConfigModel.appStorePassword) &&
        Objects.equals(this.appStoreTeamId, whiteLabelConfigModel.appStoreTeamId) &&
        Objects.equals(this.appStoreAppGroup, whiteLabelConfigModel.appStoreAppGroup) &&
        Objects.equals(this.appStoreSigningIdentity, whiteLabelConfigModel.appStoreSigningIdentity) &&
        Objects.equals(this.appStoreItcTeamId, whiteLabelConfigModel.appStoreItcTeamId) &&
        Objects.equals(this.headHtml, whiteLabelConfigModel.headHtml) &&
        Objects.equals(this.socialTwitterUrl, whiteLabelConfigModel.socialTwitterUrl) &&
        Objects.equals(this.socialFacebookUrl, whiteLabelConfigModel.socialFacebookUrl) &&
        Objects.equals(this.socialInstagramUrl, whiteLabelConfigModel.socialInstagramUrl) &&
        Objects.equals(this.socialPintrestUrl, whiteLabelConfigModel.socialPintrestUrl) &&
        Objects.equals(this.socialTripAdvisorUrl, whiteLabelConfigModel.socialTripAdvisorUrl) &&
        Objects.equals(this.socialGooglePlusUrl, whiteLabelConfigModel.socialGooglePlusUrl) &&
        Objects.equals(this.socialFourSquareUrl, whiteLabelConfigModel.socialFourSquareUrl) &&
        Objects.equals(this.socialYelpUrl, whiteLabelConfigModel.socialYelpUrl) &&
        Objects.equals(this.websiteType, whiteLabelConfigModel.websiteType) &&
        Objects.equals(this.externalOrderingPageUrl, whiteLabelConfigModel.externalOrderingPageUrl) &&
        Objects.equals(this.panaceaEnabled, whiteLabelConfigModel.panaceaEnabled) &&
        Objects.equals(this.cookieConsentPromptEnabled, whiteLabelConfigModel.cookieConsentPromptEnabled) &&
        Objects.equals(this.panaceaVanityUrl, whiteLabelConfigModel.panaceaVanityUrl) &&
        Objects.equals(this.countryId, whiteLabelConfigModel.countryId) &&
        Objects.equals(this.referralUserId, whiteLabelConfigModel.referralUserId) &&
        Objects.equals(this.referralCampaignId, whiteLabelConfigModel.referralCampaignId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(whiteLabelLanguages, whiteLabelAssets, colorScheme, whiteLabelConfigId, whiteLabelId, whiteLabelName, appNameId, orgId, smsRestaurantName, deepLinkUrlScheme, hostName, nexmoSupportSmsNumber, twilioSupportSmsNumber, mixpanelToken, intercomAppId, shareMessageEmailSubject, shareMessageEmailMessage, shareMessageSmsMessage, shareMessageWhatsAppMessage, shareMessageFacebookMessage, shareMessageTwitterMessage, shareMessageGenericMessage, displayDeliveryRestaurantListScreen, contactFormType, contactPhoneNumber, displayBumpSideMenuItem, displayFreeCokeSideMenuItem, appStoreUrl, deliveryEnabled, pickupEnabled, displayPickupRestaurantListScreen, displayCuisineTypeListAndRestaurantSearchBar, displayUserRestaurantRatings, readyToPublishWeb, readyToPublishIos, readyToPublishAndroid, displayFooterLinksToOtherSites, displayOnlineOrderingMenu, hideAppConfigFromAdminList, complianceType, isMenuMigratedToRms, mapBoundryMaxLongitude, mapBoundryMinLongitude, mapBoundryMaxLatitude, mapBoundryMinLatitude, appStoreAppleId, appStoreToken, websiteDisplayStaticMenuPage, isEmbed, displayTipOptionToUsersByDefault, emailRequestMode, addressEntryType, addressLayout, category, mapCenterLatitude, mapCenterLongitude, intercomTokenIos, intercomTokenAndroid, googleAnalyticsTokensCsv, facebookTokensCsv, shareMessageGenericUrl, privateSupportEmailAddress, appStoreId, playConsoleAccount, apnCertificateValidAfter, apnCertificateValidBefore, dineInEnabled, appFont, whiteLabelColorSchemeId, whiteLabelImagesId, appStoreCopyright, appStoreDescription, appStoreShortDescription, appStoreKeywords, appStoreMarketingUrl, appStoreName, appStorePrivacyUrl, appStoreSupportUrl, appStoreReleaseNotes, appStoreIconUrl, appStoreIconThumbnail100Url, transparentLogoUrl, logoImageName, kioskNameScreenImage, webToAppRedirect, featuresCsv, appStorePassword, appStoreTeamId, appStoreAppGroup, appStoreSigningIdentity, appStoreItcTeamId, headHtml, socialTwitterUrl, socialFacebookUrl, socialInstagramUrl, socialPintrestUrl, socialTripAdvisorUrl, socialGooglePlusUrl, socialFourSquareUrl, socialYelpUrl, websiteType, externalOrderingPageUrl, panaceaEnabled, cookieConsentPromptEnabled, panaceaVanityUrl, countryId, referralUserId, referralCampaignId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhiteLabelConfigModel {\n");
    
    sb.append("    whiteLabelLanguages: ").append(toIndentedString(whiteLabelLanguages)).append("\n");
    sb.append("    whiteLabelAssets: ").append(toIndentedString(whiteLabelAssets)).append("\n");
    sb.append("    colorScheme: ").append(toIndentedString(colorScheme)).append("\n");
    sb.append("    whiteLabelConfigId: ").append(toIndentedString(whiteLabelConfigId)).append("\n");
    sb.append("    whiteLabelId: ").append(toIndentedString(whiteLabelId)).append("\n");
    sb.append("    whiteLabelName: ").append(toIndentedString(whiteLabelName)).append("\n");
    sb.append("    appNameId: ").append(toIndentedString(appNameId)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    smsRestaurantName: ").append(toIndentedString(smsRestaurantName)).append("\n");
    sb.append("    deepLinkUrlScheme: ").append(toIndentedString(deepLinkUrlScheme)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    nexmoSupportSmsNumber: ").append(toIndentedString(nexmoSupportSmsNumber)).append("\n");
    sb.append("    twilioSupportSmsNumber: ").append(toIndentedString(twilioSupportSmsNumber)).append("\n");
    sb.append("    mixpanelToken: ").append(toIndentedString(mixpanelToken)).append("\n");
    sb.append("    intercomAppId: ").append(toIndentedString(intercomAppId)).append("\n");
    sb.append("    shareMessageEmailSubject: ").append(toIndentedString(shareMessageEmailSubject)).append("\n");
    sb.append("    shareMessageEmailMessage: ").append(toIndentedString(shareMessageEmailMessage)).append("\n");
    sb.append("    shareMessageSmsMessage: ").append(toIndentedString(shareMessageSmsMessage)).append("\n");
    sb.append("    shareMessageWhatsAppMessage: ").append(toIndentedString(shareMessageWhatsAppMessage)).append("\n");
    sb.append("    shareMessageFacebookMessage: ").append(toIndentedString(shareMessageFacebookMessage)).append("\n");
    sb.append("    shareMessageTwitterMessage: ").append(toIndentedString(shareMessageTwitterMessage)).append("\n");
    sb.append("    shareMessageGenericMessage: ").append(toIndentedString(shareMessageGenericMessage)).append("\n");
    sb.append("    displayDeliveryRestaurantListScreen: ").append(toIndentedString(displayDeliveryRestaurantListScreen)).append("\n");
    sb.append("    contactFormType: ").append(toIndentedString(contactFormType)).append("\n");
    sb.append("    contactPhoneNumber: ").append(toIndentedString(contactPhoneNumber)).append("\n");
    sb.append("    displayBumpSideMenuItem: ").append(toIndentedString(displayBumpSideMenuItem)).append("\n");
    sb.append("    displayFreeCokeSideMenuItem: ").append(toIndentedString(displayFreeCokeSideMenuItem)).append("\n");
    sb.append("    appStoreUrl: ").append(toIndentedString(appStoreUrl)).append("\n");
    sb.append("    deliveryEnabled: ").append(toIndentedString(deliveryEnabled)).append("\n");
    sb.append("    pickupEnabled: ").append(toIndentedString(pickupEnabled)).append("\n");
    sb.append("    displayPickupRestaurantListScreen: ").append(toIndentedString(displayPickupRestaurantListScreen)).append("\n");
    sb.append("    displayCuisineTypeListAndRestaurantSearchBar: ").append(toIndentedString(displayCuisineTypeListAndRestaurantSearchBar)).append("\n");
    sb.append("    displayUserRestaurantRatings: ").append(toIndentedString(displayUserRestaurantRatings)).append("\n");
    sb.append("    readyToPublishWeb: ").append(toIndentedString(readyToPublishWeb)).append("\n");
    sb.append("    readyToPublishIos: ").append(toIndentedString(readyToPublishIos)).append("\n");
    sb.append("    readyToPublishAndroid: ").append(toIndentedString(readyToPublishAndroid)).append("\n");
    sb.append("    displayFooterLinksToOtherSites: ").append(toIndentedString(displayFooterLinksToOtherSites)).append("\n");
    sb.append("    displayOnlineOrderingMenu: ").append(toIndentedString(displayOnlineOrderingMenu)).append("\n");
    sb.append("    hideAppConfigFromAdminList: ").append(toIndentedString(hideAppConfigFromAdminList)).append("\n");
    sb.append("    complianceType: ").append(toIndentedString(complianceType)).append("\n");
    sb.append("    isMenuMigratedToRms: ").append(toIndentedString(isMenuMigratedToRms)).append("\n");
    sb.append("    mapBoundryMaxLongitude: ").append(toIndentedString(mapBoundryMaxLongitude)).append("\n");
    sb.append("    mapBoundryMinLongitude: ").append(toIndentedString(mapBoundryMinLongitude)).append("\n");
    sb.append("    mapBoundryMaxLatitude: ").append(toIndentedString(mapBoundryMaxLatitude)).append("\n");
    sb.append("    mapBoundryMinLatitude: ").append(toIndentedString(mapBoundryMinLatitude)).append("\n");
    sb.append("    appStoreAppleId: ").append(toIndentedString(appStoreAppleId)).append("\n");
    sb.append("    appStoreToken: ").append(toIndentedString(appStoreToken)).append("\n");
    sb.append("    websiteDisplayStaticMenuPage: ").append(toIndentedString(websiteDisplayStaticMenuPage)).append("\n");
    sb.append("    isEmbed: ").append(toIndentedString(isEmbed)).append("\n");
    sb.append("    displayTipOptionToUsersByDefault: ").append(toIndentedString(displayTipOptionToUsersByDefault)).append("\n");
    sb.append("    emailRequestMode: ").append(toIndentedString(emailRequestMode)).append("\n");
    sb.append("    addressEntryType: ").append(toIndentedString(addressEntryType)).append("\n");
    sb.append("    addressLayout: ").append(toIndentedString(addressLayout)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    mapCenterLatitude: ").append(toIndentedString(mapCenterLatitude)).append("\n");
    sb.append("    mapCenterLongitude: ").append(toIndentedString(mapCenterLongitude)).append("\n");
    sb.append("    intercomTokenIos: ").append(toIndentedString(intercomTokenIos)).append("\n");
    sb.append("    intercomTokenAndroid: ").append(toIndentedString(intercomTokenAndroid)).append("\n");
    sb.append("    googleAnalyticsTokensCsv: ").append(toIndentedString(googleAnalyticsTokensCsv)).append("\n");
    sb.append("    facebookTokensCsv: ").append(toIndentedString(facebookTokensCsv)).append("\n");
    sb.append("    shareMessageGenericUrl: ").append(toIndentedString(shareMessageGenericUrl)).append("\n");
    sb.append("    privateSupportEmailAddress: ").append(toIndentedString(privateSupportEmailAddress)).append("\n");
    sb.append("    appStoreId: ").append(toIndentedString(appStoreId)).append("\n");
    sb.append("    playConsoleAccount: ").append(toIndentedString(playConsoleAccount)).append("\n");
    sb.append("    apnCertificateValidAfter: ").append(toIndentedString(apnCertificateValidAfter)).append("\n");
    sb.append("    apnCertificateValidBefore: ").append(toIndentedString(apnCertificateValidBefore)).append("\n");
    sb.append("    dineInEnabled: ").append(toIndentedString(dineInEnabled)).append("\n");
    sb.append("    appFont: ").append(toIndentedString(appFont)).append("\n");
    sb.append("    whiteLabelColorSchemeId: ").append(toIndentedString(whiteLabelColorSchemeId)).append("\n");
    sb.append("    whiteLabelImagesId: ").append(toIndentedString(whiteLabelImagesId)).append("\n");
    sb.append("    appStoreCopyright: ").append(toIndentedString(appStoreCopyright)).append("\n");
    sb.append("    appStoreDescription: ").append(toIndentedString(appStoreDescription)).append("\n");
    sb.append("    appStoreShortDescription: ").append(toIndentedString(appStoreShortDescription)).append("\n");
    sb.append("    appStoreKeywords: ").append(toIndentedString(appStoreKeywords)).append("\n");
    sb.append("    appStoreMarketingUrl: ").append(toIndentedString(appStoreMarketingUrl)).append("\n");
    sb.append("    appStoreName: ").append(toIndentedString(appStoreName)).append("\n");
    sb.append("    appStorePrivacyUrl: ").append(toIndentedString(appStorePrivacyUrl)).append("\n");
    sb.append("    appStoreSupportUrl: ").append(toIndentedString(appStoreSupportUrl)).append("\n");
    sb.append("    appStoreReleaseNotes: ").append(toIndentedString(appStoreReleaseNotes)).append("\n");
    sb.append("    appStoreIconUrl: ").append(toIndentedString(appStoreIconUrl)).append("\n");
    sb.append("    appStoreIconThumbnail100Url: ").append(toIndentedString(appStoreIconThumbnail100Url)).append("\n");
    sb.append("    transparentLogoUrl: ").append(toIndentedString(transparentLogoUrl)).append("\n");
    sb.append("    logoImageName: ").append(toIndentedString(logoImageName)).append("\n");
    sb.append("    kioskNameScreenImage: ").append(toIndentedString(kioskNameScreenImage)).append("\n");
    sb.append("    webToAppRedirect: ").append(toIndentedString(webToAppRedirect)).append("\n");
    sb.append("    featuresCsv: ").append(toIndentedString(featuresCsv)).append("\n");
    sb.append("    appStorePassword: ").append(toIndentedString(appStorePassword)).append("\n");
    sb.append("    appStoreTeamId: ").append(toIndentedString(appStoreTeamId)).append("\n");
    sb.append("    appStoreAppGroup: ").append(toIndentedString(appStoreAppGroup)).append("\n");
    sb.append("    appStoreSigningIdentity: ").append(toIndentedString(appStoreSigningIdentity)).append("\n");
    sb.append("    appStoreItcTeamId: ").append(toIndentedString(appStoreItcTeamId)).append("\n");
    sb.append("    headHtml: ").append(toIndentedString(headHtml)).append("\n");
    sb.append("    socialTwitterUrl: ").append(toIndentedString(socialTwitterUrl)).append("\n");
    sb.append("    socialFacebookUrl: ").append(toIndentedString(socialFacebookUrl)).append("\n");
    sb.append("    socialInstagramUrl: ").append(toIndentedString(socialInstagramUrl)).append("\n");
    sb.append("    socialPintrestUrl: ").append(toIndentedString(socialPintrestUrl)).append("\n");
    sb.append("    socialTripAdvisorUrl: ").append(toIndentedString(socialTripAdvisorUrl)).append("\n");
    sb.append("    socialGooglePlusUrl: ").append(toIndentedString(socialGooglePlusUrl)).append("\n");
    sb.append("    socialFourSquareUrl: ").append(toIndentedString(socialFourSquareUrl)).append("\n");
    sb.append("    socialYelpUrl: ").append(toIndentedString(socialYelpUrl)).append("\n");
    sb.append("    websiteType: ").append(toIndentedString(websiteType)).append("\n");
    sb.append("    externalOrderingPageUrl: ").append(toIndentedString(externalOrderingPageUrl)).append("\n");
    sb.append("    panaceaEnabled: ").append(toIndentedString(panaceaEnabled)).append("\n");
    sb.append("    cookieConsentPromptEnabled: ").append(toIndentedString(cookieConsentPromptEnabled)).append("\n");
    sb.append("    panaceaVanityUrl: ").append(toIndentedString(panaceaVanityUrl)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    referralUserId: ").append(toIndentedString(referralUserId)).append("\n");
    sb.append("    referralCampaignId: ").append(toIndentedString(referralCampaignId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

