/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.flipdish.apiclient.model.AnalyticsClientEvent;
import com.flipdish.apiclient.model.AppCreatedEvent;
import com.flipdish.apiclient.model.AppStoreConfigCreatedEvent;
import com.flipdish.apiclient.model.AppStoreConfigDeletedEvent;
import com.flipdish.apiclient.model.AppStoreConfigUpdatedEvent;
import com.flipdish.apiclient.model.AppUpdatedEvent;
import com.flipdish.apiclient.model.BankAccountAssignedEvent;
import com.flipdish.apiclient.model.BankAccountCreatedEvent;
import com.flipdish.apiclient.model.BankAccountDeletedEvent;
import com.flipdish.apiclient.model.BankAccountUpdatedEvent;
import com.flipdish.apiclient.model.CatalogGroupArchivedEvent;
import com.flipdish.apiclient.model.CatalogGroupCreatedEvent;
import com.flipdish.apiclient.model.CatalogGroupUpdatedEvent;
import com.flipdish.apiclient.model.CatalogItemArchivedEvent;
import com.flipdish.apiclient.model.CatalogItemCreatedEvent;
import com.flipdish.apiclient.model.CatalogItemUpdatedEvent;
import com.flipdish.apiclient.model.CertificateCreatedEvent;
import com.flipdish.apiclient.model.CertificateRenewedEvent;
import com.flipdish.apiclient.model.CustomerConsentUpdatedEvent;
import com.flipdish.apiclient.model.CustomerCreatedEvent;
import com.flipdish.apiclient.model.CustomerUpdatedEvent;
import com.flipdish.apiclient.model.DeliveryZoneCreatedEvent;
import com.flipdish.apiclient.model.DeliveryZoneDeletedEvent;
import com.flipdish.apiclient.model.DeliveryZoneUpdatedEvent;
import com.flipdish.apiclient.model.DnsVerifiedEvent;
import com.flipdish.apiclient.model.EmvNotificationEvent;
import com.flipdish.apiclient.model.ExternalStoreEvent;
import com.flipdish.apiclient.model.HydraAssignedEvent;
import com.flipdish.apiclient.model.HydraConnectionStatusChangedEvent;
import com.flipdish.apiclient.model.HydraRequestResetEvent;
import com.flipdish.apiclient.model.HydraSettingChangedEvent;
import com.flipdish.apiclient.model.HydraStoreAssignedEvent;
import com.flipdish.apiclient.model.HydraStoreUnassignedEvent;
import com.flipdish.apiclient.model.HydraUnAssignedEvent;
import com.flipdish.apiclient.model.KioskBluetoothInstallUpdateInitiateEvent;
import com.flipdish.apiclient.model.KioskBluetoothPairingModeEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalCancelUpdateEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalFirmwareVersionStatusEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalInitiateUpdateCheckEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalInstallationStatusEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalUnpairedEvent;
import com.flipdish.apiclient.model.KioskBluetoothTerminalUpdatedEvent;
import com.flipdish.apiclient.model.KioskBluetoothUnpairingModeEvent;
import com.flipdish.apiclient.model.KioskTerminalActionStateChangedEvent;
import com.flipdish.apiclient.model.LocationAreaCreatedEvent;
import com.flipdish.apiclient.model.LocationAreaUpdatedEvent;
import com.flipdish.apiclient.model.LocationCreatedEvent;
import com.flipdish.apiclient.model.LocationDeletedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignCreatedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignDeletedEvent;
import com.flipdish.apiclient.model.LoyaltyCampaignUpdatedEvent;
import com.flipdish.apiclient.model.MenuBulkEditEvent;
import com.flipdish.apiclient.model.MenuCheckpointCreatedEvent;
import com.flipdish.apiclient.model.MenuCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetDeletedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemCreatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemDeletedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetItemUpdatedEvent;
import com.flipdish.apiclient.model.MenuItemOptionSetUpdatedEvent;
import com.flipdish.apiclient.model.MenuSectionCreatedEvent;
import com.flipdish.apiclient.model.MenuSectionDeletedEvent;
import com.flipdish.apiclient.model.MenuSectionItemCreatedEvent;
import com.flipdish.apiclient.model.MenuSectionItemDeletedEvent;
import com.flipdish.apiclient.model.MenuSectionItemUpdatedEvent;
import com.flipdish.apiclient.model.MenuSectionUpdatedEvent;
import com.flipdish.apiclient.model.MenuUpdatedEvent;
import com.flipdish.apiclient.model.MenuUploadedEvent;
import com.flipdish.apiclient.model.MobileAppsSubmissionStatusUpdatedEvent;
import com.flipdish.apiclient.model.MobileAppsSubmissionUpdatedEvent;
import com.flipdish.apiclient.model.OrderAcceptedEvent;
import com.flipdish.apiclient.model.OrderBatchPublishedEvent;
import com.flipdish.apiclient.model.OrderCapacityConfigUpdatedEvent;
import com.flipdish.apiclient.model.OrderCreatedEvent;
import com.flipdish.apiclient.model.OrderCustomerTrackingCreatedEvent;
import com.flipdish.apiclient.model.OrderDeliveryTrackingStatusUpdatedEvent;
import com.flipdish.apiclient.model.OrderDispatchedEvent;
import com.flipdish.apiclient.model.OrderFulfillmentStatusUpdatedEvent;
import com.flipdish.apiclient.model.OrderRatingUpdatedEvent;
import com.flipdish.apiclient.model.OrderRefundedEvent;
import com.flipdish.apiclient.model.OrderRejectedEvent;
import com.flipdish.apiclient.model.OrderTipUpdatedEvent;
import com.flipdish.apiclient.model.PhoneCallEndedEvent;
import com.flipdish.apiclient.model.PhoneCallStartedEvent;
import com.flipdish.apiclient.model.PrinterAssignedToStoreEvent;
import com.flipdish.apiclient.model.PrinterTurnedOffEvent;
import com.flipdish.apiclient.model.PrinterTurnedOnEvent;
import com.flipdish.apiclient.model.PrinterUnassignedFromStoreEvent;
import com.flipdish.apiclient.model.PushNotificationDeletedEvent;
import com.flipdish.apiclient.model.PushNotificationScheduledEvent;
import com.flipdish.apiclient.model.PushNotificationSentEvent;
import com.flipdish.apiclient.model.RetentionCampaignCreatedEvent;
import com.flipdish.apiclient.model.RetentionCampaignDeletedEvent;
import com.flipdish.apiclient.model.RetentionCampaignUpdatedEvent;
import com.flipdish.apiclient.model.SmsReceivedEvent;
import com.flipdish.apiclient.model.StoreAddressUpdatedEvent;
import com.flipdish.apiclient.model.StoreArchivedEvent;
import com.flipdish.apiclient.model.StoreBusinessHoursOverrideCreatedEvent;
import com.flipdish.apiclient.model.StoreBusinessHoursOverrideDeletedEvent;
import com.flipdish.apiclient.model.StoreCreatedEvent;
import com.flipdish.apiclient.model.StoreDeletedEvent;
import com.flipdish.apiclient.model.StoreFeeConfigUpdatedEvent;
import com.flipdish.apiclient.model.StoreGroupCreatedEvent;
import com.flipdish.apiclient.model.StoreGroupDeletedEvent;
import com.flipdish.apiclient.model.StoreGroupUpdatedEvent;
import com.flipdish.apiclient.model.StoreKioskSettingUpdatedEvent;
import com.flipdish.apiclient.model.StoreLogoCreatedEvent;
import com.flipdish.apiclient.model.StoreLogoDeletedEvent;
import com.flipdish.apiclient.model.StoreLogoUpdatedEvent;
import com.flipdish.apiclient.model.StoreMenuAssignedEvent;
import com.flipdish.apiclient.model.StoreOpeningHoursUpdatedEvent;
import com.flipdish.apiclient.model.StorePreOrderConfigUpdatedEvent;
import com.flipdish.apiclient.model.StorePublishedEvent;
import com.flipdish.apiclient.model.StoreServiceChargeUpdatedEvent;
import com.flipdish.apiclient.model.StoreTipUpdatedEvent;
import com.flipdish.apiclient.model.StoreUnarchivedEvent;
import com.flipdish.apiclient.model.StoreUnpublishedEvent;
import com.flipdish.apiclient.model.StoreUpdatedEvent;
import com.flipdish.apiclient.model.TeammateDeletedEvent;
import com.flipdish.apiclient.model.TeammateInviteAcceptedEvent;
import com.flipdish.apiclient.model.TeammateInviteSentEvent;
import com.flipdish.apiclient.model.TeammateUpdatedEvent;
import com.flipdish.apiclient.model.UserAnsweredSignupQuestionsEvent;
import com.flipdish.apiclient.model.UserCreatedEvent;
import com.flipdish.apiclient.model.UserDeletedEvent;
import com.flipdish.apiclient.model.UserLoginEvent;
import com.flipdish.apiclient.model.UserPasswordCreatedEvent;
import com.flipdish.apiclient.model.UserUpdatedEvent;
import com.flipdish.apiclient.model.VoucherCreatedEvent;
import com.flipdish.apiclient.model.VoucherDeletedEvent;
import com.flipdish.apiclient.model.VoucherUpdatedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionCreatedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionDeletedEvent;
import com.flipdish.apiclient.model.WebhookSubscriptionUpdatedEvent;
import com.flipdish.apiclient.model.WebsiteUpdatedEvent;
import com.flipdish.apiclient.model.WebsiteVanityUrlUpdatedEvent;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-31T15:44:39.698+01:00")
public class EventSearchResult {
  @SerializedName("AppCreatedEvent")
  private List<AppCreatedEvent> appCreatedEvent = null;

  @SerializedName("AppUpdatedEvent")
  private List<AppUpdatedEvent> appUpdatedEvent = null;

  @SerializedName("AnalyticsClientEvent")
  private List<AnalyticsClientEvent> analyticsClientEvent = null;

  @SerializedName("OrderAcceptedEvent")
  private List<OrderAcceptedEvent> orderAcceptedEvent = null;

  @SerializedName("OrderDispatchedEvent")
  private List<OrderDispatchedEvent> orderDispatchedEvent = null;

  @SerializedName("OrderCustomerTrackingCreatedEvent")
  private List<OrderCustomerTrackingCreatedEvent> orderCustomerTrackingCreatedEvent = null;

  @SerializedName("OrderDeliveryTrackingStatusUpdatedEvent")
  private List<OrderDeliveryTrackingStatusUpdatedEvent> orderDeliveryTrackingStatusUpdatedEvent = null;

  @SerializedName("OrderBatchPublishedEvent")
  private List<OrderBatchPublishedEvent> orderBatchPublishedEvent = null;

  @SerializedName("OrderCreatedEvent")
  private List<OrderCreatedEvent> orderCreatedEvent = null;

  @SerializedName("OrderRatingUpdatedEvent")
  private List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent = null;

  @SerializedName("OrderRefundedEvent")
  private List<OrderRefundedEvent> orderRefundedEvent = null;

  @SerializedName("OrderRejectedEvent")
  private List<OrderRejectedEvent> orderRejectedEvent = null;

  @SerializedName("OrderTipUpdatedEvent")
  private List<OrderTipUpdatedEvent> orderTipUpdatedEvent = null;

  @SerializedName("OrderTerminalNotifications")
  private List<EmvNotificationEvent> orderTerminalNotifications = null;

  @SerializedName("StoreCreatedEvent")
  private List<StoreCreatedEvent> storeCreatedEvent = null;

  @SerializedName("StoreDeletedEvent")
  private List<StoreDeletedEvent> storeDeletedEvent = null;

  @SerializedName("StoreAddressUpdatedEvent")
  private List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent = null;

  @SerializedName("StoreKioskSettingUpdatedEvent")
  private List<StoreKioskSettingUpdatedEvent> storeKioskSettingUpdatedEvent = null;

  @SerializedName("DeliveryZoneCreatedEvent")
  private List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent = null;

  @SerializedName("DeliveryZoneUpdatedEvent")
  private List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent = null;

  @SerializedName("DeliveryZoneDeletedEvent")
  private List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent = null;

  @SerializedName("StoreOpeningHoursUpdatedEvent")
  private List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent = null;

  @SerializedName("StoreMenuAssignedEvent")
  private List<StoreMenuAssignedEvent> storeMenuAssignedEvent = null;

  @SerializedName("StoreBusinessHoursOverrideCreatedEvent")
  private List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent = null;

  @SerializedName("StoreBusinessHoursOverrideDeletedEvent")
  private List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent = null;

  @SerializedName("StoreArchivedEvent")
  private List<StoreArchivedEvent> storeArchivedEvent = null;

  @SerializedName("StoreUnarchivedEvent")
  private List<StoreUnarchivedEvent> storeUnarchivedEvent = null;

  @SerializedName("StorePublishedEvent")
  private List<StorePublishedEvent> storePublishedEvent = null;

  @SerializedName("StoreUnpublishedEvent")
  private List<StoreUnpublishedEvent> storeUnpublishedEvent = null;

  @SerializedName("StoreUpdatedEvent")
  private List<StoreUpdatedEvent> storeUpdatedEvent = null;

  @SerializedName("StorePreOrderConfigUpdatedEvent")
  private List<StorePreOrderConfigUpdatedEvent> storePreOrderConfigUpdatedEvent = null;

  @SerializedName("StoreLogoCreatedEvent")
  private List<StoreLogoCreatedEvent> storeLogoCreatedEvent = null;

  @SerializedName("StoreLogoUpdatedEvent")
  private List<StoreLogoUpdatedEvent> storeLogoUpdatedEvent = null;

  @SerializedName("StoreLogoDeletedEvent")
  private List<StoreLogoDeletedEvent> storeLogoDeletedEvent = null;

  @SerializedName("MenuCreatedEvent")
  private List<MenuCreatedEvent> menuCreatedEvent = null;

  @SerializedName("MenuUpdatedEvent")
  private List<MenuUpdatedEvent> menuUpdatedEvent = null;

  @SerializedName("MenuUploadedEvent")
  private List<MenuUploadedEvent> menuUploadedEvent = null;

  @SerializedName("MenuBulkEditEvent")
  private List<MenuBulkEditEvent> menuBulkEditEvent = null;

  @SerializedName("MenuSectionCreatedEvent")
  private List<MenuSectionCreatedEvent> menuSectionCreatedEvent = null;

  @SerializedName("MenuSectionUpdatedEvent")
  private List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent = null;

  @SerializedName("MenuSectionDeletedEvent")
  private List<MenuSectionDeletedEvent> menuSectionDeletedEvent = null;

  @SerializedName("MenuSectionItemCreatedEvent")
  private List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent = null;

  @SerializedName("MenuSectionItemUpdatedEvent")
  private List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent = null;

  @SerializedName("MenuSectionItemDeletedEvent")
  private List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent = null;

  @SerializedName("MenuItemOptionSetCreatedEvent")
  private List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent = null;

  @SerializedName("MenuItemOptionSetUpdatedEvent")
  private List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent = null;

  @SerializedName("MenuItemOptionSetDeletedEvent")
  private List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent = null;

  @SerializedName("MenuItemOptionSetItemCreatedEvent")
  private List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent = null;

  @SerializedName("MenuItemOptionSetItemUpdatedEvent")
  private List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent = null;

  @SerializedName("MenuItemOptionSetItemDeletedEvent")
  private List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent = null;

  @SerializedName("MenuCheckpointCreatedEvent")
  private List<MenuCheckpointCreatedEvent> menuCheckpointCreatedEvent = null;

  @SerializedName("StoreGroupCreatedEvent")
  private List<StoreGroupCreatedEvent> storeGroupCreatedEvent = null;

  @SerializedName("StoreGroupUpdatedEvent")
  private List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent = null;

  @SerializedName("StoreGroupDeletedEvent")
  private List<StoreGroupDeletedEvent> storeGroupDeletedEvent = null;

  @SerializedName("CustomerCreatedEvent")
  private List<CustomerCreatedEvent> customerCreatedEvent = null;

  @SerializedName("CustomerUpdatedEvent")
  private List<CustomerUpdatedEvent> customerUpdatedEvent = null;

  @SerializedName("CustomerConsentUpdatedEvent")
  private List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent = null;

  @SerializedName("WebhookSubscriptionCreatedEvent")
  private List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent = null;

  @SerializedName("WebhookSubscriptionUpdatedEvent")
  private List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent = null;

  @SerializedName("WebhookSubscriptionDeletedEvent")
  private List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent = null;

  @SerializedName("PrinterTurnedOnEvent")
  private List<PrinterTurnedOnEvent> printerTurnedOnEvent = null;

  @SerializedName("PrinterTurnedOffEvent")
  private List<PrinterTurnedOffEvent> printerTurnedOffEvent = null;

  @SerializedName("PrinterAssignedToStoreEvent")
  private List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent = null;

  @SerializedName("PrinterUnassignedFromStoreEvent")
  private List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent = null;

  @SerializedName("PhoneCallStartedEvent")
  private List<PhoneCallStartedEvent> phoneCallStartedEvent = null;

  @SerializedName("PhoneCallEndedEvent")
  private List<PhoneCallEndedEvent> phoneCallEndedEvent = null;

  @SerializedName("LoyaltyCampaignCreatedEvent")
  private List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent = null;

  @SerializedName("LoyaltyCampaignDeletedEvent")
  private List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent = null;

  @SerializedName("LoyaltyCampaignUpdatedEvent")
  private List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent = null;

  @SerializedName("RetentionCampaignCreatedEvent")
  private List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent = null;

  @SerializedName("RetentionCampaignDeletedEvent")
  private List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent = null;

  @SerializedName("RetentionCampaignUpdatedEvent")
  private List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent = null;

  @SerializedName("SmsReceivedEvent")
  private List<SmsReceivedEvent> smsReceivedEvent = null;

  @SerializedName("UserLoginEvent")
  private List<UserLoginEvent> userLoginEvent = null;

  @SerializedName("UserCreatedEvent")
  private List<UserCreatedEvent> userCreatedEvent = null;

  @SerializedName("UserUpdatedEvent")
  private List<UserUpdatedEvent> userUpdatedEvent = null;

  @SerializedName("UserDeletedEvent")
  private List<UserDeletedEvent> userDeletedEvent = null;

  @SerializedName("UserCreatedPasswordEvent")
  private List<UserPasswordCreatedEvent> userCreatedPasswordEvent = null;

  @SerializedName("UserAnsweredSignupQuestionsEvent")
  private List<UserAnsweredSignupQuestionsEvent> userAnsweredSignupQuestionsEvent = null;

  @SerializedName("VoucherCreatedEvent")
  private List<VoucherCreatedEvent> voucherCreatedEvent = null;

  @SerializedName("VoucherUpdatedEvent")
  private List<VoucherUpdatedEvent> voucherUpdatedEvent = null;

  @SerializedName("VoucherDeletedEvent")
  private List<VoucherDeletedEvent> voucherDeletedEvent = null;

  @SerializedName("TeammateInviteSentEvent")
  private List<TeammateInviteSentEvent> teammateInviteSentEvent = null;

  @SerializedName("TeammateInviteAcceptedEvent")
  private List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent = null;

  @SerializedName("TeammateUpdatedEvent")
  private List<TeammateUpdatedEvent> teammateUpdatedEvent = null;

  @SerializedName("TeammateDeletedEvent")
  private List<TeammateDeletedEvent> teammateDeletedEvent = null;

  @SerializedName("BankAccountCreatedEvent")
  private List<BankAccountCreatedEvent> bankAccountCreatedEvent = null;

  @SerializedName("BankAccountUpdatedEvent")
  private List<BankAccountUpdatedEvent> bankAccountUpdatedEvent = null;

  @SerializedName("BankAccountDeletedEvent")
  private List<BankAccountDeletedEvent> bankAccountDeletedEvent = null;

  @SerializedName("BankAccountAssignedEvent")
  private List<BankAccountAssignedEvent> bankAccountAssignedEvent = null;

  @SerializedName("HydraAssignedEvent")
  private List<HydraAssignedEvent> hydraAssignedEvent = null;

  @SerializedName("HydraRequestResetEvent")
  private List<HydraRequestResetEvent> hydraRequestResetEvent = null;

  @SerializedName("HydraStoreAssignedEvent")
  private List<HydraStoreAssignedEvent> hydraStoreAssignedEvent = null;

  @SerializedName("HydraStoreUnassignedEvent")
  private List<HydraStoreUnassignedEvent> hydraStoreUnassignedEvent = null;

  @SerializedName("HydraSettingChangedEvent")
  private List<HydraSettingChangedEvent> hydraSettingChangedEvent = null;

  @SerializedName("HydraUnAssignedEvent")
  private List<HydraUnAssignedEvent> hydraUnAssignedEvent = null;

  @SerializedName("HydraConnectionStatusChangedEvent")
  private List<HydraConnectionStatusChangedEvent> hydraConnectionStatusChangedEvent = null;

  @SerializedName("KioskBluetoothPairingModeEvent")
  private List<KioskBluetoothPairingModeEvent> kioskBluetoothPairingModeEvent = null;

  @SerializedName("KioskBluetoothUnpairingModeEvent")
  private List<KioskBluetoothUnpairingModeEvent> kioskBluetoothUnpairingModeEvent = null;

  @SerializedName("KioskBluetoothTerminalUnpairedEvent")
  private List<KioskBluetoothTerminalUnpairedEvent> kioskBluetoothTerminalUnpairedEvent = null;

  @SerializedName("KioskTerminalActionStateChangedEvent")
  private List<KioskTerminalActionStateChangedEvent> kioskTerminalActionStateChangedEvent = null;

  @SerializedName("KioskBluetoothTerminalUpdatedEvent")
  private List<KioskBluetoothTerminalUpdatedEvent> kioskBluetoothTerminalUpdatedEvent = null;

  @SerializedName("KioskBluetoothTerminalInitiateUpdateCheckEvent")
  private List<KioskBluetoothTerminalInitiateUpdateCheckEvent> kioskBluetoothTerminalInitiateUpdateCheckEvent = null;

  @SerializedName("KioskBluetoothInstallUpdateInitiateEvent")
  private List<KioskBluetoothInstallUpdateInitiateEvent> kioskBluetoothInstallUpdateInitiateEvent = null;

  @SerializedName("KioskBluetoothTerminalCancelUpdateEvent")
  private List<KioskBluetoothTerminalCancelUpdateEvent> kioskBluetoothTerminalCancelUpdateEvent = null;

  @SerializedName("KioskBluetoothTerminalFirmwareVersionStatusEvent")
  private List<KioskBluetoothTerminalFirmwareVersionStatusEvent> kioskBluetoothTerminalFirmwareVersionStatusEvent = null;

  @SerializedName("KioskBluetoothTerminalInstallationStatusEvent")
  private List<KioskBluetoothTerminalInstallationStatusEvent> kioskBluetoothTerminalInstallationStatusEvent = null;

  @SerializedName("PushNotificationScheduledEvent")
  private List<PushNotificationScheduledEvent> pushNotificationScheduledEvent = null;

  @SerializedName("PushNotificationSentEvent")
  private List<PushNotificationSentEvent> pushNotificationSentEvent = null;

  @SerializedName("PushNotificationDeletedEvent")
  private List<PushNotificationDeletedEvent> pushNotificationDeletedEvent = null;

  @SerializedName("DnsVerifiedEvent")
  private List<DnsVerifiedEvent> dnsVerifiedEvent = null;

  @SerializedName("CertificateCreatedEvent")
  private List<CertificateCreatedEvent> certificateCreatedEvent = null;

  @SerializedName("CertificateRenewedEvent")
  private List<CertificateRenewedEvent> certificateRenewedEvent = null;

  @SerializedName("WebsiteVanityUrlUpdatedEvent")
  private List<WebsiteVanityUrlUpdatedEvent> websiteVanityUrlUpdatedEvent = null;

  @SerializedName("WebsiteUpdatedEvent")
  private List<WebsiteUpdatedEvent> websiteUpdatedEvent = null;

  @SerializedName("OrderCapacityUpdatedEvent")
  private List<OrderCapacityConfigUpdatedEvent> orderCapacityUpdatedEvent = null;

  @SerializedName("ExternalStoreEvent")
  private List<ExternalStoreEvent> externalStoreEvent = null;

  @SerializedName("OrderFulfillmentStatusUpdatedEvent")
  private List<OrderFulfillmentStatusUpdatedEvent> orderFulfillmentStatusUpdatedEvent = null;

  @SerializedName("AppStoreConfigCreatedEvent")
  private List<AppStoreConfigCreatedEvent> appStoreConfigCreatedEvent = null;

  @SerializedName("AppStoreConfigUpdatedEvent")
  private List<AppStoreConfigUpdatedEvent> appStoreConfigUpdatedEvent = null;

  @SerializedName("AppStoreConfigDeletedEvent")
  private List<AppStoreConfigDeletedEvent> appStoreConfigDeletedEvent = null;

  @SerializedName("CatalogItemCreatedEvent")
  private List<CatalogItemCreatedEvent> catalogItemCreatedEvent = null;

  @SerializedName("CatalogItemUpdatedEvent")
  private List<CatalogItemUpdatedEvent> catalogItemUpdatedEvent = null;

  @SerializedName("CatalogItemArchivedEvent")
  private List<CatalogItemArchivedEvent> catalogItemArchivedEvent = null;

  @SerializedName("CatalogGroupCreatedEvent")
  private List<CatalogGroupCreatedEvent> catalogGroupCreatedEvent = null;

  @SerializedName("CatalogGroupUpdatedEvent")
  private List<CatalogGroupUpdatedEvent> catalogGroupUpdatedEvent = null;

  @SerializedName("CatalogGroupArchivedEvent")
  private List<CatalogGroupArchivedEvent> catalogGroupArchivedEvent = null;

  @SerializedName("StoreTipUpdatedEvent")
  private List<StoreTipUpdatedEvent> storeTipUpdatedEvent = null;

  @SerializedName("LocationAreaCreatedEvent")
  private List<LocationAreaCreatedEvent> locationAreaCreatedEvent = null;

  @SerializedName("LocationAreaUpdatedEvent")
  private List<LocationAreaUpdatedEvent> locationAreaUpdatedEvent = null;

  @SerializedName("LocationCreatedEvent")
  private List<LocationCreatedEvent> locationCreatedEvent = null;

  @SerializedName("LocationDeletedEvent")
  private List<LocationDeletedEvent> locationDeletedEvent = null;

  @SerializedName("StoreServiceChargeUpdatedEvent")
  private List<StoreServiceChargeUpdatedEvent> storeServiceChargeUpdatedEvent = null;

  @SerializedName("MobileAppsSubmissionStatusUpdatedEvent")
  private List<MobileAppsSubmissionStatusUpdatedEvent> mobileAppsSubmissionStatusUpdatedEvent = null;

  @SerializedName("MobileAppsSubmissionUpdatedEvent")
  private List<MobileAppsSubmissionUpdatedEvent> mobileAppsSubmissionUpdatedEvent = null;

  @SerializedName("StoreFeeConfigUpdatedEvent")
  private List<StoreFeeConfigUpdatedEvent> storeFeeConfigUpdatedEvent = null;

  public EventSearchResult appCreatedEvent(List<AppCreatedEvent> appCreatedEvent) {
    this.appCreatedEvent = appCreatedEvent;
    return this;
  }

  public EventSearchResult addAppCreatedEventItem(AppCreatedEvent appCreatedEventItem) {
    if (this.appCreatedEvent == null) {
      this.appCreatedEvent = new ArrayList<AppCreatedEvent>();
    }
    this.appCreatedEvent.add(appCreatedEventItem);
    return this;
  }

   /**
   * App Created Event
   * @return appCreatedEvent
  **/
  @ApiModelProperty(value = "App Created Event")
  public List<AppCreatedEvent> getAppCreatedEvent() {
    return appCreatedEvent;
  }

  public void setAppCreatedEvent(List<AppCreatedEvent> appCreatedEvent) {
    this.appCreatedEvent = appCreatedEvent;
  }

  public EventSearchResult appUpdatedEvent(List<AppUpdatedEvent> appUpdatedEvent) {
    this.appUpdatedEvent = appUpdatedEvent;
    return this;
  }

  public EventSearchResult addAppUpdatedEventItem(AppUpdatedEvent appUpdatedEventItem) {
    if (this.appUpdatedEvent == null) {
      this.appUpdatedEvent = new ArrayList<AppUpdatedEvent>();
    }
    this.appUpdatedEvent.add(appUpdatedEventItem);
    return this;
  }

   /**
   * App Updated Event
   * @return appUpdatedEvent
  **/
  @ApiModelProperty(value = "App Updated Event")
  public List<AppUpdatedEvent> getAppUpdatedEvent() {
    return appUpdatedEvent;
  }

  public void setAppUpdatedEvent(List<AppUpdatedEvent> appUpdatedEvent) {
    this.appUpdatedEvent = appUpdatedEvent;
  }

  public EventSearchResult analyticsClientEvent(List<AnalyticsClientEvent> analyticsClientEvent) {
    this.analyticsClientEvent = analyticsClientEvent;
    return this;
  }

  public EventSearchResult addAnalyticsClientEventItem(AnalyticsClientEvent analyticsClientEventItem) {
    if (this.analyticsClientEvent == null) {
      this.analyticsClientEvent = new ArrayList<AnalyticsClientEvent>();
    }
    this.analyticsClientEvent.add(analyticsClientEventItem);
    return this;
  }

   /**
   * Client Analytics events
   * @return analyticsClientEvent
  **/
  @ApiModelProperty(value = "Client Analytics events")
  public List<AnalyticsClientEvent> getAnalyticsClientEvent() {
    return analyticsClientEvent;
  }

  public void setAnalyticsClientEvent(List<AnalyticsClientEvent> analyticsClientEvent) {
    this.analyticsClientEvent = analyticsClientEvent;
  }

  public EventSearchResult orderAcceptedEvent(List<OrderAcceptedEvent> orderAcceptedEvent) {
    this.orderAcceptedEvent = orderAcceptedEvent;
    return this;
  }

  public EventSearchResult addOrderAcceptedEventItem(OrderAcceptedEvent orderAcceptedEventItem) {
    if (this.orderAcceptedEvent == null) {
      this.orderAcceptedEvent = new ArrayList<OrderAcceptedEvent>();
    }
    this.orderAcceptedEvent.add(orderAcceptedEventItem);
    return this;
  }

   /**
   * Order accepted events
   * @return orderAcceptedEvent
  **/
  @ApiModelProperty(value = "Order accepted events")
  public List<OrderAcceptedEvent> getOrderAcceptedEvent() {
    return orderAcceptedEvent;
  }

  public void setOrderAcceptedEvent(List<OrderAcceptedEvent> orderAcceptedEvent) {
    this.orderAcceptedEvent = orderAcceptedEvent;
  }

  public EventSearchResult orderDispatchedEvent(List<OrderDispatchedEvent> orderDispatchedEvent) {
    this.orderDispatchedEvent = orderDispatchedEvent;
    return this;
  }

  public EventSearchResult addOrderDispatchedEventItem(OrderDispatchedEvent orderDispatchedEventItem) {
    if (this.orderDispatchedEvent == null) {
      this.orderDispatchedEvent = new ArrayList<OrderDispatchedEvent>();
    }
    this.orderDispatchedEvent.add(orderDispatchedEventItem);
    return this;
  }

   /**
   * Order dispatched events
   * @return orderDispatchedEvent
  **/
  @ApiModelProperty(value = "Order dispatched events")
  public List<OrderDispatchedEvent> getOrderDispatchedEvent() {
    return orderDispatchedEvent;
  }

  public void setOrderDispatchedEvent(List<OrderDispatchedEvent> orderDispatchedEvent) {
    this.orderDispatchedEvent = orderDispatchedEvent;
  }

  public EventSearchResult orderCustomerTrackingCreatedEvent(List<OrderCustomerTrackingCreatedEvent> orderCustomerTrackingCreatedEvent) {
    this.orderCustomerTrackingCreatedEvent = orderCustomerTrackingCreatedEvent;
    return this;
  }

  public EventSearchResult addOrderCustomerTrackingCreatedEventItem(OrderCustomerTrackingCreatedEvent orderCustomerTrackingCreatedEventItem) {
    if (this.orderCustomerTrackingCreatedEvent == null) {
      this.orderCustomerTrackingCreatedEvent = new ArrayList<OrderCustomerTrackingCreatedEvent>();
    }
    this.orderCustomerTrackingCreatedEvent.add(orderCustomerTrackingCreatedEventItem);
    return this;
  }

   /**
   * Order delivery tracking created events
   * @return orderCustomerTrackingCreatedEvent
  **/
  @ApiModelProperty(value = "Order delivery tracking created events")
  public List<OrderCustomerTrackingCreatedEvent> getOrderCustomerTrackingCreatedEvent() {
    return orderCustomerTrackingCreatedEvent;
  }

  public void setOrderCustomerTrackingCreatedEvent(List<OrderCustomerTrackingCreatedEvent> orderCustomerTrackingCreatedEvent) {
    this.orderCustomerTrackingCreatedEvent = orderCustomerTrackingCreatedEvent;
  }

  public EventSearchResult orderDeliveryTrackingStatusUpdatedEvent(List<OrderDeliveryTrackingStatusUpdatedEvent> orderDeliveryTrackingStatusUpdatedEvent) {
    this.orderDeliveryTrackingStatusUpdatedEvent = orderDeliveryTrackingStatusUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderDeliveryTrackingStatusUpdatedEventItem(OrderDeliveryTrackingStatusUpdatedEvent orderDeliveryTrackingStatusUpdatedEventItem) {
    if (this.orderDeliveryTrackingStatusUpdatedEvent == null) {
      this.orderDeliveryTrackingStatusUpdatedEvent = new ArrayList<OrderDeliveryTrackingStatusUpdatedEvent>();
    }
    this.orderDeliveryTrackingStatusUpdatedEvent.add(orderDeliveryTrackingStatusUpdatedEventItem);
    return this;
  }

   /**
   * Order delivery tracking updated events
   * @return orderDeliveryTrackingStatusUpdatedEvent
  **/
  @ApiModelProperty(value = "Order delivery tracking updated events")
  public List<OrderDeliveryTrackingStatusUpdatedEvent> getOrderDeliveryTrackingStatusUpdatedEvent() {
    return orderDeliveryTrackingStatusUpdatedEvent;
  }

  public void setOrderDeliveryTrackingStatusUpdatedEvent(List<OrderDeliveryTrackingStatusUpdatedEvent> orderDeliveryTrackingStatusUpdatedEvent) {
    this.orderDeliveryTrackingStatusUpdatedEvent = orderDeliveryTrackingStatusUpdatedEvent;
  }

  public EventSearchResult orderBatchPublishedEvent(List<OrderBatchPublishedEvent> orderBatchPublishedEvent) {
    this.orderBatchPublishedEvent = orderBatchPublishedEvent;
    return this;
  }

  public EventSearchResult addOrderBatchPublishedEventItem(OrderBatchPublishedEvent orderBatchPublishedEventItem) {
    if (this.orderBatchPublishedEvent == null) {
      this.orderBatchPublishedEvent = new ArrayList<OrderBatchPublishedEvent>();
    }
    this.orderBatchPublishedEvent.add(orderBatchPublishedEventItem);
    return this;
  }

   /**
   * Order Batch published event
   * @return orderBatchPublishedEvent
  **/
  @ApiModelProperty(value = "Order Batch published event")
  public List<OrderBatchPublishedEvent> getOrderBatchPublishedEvent() {
    return orderBatchPublishedEvent;
  }

  public void setOrderBatchPublishedEvent(List<OrderBatchPublishedEvent> orderBatchPublishedEvent) {
    this.orderBatchPublishedEvent = orderBatchPublishedEvent;
  }

  public EventSearchResult orderCreatedEvent(List<OrderCreatedEvent> orderCreatedEvent) {
    this.orderCreatedEvent = orderCreatedEvent;
    return this;
  }

  public EventSearchResult addOrderCreatedEventItem(OrderCreatedEvent orderCreatedEventItem) {
    if (this.orderCreatedEvent == null) {
      this.orderCreatedEvent = new ArrayList<OrderCreatedEvent>();
    }
    this.orderCreatedEvent.add(orderCreatedEventItem);
    return this;
  }

   /**
   * Order created events
   * @return orderCreatedEvent
  **/
  @ApiModelProperty(value = "Order created events")
  public List<OrderCreatedEvent> getOrderCreatedEvent() {
    return orderCreatedEvent;
  }

  public void setOrderCreatedEvent(List<OrderCreatedEvent> orderCreatedEvent) {
    this.orderCreatedEvent = orderCreatedEvent;
  }

  public EventSearchResult orderRatingUpdatedEvent(List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent) {
    this.orderRatingUpdatedEvent = orderRatingUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderRatingUpdatedEventItem(OrderRatingUpdatedEvent orderRatingUpdatedEventItem) {
    if (this.orderRatingUpdatedEvent == null) {
      this.orderRatingUpdatedEvent = new ArrayList<OrderRatingUpdatedEvent>();
    }
    this.orderRatingUpdatedEvent.add(orderRatingUpdatedEventItem);
    return this;
  }

   /**
   * Order rating updated events
   * @return orderRatingUpdatedEvent
  **/
  @ApiModelProperty(value = "Order rating updated events")
  public List<OrderRatingUpdatedEvent> getOrderRatingUpdatedEvent() {
    return orderRatingUpdatedEvent;
  }

  public void setOrderRatingUpdatedEvent(List<OrderRatingUpdatedEvent> orderRatingUpdatedEvent) {
    this.orderRatingUpdatedEvent = orderRatingUpdatedEvent;
  }

  public EventSearchResult orderRefundedEvent(List<OrderRefundedEvent> orderRefundedEvent) {
    this.orderRefundedEvent = orderRefundedEvent;
    return this;
  }

  public EventSearchResult addOrderRefundedEventItem(OrderRefundedEvent orderRefundedEventItem) {
    if (this.orderRefundedEvent == null) {
      this.orderRefundedEvent = new ArrayList<OrderRefundedEvent>();
    }
    this.orderRefundedEvent.add(orderRefundedEventItem);
    return this;
  }

   /**
   * Order refunded events
   * @return orderRefundedEvent
  **/
  @ApiModelProperty(value = "Order refunded events")
  public List<OrderRefundedEvent> getOrderRefundedEvent() {
    return orderRefundedEvent;
  }

  public void setOrderRefundedEvent(List<OrderRefundedEvent> orderRefundedEvent) {
    this.orderRefundedEvent = orderRefundedEvent;
  }

  public EventSearchResult orderRejectedEvent(List<OrderRejectedEvent> orderRejectedEvent) {
    this.orderRejectedEvent = orderRejectedEvent;
    return this;
  }

  public EventSearchResult addOrderRejectedEventItem(OrderRejectedEvent orderRejectedEventItem) {
    if (this.orderRejectedEvent == null) {
      this.orderRejectedEvent = new ArrayList<OrderRejectedEvent>();
    }
    this.orderRejectedEvent.add(orderRejectedEventItem);
    return this;
  }

   /**
   * Order rejected events
   * @return orderRejectedEvent
  **/
  @ApiModelProperty(value = "Order rejected events")
  public List<OrderRejectedEvent> getOrderRejectedEvent() {
    return orderRejectedEvent;
  }

  public void setOrderRejectedEvent(List<OrderRejectedEvent> orderRejectedEvent) {
    this.orderRejectedEvent = orderRejectedEvent;
  }

  public EventSearchResult orderTipUpdatedEvent(List<OrderTipUpdatedEvent> orderTipUpdatedEvent) {
    this.orderTipUpdatedEvent = orderTipUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderTipUpdatedEventItem(OrderTipUpdatedEvent orderTipUpdatedEventItem) {
    if (this.orderTipUpdatedEvent == null) {
      this.orderTipUpdatedEvent = new ArrayList<OrderTipUpdatedEvent>();
    }
    this.orderTipUpdatedEvent.add(orderTipUpdatedEventItem);
    return this;
  }

   /**
   * Order tip updated events
   * @return orderTipUpdatedEvent
  **/
  @ApiModelProperty(value = "Order tip updated events")
  public List<OrderTipUpdatedEvent> getOrderTipUpdatedEvent() {
    return orderTipUpdatedEvent;
  }

  public void setOrderTipUpdatedEvent(List<OrderTipUpdatedEvent> orderTipUpdatedEvent) {
    this.orderTipUpdatedEvent = orderTipUpdatedEvent;
  }

  public EventSearchResult orderTerminalNotifications(List<EmvNotificationEvent> orderTerminalNotifications) {
    this.orderTerminalNotifications = orderTerminalNotifications;
    return this;
  }

  public EventSearchResult addOrderTerminalNotificationsItem(EmvNotificationEvent orderTerminalNotificationsItem) {
    if (this.orderTerminalNotifications == null) {
      this.orderTerminalNotifications = new ArrayList<EmvNotificationEvent>();
    }
    this.orderTerminalNotifications.add(orderTerminalNotificationsItem);
    return this;
  }

   /**
   * Order Terminal Notification events
   * @return orderTerminalNotifications
  **/
  @ApiModelProperty(value = "Order Terminal Notification events")
  public List<EmvNotificationEvent> getOrderTerminalNotifications() {
    return orderTerminalNotifications;
  }

  public void setOrderTerminalNotifications(List<EmvNotificationEvent> orderTerminalNotifications) {
    this.orderTerminalNotifications = orderTerminalNotifications;
  }

  public EventSearchResult storeCreatedEvent(List<StoreCreatedEvent> storeCreatedEvent) {
    this.storeCreatedEvent = storeCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreCreatedEventItem(StoreCreatedEvent storeCreatedEventItem) {
    if (this.storeCreatedEvent == null) {
      this.storeCreatedEvent = new ArrayList<StoreCreatedEvent>();
    }
    this.storeCreatedEvent.add(storeCreatedEventItem);
    return this;
  }

   /**
   * Store created events
   * @return storeCreatedEvent
  **/
  @ApiModelProperty(value = "Store created events")
  public List<StoreCreatedEvent> getStoreCreatedEvent() {
    return storeCreatedEvent;
  }

  public void setStoreCreatedEvent(List<StoreCreatedEvent> storeCreatedEvent) {
    this.storeCreatedEvent = storeCreatedEvent;
  }

  public EventSearchResult storeDeletedEvent(List<StoreDeletedEvent> storeDeletedEvent) {
    this.storeDeletedEvent = storeDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreDeletedEventItem(StoreDeletedEvent storeDeletedEventItem) {
    if (this.storeDeletedEvent == null) {
      this.storeDeletedEvent = new ArrayList<StoreDeletedEvent>();
    }
    this.storeDeletedEvent.add(storeDeletedEventItem);
    return this;
  }

   /**
   * Store deleted events
   * @return storeDeletedEvent
  **/
  @ApiModelProperty(value = "Store deleted events")
  public List<StoreDeletedEvent> getStoreDeletedEvent() {
    return storeDeletedEvent;
  }

  public void setStoreDeletedEvent(List<StoreDeletedEvent> storeDeletedEvent) {
    this.storeDeletedEvent = storeDeletedEvent;
  }

  public EventSearchResult storeAddressUpdatedEvent(List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent) {
    this.storeAddressUpdatedEvent = storeAddressUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreAddressUpdatedEventItem(StoreAddressUpdatedEvent storeAddressUpdatedEventItem) {
    if (this.storeAddressUpdatedEvent == null) {
      this.storeAddressUpdatedEvent = new ArrayList<StoreAddressUpdatedEvent>();
    }
    this.storeAddressUpdatedEvent.add(storeAddressUpdatedEventItem);
    return this;
  }

   /**
   * Store address updated events
   * @return storeAddressUpdatedEvent
  **/
  @ApiModelProperty(value = "Store address updated events")
  public List<StoreAddressUpdatedEvent> getStoreAddressUpdatedEvent() {
    return storeAddressUpdatedEvent;
  }

  public void setStoreAddressUpdatedEvent(List<StoreAddressUpdatedEvent> storeAddressUpdatedEvent) {
    this.storeAddressUpdatedEvent = storeAddressUpdatedEvent;
  }

  public EventSearchResult storeKioskSettingUpdatedEvent(List<StoreKioskSettingUpdatedEvent> storeKioskSettingUpdatedEvent) {
    this.storeKioskSettingUpdatedEvent = storeKioskSettingUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreKioskSettingUpdatedEventItem(StoreKioskSettingUpdatedEvent storeKioskSettingUpdatedEventItem) {
    if (this.storeKioskSettingUpdatedEvent == null) {
      this.storeKioskSettingUpdatedEvent = new ArrayList<StoreKioskSettingUpdatedEvent>();
    }
    this.storeKioskSettingUpdatedEvent.add(storeKioskSettingUpdatedEventItem);
    return this;
  }

   /**
   * Store kiosk setting updated events
   * @return storeKioskSettingUpdatedEvent
  **/
  @ApiModelProperty(value = "Store kiosk setting updated events")
  public List<StoreKioskSettingUpdatedEvent> getStoreKioskSettingUpdatedEvent() {
    return storeKioskSettingUpdatedEvent;
  }

  public void setStoreKioskSettingUpdatedEvent(List<StoreKioskSettingUpdatedEvent> storeKioskSettingUpdatedEvent) {
    this.storeKioskSettingUpdatedEvent = storeKioskSettingUpdatedEvent;
  }

  public EventSearchResult deliveryZoneCreatedEvent(List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent) {
    this.deliveryZoneCreatedEvent = deliveryZoneCreatedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneCreatedEventItem(DeliveryZoneCreatedEvent deliveryZoneCreatedEventItem) {
    if (this.deliveryZoneCreatedEvent == null) {
      this.deliveryZoneCreatedEvent = new ArrayList<DeliveryZoneCreatedEvent>();
    }
    this.deliveryZoneCreatedEvent.add(deliveryZoneCreatedEventItem);
    return this;
  }

   /**
   * Store delivery zone created events
   * @return deliveryZoneCreatedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone created events")
  public List<DeliveryZoneCreatedEvent> getDeliveryZoneCreatedEvent() {
    return deliveryZoneCreatedEvent;
  }

  public void setDeliveryZoneCreatedEvent(List<DeliveryZoneCreatedEvent> deliveryZoneCreatedEvent) {
    this.deliveryZoneCreatedEvent = deliveryZoneCreatedEvent;
  }

  public EventSearchResult deliveryZoneUpdatedEvent(List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent) {
    this.deliveryZoneUpdatedEvent = deliveryZoneUpdatedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneUpdatedEventItem(DeliveryZoneUpdatedEvent deliveryZoneUpdatedEventItem) {
    if (this.deliveryZoneUpdatedEvent == null) {
      this.deliveryZoneUpdatedEvent = new ArrayList<DeliveryZoneUpdatedEvent>();
    }
    this.deliveryZoneUpdatedEvent.add(deliveryZoneUpdatedEventItem);
    return this;
  }

   /**
   * Store delivery zone updated events
   * @return deliveryZoneUpdatedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone updated events")
  public List<DeliveryZoneUpdatedEvent> getDeliveryZoneUpdatedEvent() {
    return deliveryZoneUpdatedEvent;
  }

  public void setDeliveryZoneUpdatedEvent(List<DeliveryZoneUpdatedEvent> deliveryZoneUpdatedEvent) {
    this.deliveryZoneUpdatedEvent = deliveryZoneUpdatedEvent;
  }

  public EventSearchResult deliveryZoneDeletedEvent(List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent) {
    this.deliveryZoneDeletedEvent = deliveryZoneDeletedEvent;
    return this;
  }

  public EventSearchResult addDeliveryZoneDeletedEventItem(DeliveryZoneDeletedEvent deliveryZoneDeletedEventItem) {
    if (this.deliveryZoneDeletedEvent == null) {
      this.deliveryZoneDeletedEvent = new ArrayList<DeliveryZoneDeletedEvent>();
    }
    this.deliveryZoneDeletedEvent.add(deliveryZoneDeletedEventItem);
    return this;
  }

   /**
   * Store delivery zone deleted events
   * @return deliveryZoneDeletedEvent
  **/
  @ApiModelProperty(value = "Store delivery zone deleted events")
  public List<DeliveryZoneDeletedEvent> getDeliveryZoneDeletedEvent() {
    return deliveryZoneDeletedEvent;
  }

  public void setDeliveryZoneDeletedEvent(List<DeliveryZoneDeletedEvent> deliveryZoneDeletedEvent) {
    this.deliveryZoneDeletedEvent = deliveryZoneDeletedEvent;
  }

  public EventSearchResult storeOpeningHoursUpdatedEvent(List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent) {
    this.storeOpeningHoursUpdatedEvent = storeOpeningHoursUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreOpeningHoursUpdatedEventItem(StoreOpeningHoursUpdatedEvent storeOpeningHoursUpdatedEventItem) {
    if (this.storeOpeningHoursUpdatedEvent == null) {
      this.storeOpeningHoursUpdatedEvent = new ArrayList<StoreOpeningHoursUpdatedEvent>();
    }
    this.storeOpeningHoursUpdatedEvent.add(storeOpeningHoursUpdatedEventItem);
    return this;
  }

   /**
   * Store opening hours updated events
   * @return storeOpeningHoursUpdatedEvent
  **/
  @ApiModelProperty(value = "Store opening hours updated events")
  public List<StoreOpeningHoursUpdatedEvent> getStoreOpeningHoursUpdatedEvent() {
    return storeOpeningHoursUpdatedEvent;
  }

  public void setStoreOpeningHoursUpdatedEvent(List<StoreOpeningHoursUpdatedEvent> storeOpeningHoursUpdatedEvent) {
    this.storeOpeningHoursUpdatedEvent = storeOpeningHoursUpdatedEvent;
  }

  public EventSearchResult storeMenuAssignedEvent(List<StoreMenuAssignedEvent> storeMenuAssignedEvent) {
    this.storeMenuAssignedEvent = storeMenuAssignedEvent;
    return this;
  }

  public EventSearchResult addStoreMenuAssignedEventItem(StoreMenuAssignedEvent storeMenuAssignedEventItem) {
    if (this.storeMenuAssignedEvent == null) {
      this.storeMenuAssignedEvent = new ArrayList<StoreMenuAssignedEvent>();
    }
    this.storeMenuAssignedEvent.add(storeMenuAssignedEventItem);
    return this;
  }

   /**
   * Store opening hours updated events
   * @return storeMenuAssignedEvent
  **/
  @ApiModelProperty(value = "Store opening hours updated events")
  public List<StoreMenuAssignedEvent> getStoreMenuAssignedEvent() {
    return storeMenuAssignedEvent;
  }

  public void setStoreMenuAssignedEvent(List<StoreMenuAssignedEvent> storeMenuAssignedEvent) {
    this.storeMenuAssignedEvent = storeMenuAssignedEvent;
  }

  public EventSearchResult storeBusinessHoursOverrideCreatedEvent(List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent) {
    this.storeBusinessHoursOverrideCreatedEvent = storeBusinessHoursOverrideCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreBusinessHoursOverrideCreatedEventItem(StoreBusinessHoursOverrideCreatedEvent storeBusinessHoursOverrideCreatedEventItem) {
    if (this.storeBusinessHoursOverrideCreatedEvent == null) {
      this.storeBusinessHoursOverrideCreatedEvent = new ArrayList<StoreBusinessHoursOverrideCreatedEvent>();
    }
    this.storeBusinessHoursOverrideCreatedEvent.add(storeBusinessHoursOverrideCreatedEventItem);
    return this;
  }

   /**
   * Store business hours override created events
   * @return storeBusinessHoursOverrideCreatedEvent
  **/
  @ApiModelProperty(value = "Store business hours override created events")
  public List<StoreBusinessHoursOverrideCreatedEvent> getStoreBusinessHoursOverrideCreatedEvent() {
    return storeBusinessHoursOverrideCreatedEvent;
  }

  public void setStoreBusinessHoursOverrideCreatedEvent(List<StoreBusinessHoursOverrideCreatedEvent> storeBusinessHoursOverrideCreatedEvent) {
    this.storeBusinessHoursOverrideCreatedEvent = storeBusinessHoursOverrideCreatedEvent;
  }

  public EventSearchResult storeBusinessHoursOverrideDeletedEvent(List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent) {
    this.storeBusinessHoursOverrideDeletedEvent = storeBusinessHoursOverrideDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreBusinessHoursOverrideDeletedEventItem(StoreBusinessHoursOverrideDeletedEvent storeBusinessHoursOverrideDeletedEventItem) {
    if (this.storeBusinessHoursOverrideDeletedEvent == null) {
      this.storeBusinessHoursOverrideDeletedEvent = new ArrayList<StoreBusinessHoursOverrideDeletedEvent>();
    }
    this.storeBusinessHoursOverrideDeletedEvent.add(storeBusinessHoursOverrideDeletedEventItem);
    return this;
  }

   /**
   * Store business hours override deleted events
   * @return storeBusinessHoursOverrideDeletedEvent
  **/
  @ApiModelProperty(value = "Store business hours override deleted events")
  public List<StoreBusinessHoursOverrideDeletedEvent> getStoreBusinessHoursOverrideDeletedEvent() {
    return storeBusinessHoursOverrideDeletedEvent;
  }

  public void setStoreBusinessHoursOverrideDeletedEvent(List<StoreBusinessHoursOverrideDeletedEvent> storeBusinessHoursOverrideDeletedEvent) {
    this.storeBusinessHoursOverrideDeletedEvent = storeBusinessHoursOverrideDeletedEvent;
  }

  public EventSearchResult storeArchivedEvent(List<StoreArchivedEvent> storeArchivedEvent) {
    this.storeArchivedEvent = storeArchivedEvent;
    return this;
  }

  public EventSearchResult addStoreArchivedEventItem(StoreArchivedEvent storeArchivedEventItem) {
    if (this.storeArchivedEvent == null) {
      this.storeArchivedEvent = new ArrayList<StoreArchivedEvent>();
    }
    this.storeArchivedEvent.add(storeArchivedEventItem);
    return this;
  }

   /**
   * Store archived events
   * @return storeArchivedEvent
  **/
  @ApiModelProperty(value = "Store archived events")
  public List<StoreArchivedEvent> getStoreArchivedEvent() {
    return storeArchivedEvent;
  }

  public void setStoreArchivedEvent(List<StoreArchivedEvent> storeArchivedEvent) {
    this.storeArchivedEvent = storeArchivedEvent;
  }

  public EventSearchResult storeUnarchivedEvent(List<StoreUnarchivedEvent> storeUnarchivedEvent) {
    this.storeUnarchivedEvent = storeUnarchivedEvent;
    return this;
  }

  public EventSearchResult addStoreUnarchivedEventItem(StoreUnarchivedEvent storeUnarchivedEventItem) {
    if (this.storeUnarchivedEvent == null) {
      this.storeUnarchivedEvent = new ArrayList<StoreUnarchivedEvent>();
    }
    this.storeUnarchivedEvent.add(storeUnarchivedEventItem);
    return this;
  }

   /**
   * Store unarchived events
   * @return storeUnarchivedEvent
  **/
  @ApiModelProperty(value = "Store unarchived events")
  public List<StoreUnarchivedEvent> getStoreUnarchivedEvent() {
    return storeUnarchivedEvent;
  }

  public void setStoreUnarchivedEvent(List<StoreUnarchivedEvent> storeUnarchivedEvent) {
    this.storeUnarchivedEvent = storeUnarchivedEvent;
  }

  public EventSearchResult storePublishedEvent(List<StorePublishedEvent> storePublishedEvent) {
    this.storePublishedEvent = storePublishedEvent;
    return this;
  }

  public EventSearchResult addStorePublishedEventItem(StorePublishedEvent storePublishedEventItem) {
    if (this.storePublishedEvent == null) {
      this.storePublishedEvent = new ArrayList<StorePublishedEvent>();
    }
    this.storePublishedEvent.add(storePublishedEventItem);
    return this;
  }

   /**
   * Store published events
   * @return storePublishedEvent
  **/
  @ApiModelProperty(value = "Store published events")
  public List<StorePublishedEvent> getStorePublishedEvent() {
    return storePublishedEvent;
  }

  public void setStorePublishedEvent(List<StorePublishedEvent> storePublishedEvent) {
    this.storePublishedEvent = storePublishedEvent;
  }

  public EventSearchResult storeUnpublishedEvent(List<StoreUnpublishedEvent> storeUnpublishedEvent) {
    this.storeUnpublishedEvent = storeUnpublishedEvent;
    return this;
  }

  public EventSearchResult addStoreUnpublishedEventItem(StoreUnpublishedEvent storeUnpublishedEventItem) {
    if (this.storeUnpublishedEvent == null) {
      this.storeUnpublishedEvent = new ArrayList<StoreUnpublishedEvent>();
    }
    this.storeUnpublishedEvent.add(storeUnpublishedEventItem);
    return this;
  }

   /**
   * Store unpublished events
   * @return storeUnpublishedEvent
  **/
  @ApiModelProperty(value = "Store unpublished events")
  public List<StoreUnpublishedEvent> getStoreUnpublishedEvent() {
    return storeUnpublishedEvent;
  }

  public void setStoreUnpublishedEvent(List<StoreUnpublishedEvent> storeUnpublishedEvent) {
    this.storeUnpublishedEvent = storeUnpublishedEvent;
  }

  public EventSearchResult storeUpdatedEvent(List<StoreUpdatedEvent> storeUpdatedEvent) {
    this.storeUpdatedEvent = storeUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreUpdatedEventItem(StoreUpdatedEvent storeUpdatedEventItem) {
    if (this.storeUpdatedEvent == null) {
      this.storeUpdatedEvent = new ArrayList<StoreUpdatedEvent>();
    }
    this.storeUpdatedEvent.add(storeUpdatedEventItem);
    return this;
  }

   /**
   * Store updated events
   * @return storeUpdatedEvent
  **/
  @ApiModelProperty(value = "Store updated events")
  public List<StoreUpdatedEvent> getStoreUpdatedEvent() {
    return storeUpdatedEvent;
  }

  public void setStoreUpdatedEvent(List<StoreUpdatedEvent> storeUpdatedEvent) {
    this.storeUpdatedEvent = storeUpdatedEvent;
  }

  public EventSearchResult storePreOrderConfigUpdatedEvent(List<StorePreOrderConfigUpdatedEvent> storePreOrderConfigUpdatedEvent) {
    this.storePreOrderConfigUpdatedEvent = storePreOrderConfigUpdatedEvent;
    return this;
  }

  public EventSearchResult addStorePreOrderConfigUpdatedEventItem(StorePreOrderConfigUpdatedEvent storePreOrderConfigUpdatedEventItem) {
    if (this.storePreOrderConfigUpdatedEvent == null) {
      this.storePreOrderConfigUpdatedEvent = new ArrayList<StorePreOrderConfigUpdatedEvent>();
    }
    this.storePreOrderConfigUpdatedEvent.add(storePreOrderConfigUpdatedEventItem);
    return this;
  }

   /**
   * Store updated events
   * @return storePreOrderConfigUpdatedEvent
  **/
  @ApiModelProperty(value = "Store updated events")
  public List<StorePreOrderConfigUpdatedEvent> getStorePreOrderConfigUpdatedEvent() {
    return storePreOrderConfigUpdatedEvent;
  }

  public void setStorePreOrderConfigUpdatedEvent(List<StorePreOrderConfigUpdatedEvent> storePreOrderConfigUpdatedEvent) {
    this.storePreOrderConfigUpdatedEvent = storePreOrderConfigUpdatedEvent;
  }

  public EventSearchResult storeLogoCreatedEvent(List<StoreLogoCreatedEvent> storeLogoCreatedEvent) {
    this.storeLogoCreatedEvent = storeLogoCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreLogoCreatedEventItem(StoreLogoCreatedEvent storeLogoCreatedEventItem) {
    if (this.storeLogoCreatedEvent == null) {
      this.storeLogoCreatedEvent = new ArrayList<StoreLogoCreatedEvent>();
    }
    this.storeLogoCreatedEvent.add(storeLogoCreatedEventItem);
    return this;
  }

   /**
   * Store logo created events
   * @return storeLogoCreatedEvent
  **/
  @ApiModelProperty(value = "Store logo created events")
  public List<StoreLogoCreatedEvent> getStoreLogoCreatedEvent() {
    return storeLogoCreatedEvent;
  }

  public void setStoreLogoCreatedEvent(List<StoreLogoCreatedEvent> storeLogoCreatedEvent) {
    this.storeLogoCreatedEvent = storeLogoCreatedEvent;
  }

  public EventSearchResult storeLogoUpdatedEvent(List<StoreLogoUpdatedEvent> storeLogoUpdatedEvent) {
    this.storeLogoUpdatedEvent = storeLogoUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreLogoUpdatedEventItem(StoreLogoUpdatedEvent storeLogoUpdatedEventItem) {
    if (this.storeLogoUpdatedEvent == null) {
      this.storeLogoUpdatedEvent = new ArrayList<StoreLogoUpdatedEvent>();
    }
    this.storeLogoUpdatedEvent.add(storeLogoUpdatedEventItem);
    return this;
  }

   /**
   * Store logo updated events
   * @return storeLogoUpdatedEvent
  **/
  @ApiModelProperty(value = "Store logo updated events")
  public List<StoreLogoUpdatedEvent> getStoreLogoUpdatedEvent() {
    return storeLogoUpdatedEvent;
  }

  public void setStoreLogoUpdatedEvent(List<StoreLogoUpdatedEvent> storeLogoUpdatedEvent) {
    this.storeLogoUpdatedEvent = storeLogoUpdatedEvent;
  }

  public EventSearchResult storeLogoDeletedEvent(List<StoreLogoDeletedEvent> storeLogoDeletedEvent) {
    this.storeLogoDeletedEvent = storeLogoDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreLogoDeletedEventItem(StoreLogoDeletedEvent storeLogoDeletedEventItem) {
    if (this.storeLogoDeletedEvent == null) {
      this.storeLogoDeletedEvent = new ArrayList<StoreLogoDeletedEvent>();
    }
    this.storeLogoDeletedEvent.add(storeLogoDeletedEventItem);
    return this;
  }

   /**
   * Store logo deleted events
   * @return storeLogoDeletedEvent
  **/
  @ApiModelProperty(value = "Store logo deleted events")
  public List<StoreLogoDeletedEvent> getStoreLogoDeletedEvent() {
    return storeLogoDeletedEvent;
  }

  public void setStoreLogoDeletedEvent(List<StoreLogoDeletedEvent> storeLogoDeletedEvent) {
    this.storeLogoDeletedEvent = storeLogoDeletedEvent;
  }

  public EventSearchResult menuCreatedEvent(List<MenuCreatedEvent> menuCreatedEvent) {
    this.menuCreatedEvent = menuCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuCreatedEventItem(MenuCreatedEvent menuCreatedEventItem) {
    if (this.menuCreatedEvent == null) {
      this.menuCreatedEvent = new ArrayList<MenuCreatedEvent>();
    }
    this.menuCreatedEvent.add(menuCreatedEventItem);
    return this;
  }

   /**
   * Menu created events
   * @return menuCreatedEvent
  **/
  @ApiModelProperty(value = "Menu created events")
  public List<MenuCreatedEvent> getMenuCreatedEvent() {
    return menuCreatedEvent;
  }

  public void setMenuCreatedEvent(List<MenuCreatedEvent> menuCreatedEvent) {
    this.menuCreatedEvent = menuCreatedEvent;
  }

  public EventSearchResult menuUpdatedEvent(List<MenuUpdatedEvent> menuUpdatedEvent) {
    this.menuUpdatedEvent = menuUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuUpdatedEventItem(MenuUpdatedEvent menuUpdatedEventItem) {
    if (this.menuUpdatedEvent == null) {
      this.menuUpdatedEvent = new ArrayList<MenuUpdatedEvent>();
    }
    this.menuUpdatedEvent.add(menuUpdatedEventItem);
    return this;
  }

   /**
   * Menu updated events
   * @return menuUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu updated events")
  public List<MenuUpdatedEvent> getMenuUpdatedEvent() {
    return menuUpdatedEvent;
  }

  public void setMenuUpdatedEvent(List<MenuUpdatedEvent> menuUpdatedEvent) {
    this.menuUpdatedEvent = menuUpdatedEvent;
  }

  public EventSearchResult menuUploadedEvent(List<MenuUploadedEvent> menuUploadedEvent) {
    this.menuUploadedEvent = menuUploadedEvent;
    return this;
  }

  public EventSearchResult addMenuUploadedEventItem(MenuUploadedEvent menuUploadedEventItem) {
    if (this.menuUploadedEvent == null) {
      this.menuUploadedEvent = new ArrayList<MenuUploadedEvent>();
    }
    this.menuUploadedEvent.add(menuUploadedEventItem);
    return this;
  }

   /**
   * Menu uploaded events
   * @return menuUploadedEvent
  **/
  @ApiModelProperty(value = "Menu uploaded events")
  public List<MenuUploadedEvent> getMenuUploadedEvent() {
    return menuUploadedEvent;
  }

  public void setMenuUploadedEvent(List<MenuUploadedEvent> menuUploadedEvent) {
    this.menuUploadedEvent = menuUploadedEvent;
  }

  public EventSearchResult menuBulkEditEvent(List<MenuBulkEditEvent> menuBulkEditEvent) {
    this.menuBulkEditEvent = menuBulkEditEvent;
    return this;
  }

  public EventSearchResult addMenuBulkEditEventItem(MenuBulkEditEvent menuBulkEditEventItem) {
    if (this.menuBulkEditEvent == null) {
      this.menuBulkEditEvent = new ArrayList<MenuBulkEditEvent>();
    }
    this.menuBulkEditEvent.add(menuBulkEditEventItem);
    return this;
  }

   /**
   * Menu bulk events
   * @return menuBulkEditEvent
  **/
  @ApiModelProperty(value = "Menu bulk events")
  public List<MenuBulkEditEvent> getMenuBulkEditEvent() {
    return menuBulkEditEvent;
  }

  public void setMenuBulkEditEvent(List<MenuBulkEditEvent> menuBulkEditEvent) {
    this.menuBulkEditEvent = menuBulkEditEvent;
  }

  public EventSearchResult menuSectionCreatedEvent(List<MenuSectionCreatedEvent> menuSectionCreatedEvent) {
    this.menuSectionCreatedEvent = menuSectionCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionCreatedEventItem(MenuSectionCreatedEvent menuSectionCreatedEventItem) {
    if (this.menuSectionCreatedEvent == null) {
      this.menuSectionCreatedEvent = new ArrayList<MenuSectionCreatedEvent>();
    }
    this.menuSectionCreatedEvent.add(menuSectionCreatedEventItem);
    return this;
  }

   /**
   * Menu section created events
   * @return menuSectionCreatedEvent
  **/
  @ApiModelProperty(value = "Menu section created events")
  public List<MenuSectionCreatedEvent> getMenuSectionCreatedEvent() {
    return menuSectionCreatedEvent;
  }

  public void setMenuSectionCreatedEvent(List<MenuSectionCreatedEvent> menuSectionCreatedEvent) {
    this.menuSectionCreatedEvent = menuSectionCreatedEvent;
  }

  public EventSearchResult menuSectionUpdatedEvent(List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent) {
    this.menuSectionUpdatedEvent = menuSectionUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionUpdatedEventItem(MenuSectionUpdatedEvent menuSectionUpdatedEventItem) {
    if (this.menuSectionUpdatedEvent == null) {
      this.menuSectionUpdatedEvent = new ArrayList<MenuSectionUpdatedEvent>();
    }
    this.menuSectionUpdatedEvent.add(menuSectionUpdatedEventItem);
    return this;
  }

   /**
   * Menu section updated events
   * @return menuSectionUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu section updated events")
  public List<MenuSectionUpdatedEvent> getMenuSectionUpdatedEvent() {
    return menuSectionUpdatedEvent;
  }

  public void setMenuSectionUpdatedEvent(List<MenuSectionUpdatedEvent> menuSectionUpdatedEvent) {
    this.menuSectionUpdatedEvent = menuSectionUpdatedEvent;
  }

  public EventSearchResult menuSectionDeletedEvent(List<MenuSectionDeletedEvent> menuSectionDeletedEvent) {
    this.menuSectionDeletedEvent = menuSectionDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionDeletedEventItem(MenuSectionDeletedEvent menuSectionDeletedEventItem) {
    if (this.menuSectionDeletedEvent == null) {
      this.menuSectionDeletedEvent = new ArrayList<MenuSectionDeletedEvent>();
    }
    this.menuSectionDeletedEvent.add(menuSectionDeletedEventItem);
    return this;
  }

   /**
   * Menu section deleted events
   * @return menuSectionDeletedEvent
  **/
  @ApiModelProperty(value = "Menu section deleted events")
  public List<MenuSectionDeletedEvent> getMenuSectionDeletedEvent() {
    return menuSectionDeletedEvent;
  }

  public void setMenuSectionDeletedEvent(List<MenuSectionDeletedEvent> menuSectionDeletedEvent) {
    this.menuSectionDeletedEvent = menuSectionDeletedEvent;
  }

  public EventSearchResult menuSectionItemCreatedEvent(List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent) {
    this.menuSectionItemCreatedEvent = menuSectionItemCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemCreatedEventItem(MenuSectionItemCreatedEvent menuSectionItemCreatedEventItem) {
    if (this.menuSectionItemCreatedEvent == null) {
      this.menuSectionItemCreatedEvent = new ArrayList<MenuSectionItemCreatedEvent>();
    }
    this.menuSectionItemCreatedEvent.add(menuSectionItemCreatedEventItem);
    return this;
  }

   /**
   * Menu section item created events
   * @return menuSectionItemCreatedEvent
  **/
  @ApiModelProperty(value = "Menu section item created events")
  public List<MenuSectionItemCreatedEvent> getMenuSectionItemCreatedEvent() {
    return menuSectionItemCreatedEvent;
  }

  public void setMenuSectionItemCreatedEvent(List<MenuSectionItemCreatedEvent> menuSectionItemCreatedEvent) {
    this.menuSectionItemCreatedEvent = menuSectionItemCreatedEvent;
  }

  public EventSearchResult menuSectionItemUpdatedEvent(List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent) {
    this.menuSectionItemUpdatedEvent = menuSectionItemUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemUpdatedEventItem(MenuSectionItemUpdatedEvent menuSectionItemUpdatedEventItem) {
    if (this.menuSectionItemUpdatedEvent == null) {
      this.menuSectionItemUpdatedEvent = new ArrayList<MenuSectionItemUpdatedEvent>();
    }
    this.menuSectionItemUpdatedEvent.add(menuSectionItemUpdatedEventItem);
    return this;
  }

   /**
   * Menu section item updated events
   * @return menuSectionItemUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu section item updated events")
  public List<MenuSectionItemUpdatedEvent> getMenuSectionItemUpdatedEvent() {
    return menuSectionItemUpdatedEvent;
  }

  public void setMenuSectionItemUpdatedEvent(List<MenuSectionItemUpdatedEvent> menuSectionItemUpdatedEvent) {
    this.menuSectionItemUpdatedEvent = menuSectionItemUpdatedEvent;
  }

  public EventSearchResult menuSectionItemDeletedEvent(List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent) {
    this.menuSectionItemDeletedEvent = menuSectionItemDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuSectionItemDeletedEventItem(MenuSectionItemDeletedEvent menuSectionItemDeletedEventItem) {
    if (this.menuSectionItemDeletedEvent == null) {
      this.menuSectionItemDeletedEvent = new ArrayList<MenuSectionItemDeletedEvent>();
    }
    this.menuSectionItemDeletedEvent.add(menuSectionItemDeletedEventItem);
    return this;
  }

   /**
   * Menu section item deleted events
   * @return menuSectionItemDeletedEvent
  **/
  @ApiModelProperty(value = "Menu section item deleted events")
  public List<MenuSectionItemDeletedEvent> getMenuSectionItemDeletedEvent() {
    return menuSectionItemDeletedEvent;
  }

  public void setMenuSectionItemDeletedEvent(List<MenuSectionItemDeletedEvent> menuSectionItemDeletedEvent) {
    this.menuSectionItemDeletedEvent = menuSectionItemDeletedEvent;
  }

  public EventSearchResult menuItemOptionSetCreatedEvent(List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent) {
    this.menuItemOptionSetCreatedEvent = menuItemOptionSetCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetCreatedEventItem(MenuItemOptionSetCreatedEvent menuItemOptionSetCreatedEventItem) {
    if (this.menuItemOptionSetCreatedEvent == null) {
      this.menuItemOptionSetCreatedEvent = new ArrayList<MenuItemOptionSetCreatedEvent>();
    }
    this.menuItemOptionSetCreatedEvent.add(menuItemOptionSetCreatedEventItem);
    return this;
  }

   /**
   * Menu item option set created events
   * @return menuItemOptionSetCreatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set created events")
  public List<MenuItemOptionSetCreatedEvent> getMenuItemOptionSetCreatedEvent() {
    return menuItemOptionSetCreatedEvent;
  }

  public void setMenuItemOptionSetCreatedEvent(List<MenuItemOptionSetCreatedEvent> menuItemOptionSetCreatedEvent) {
    this.menuItemOptionSetCreatedEvent = menuItemOptionSetCreatedEvent;
  }

  public EventSearchResult menuItemOptionSetUpdatedEvent(List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent) {
    this.menuItemOptionSetUpdatedEvent = menuItemOptionSetUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetUpdatedEventItem(MenuItemOptionSetUpdatedEvent menuItemOptionSetUpdatedEventItem) {
    if (this.menuItemOptionSetUpdatedEvent == null) {
      this.menuItemOptionSetUpdatedEvent = new ArrayList<MenuItemOptionSetUpdatedEvent>();
    }
    this.menuItemOptionSetUpdatedEvent.add(menuItemOptionSetUpdatedEventItem);
    return this;
  }

   /**
   * Menu item option set  updated events
   * @return menuItemOptionSetUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set  updated events")
  public List<MenuItemOptionSetUpdatedEvent> getMenuItemOptionSetUpdatedEvent() {
    return menuItemOptionSetUpdatedEvent;
  }

  public void setMenuItemOptionSetUpdatedEvent(List<MenuItemOptionSetUpdatedEvent> menuItemOptionSetUpdatedEvent) {
    this.menuItemOptionSetUpdatedEvent = menuItemOptionSetUpdatedEvent;
  }

  public EventSearchResult menuItemOptionSetDeletedEvent(List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent) {
    this.menuItemOptionSetDeletedEvent = menuItemOptionSetDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetDeletedEventItem(MenuItemOptionSetDeletedEvent menuItemOptionSetDeletedEventItem) {
    if (this.menuItemOptionSetDeletedEvent == null) {
      this.menuItemOptionSetDeletedEvent = new ArrayList<MenuItemOptionSetDeletedEvent>();
    }
    this.menuItemOptionSetDeletedEvent.add(menuItemOptionSetDeletedEventItem);
    return this;
  }

   /**
   * Menu item option set deleted events
   * @return menuItemOptionSetDeletedEvent
  **/
  @ApiModelProperty(value = "Menu item option set deleted events")
  public List<MenuItemOptionSetDeletedEvent> getMenuItemOptionSetDeletedEvent() {
    return menuItemOptionSetDeletedEvent;
  }

  public void setMenuItemOptionSetDeletedEvent(List<MenuItemOptionSetDeletedEvent> menuItemOptionSetDeletedEvent) {
    this.menuItemOptionSetDeletedEvent = menuItemOptionSetDeletedEvent;
  }

  public EventSearchResult menuItemOptionSetItemCreatedEvent(List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent) {
    this.menuItemOptionSetItemCreatedEvent = menuItemOptionSetItemCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemCreatedEventItem(MenuItemOptionSetItemCreatedEvent menuItemOptionSetItemCreatedEventItem) {
    if (this.menuItemOptionSetItemCreatedEvent == null) {
      this.menuItemOptionSetItemCreatedEvent = new ArrayList<MenuItemOptionSetItemCreatedEvent>();
    }
    this.menuItemOptionSetItemCreatedEvent.add(menuItemOptionSetItemCreatedEventItem);
    return this;
  }

   /**
   * Menu item option set item created events
   * @return menuItemOptionSetItemCreatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item created events")
  public List<MenuItemOptionSetItemCreatedEvent> getMenuItemOptionSetItemCreatedEvent() {
    return menuItemOptionSetItemCreatedEvent;
  }

  public void setMenuItemOptionSetItemCreatedEvent(List<MenuItemOptionSetItemCreatedEvent> menuItemOptionSetItemCreatedEvent) {
    this.menuItemOptionSetItemCreatedEvent = menuItemOptionSetItemCreatedEvent;
  }

  public EventSearchResult menuItemOptionSetItemUpdatedEvent(List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent) {
    this.menuItemOptionSetItemUpdatedEvent = menuItemOptionSetItemUpdatedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemUpdatedEventItem(MenuItemOptionSetItemUpdatedEvent menuItemOptionSetItemUpdatedEventItem) {
    if (this.menuItemOptionSetItemUpdatedEvent == null) {
      this.menuItemOptionSetItemUpdatedEvent = new ArrayList<MenuItemOptionSetItemUpdatedEvent>();
    }
    this.menuItemOptionSetItemUpdatedEvent.add(menuItemOptionSetItemUpdatedEventItem);
    return this;
  }

   /**
   * Menu item option set item updated events
   * @return menuItemOptionSetItemUpdatedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item updated events")
  public List<MenuItemOptionSetItemUpdatedEvent> getMenuItemOptionSetItemUpdatedEvent() {
    return menuItemOptionSetItemUpdatedEvent;
  }

  public void setMenuItemOptionSetItemUpdatedEvent(List<MenuItemOptionSetItemUpdatedEvent> menuItemOptionSetItemUpdatedEvent) {
    this.menuItemOptionSetItemUpdatedEvent = menuItemOptionSetItemUpdatedEvent;
  }

  public EventSearchResult menuItemOptionSetItemDeletedEvent(List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent) {
    this.menuItemOptionSetItemDeletedEvent = menuItemOptionSetItemDeletedEvent;
    return this;
  }

  public EventSearchResult addMenuItemOptionSetItemDeletedEventItem(MenuItemOptionSetItemDeletedEvent menuItemOptionSetItemDeletedEventItem) {
    if (this.menuItemOptionSetItemDeletedEvent == null) {
      this.menuItemOptionSetItemDeletedEvent = new ArrayList<MenuItemOptionSetItemDeletedEvent>();
    }
    this.menuItemOptionSetItemDeletedEvent.add(menuItemOptionSetItemDeletedEventItem);
    return this;
  }

   /**
   * Menu item option set item deleted events
   * @return menuItemOptionSetItemDeletedEvent
  **/
  @ApiModelProperty(value = "Menu item option set item deleted events")
  public List<MenuItemOptionSetItemDeletedEvent> getMenuItemOptionSetItemDeletedEvent() {
    return menuItemOptionSetItemDeletedEvent;
  }

  public void setMenuItemOptionSetItemDeletedEvent(List<MenuItemOptionSetItemDeletedEvent> menuItemOptionSetItemDeletedEvent) {
    this.menuItemOptionSetItemDeletedEvent = menuItemOptionSetItemDeletedEvent;
  }

  public EventSearchResult menuCheckpointCreatedEvent(List<MenuCheckpointCreatedEvent> menuCheckpointCreatedEvent) {
    this.menuCheckpointCreatedEvent = menuCheckpointCreatedEvent;
    return this;
  }

  public EventSearchResult addMenuCheckpointCreatedEventItem(MenuCheckpointCreatedEvent menuCheckpointCreatedEventItem) {
    if (this.menuCheckpointCreatedEvent == null) {
      this.menuCheckpointCreatedEvent = new ArrayList<MenuCheckpointCreatedEvent>();
    }
    this.menuCheckpointCreatedEvent.add(menuCheckpointCreatedEventItem);
    return this;
  }

   /**
   * Menu checkpoint created event
   * @return menuCheckpointCreatedEvent
  **/
  @ApiModelProperty(value = "Menu checkpoint created event")
  public List<MenuCheckpointCreatedEvent> getMenuCheckpointCreatedEvent() {
    return menuCheckpointCreatedEvent;
  }

  public void setMenuCheckpointCreatedEvent(List<MenuCheckpointCreatedEvent> menuCheckpointCreatedEvent) {
    this.menuCheckpointCreatedEvent = menuCheckpointCreatedEvent;
  }

  public EventSearchResult storeGroupCreatedEvent(List<StoreGroupCreatedEvent> storeGroupCreatedEvent) {
    this.storeGroupCreatedEvent = storeGroupCreatedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupCreatedEventItem(StoreGroupCreatedEvent storeGroupCreatedEventItem) {
    if (this.storeGroupCreatedEvent == null) {
      this.storeGroupCreatedEvent = new ArrayList<StoreGroupCreatedEvent>();
    }
    this.storeGroupCreatedEvent.add(storeGroupCreatedEventItem);
    return this;
  }

   /**
   * Store group created events
   * @return storeGroupCreatedEvent
  **/
  @ApiModelProperty(value = "Store group created events")
  public List<StoreGroupCreatedEvent> getStoreGroupCreatedEvent() {
    return storeGroupCreatedEvent;
  }

  public void setStoreGroupCreatedEvent(List<StoreGroupCreatedEvent> storeGroupCreatedEvent) {
    this.storeGroupCreatedEvent = storeGroupCreatedEvent;
  }

  public EventSearchResult storeGroupUpdatedEvent(List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent) {
    this.storeGroupUpdatedEvent = storeGroupUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupUpdatedEventItem(StoreGroupUpdatedEvent storeGroupUpdatedEventItem) {
    if (this.storeGroupUpdatedEvent == null) {
      this.storeGroupUpdatedEvent = new ArrayList<StoreGroupUpdatedEvent>();
    }
    this.storeGroupUpdatedEvent.add(storeGroupUpdatedEventItem);
    return this;
  }

   /**
   * Store group updated events
   * @return storeGroupUpdatedEvent
  **/
  @ApiModelProperty(value = "Store group updated events")
  public List<StoreGroupUpdatedEvent> getStoreGroupUpdatedEvent() {
    return storeGroupUpdatedEvent;
  }

  public void setStoreGroupUpdatedEvent(List<StoreGroupUpdatedEvent> storeGroupUpdatedEvent) {
    this.storeGroupUpdatedEvent = storeGroupUpdatedEvent;
  }

  public EventSearchResult storeGroupDeletedEvent(List<StoreGroupDeletedEvent> storeGroupDeletedEvent) {
    this.storeGroupDeletedEvent = storeGroupDeletedEvent;
    return this;
  }

  public EventSearchResult addStoreGroupDeletedEventItem(StoreGroupDeletedEvent storeGroupDeletedEventItem) {
    if (this.storeGroupDeletedEvent == null) {
      this.storeGroupDeletedEvent = new ArrayList<StoreGroupDeletedEvent>();
    }
    this.storeGroupDeletedEvent.add(storeGroupDeletedEventItem);
    return this;
  }

   /**
   * Store group deleted events
   * @return storeGroupDeletedEvent
  **/
  @ApiModelProperty(value = "Store group deleted events")
  public List<StoreGroupDeletedEvent> getStoreGroupDeletedEvent() {
    return storeGroupDeletedEvent;
  }

  public void setStoreGroupDeletedEvent(List<StoreGroupDeletedEvent> storeGroupDeletedEvent) {
    this.storeGroupDeletedEvent = storeGroupDeletedEvent;
  }

  public EventSearchResult customerCreatedEvent(List<CustomerCreatedEvent> customerCreatedEvent) {
    this.customerCreatedEvent = customerCreatedEvent;
    return this;
  }

  public EventSearchResult addCustomerCreatedEventItem(CustomerCreatedEvent customerCreatedEventItem) {
    if (this.customerCreatedEvent == null) {
      this.customerCreatedEvent = new ArrayList<CustomerCreatedEvent>();
    }
    this.customerCreatedEvent.add(customerCreatedEventItem);
    return this;
  }

   /**
   * Customer created events
   * @return customerCreatedEvent
  **/
  @ApiModelProperty(value = "Customer created events")
  public List<CustomerCreatedEvent> getCustomerCreatedEvent() {
    return customerCreatedEvent;
  }

  public void setCustomerCreatedEvent(List<CustomerCreatedEvent> customerCreatedEvent) {
    this.customerCreatedEvent = customerCreatedEvent;
  }

  public EventSearchResult customerUpdatedEvent(List<CustomerUpdatedEvent> customerUpdatedEvent) {
    this.customerUpdatedEvent = customerUpdatedEvent;
    return this;
  }

  public EventSearchResult addCustomerUpdatedEventItem(CustomerUpdatedEvent customerUpdatedEventItem) {
    if (this.customerUpdatedEvent == null) {
      this.customerUpdatedEvent = new ArrayList<CustomerUpdatedEvent>();
    }
    this.customerUpdatedEvent.add(customerUpdatedEventItem);
    return this;
  }

   /**
   * Customer updated events
   * @return customerUpdatedEvent
  **/
  @ApiModelProperty(value = "Customer updated events")
  public List<CustomerUpdatedEvent> getCustomerUpdatedEvent() {
    return customerUpdatedEvent;
  }

  public void setCustomerUpdatedEvent(List<CustomerUpdatedEvent> customerUpdatedEvent) {
    this.customerUpdatedEvent = customerUpdatedEvent;
  }

  public EventSearchResult customerConsentUpdatedEvent(List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent) {
    this.customerConsentUpdatedEvent = customerConsentUpdatedEvent;
    return this;
  }

  public EventSearchResult addCustomerConsentUpdatedEventItem(CustomerConsentUpdatedEvent customerConsentUpdatedEventItem) {
    if (this.customerConsentUpdatedEvent == null) {
      this.customerConsentUpdatedEvent = new ArrayList<CustomerConsentUpdatedEvent>();
    }
    this.customerConsentUpdatedEvent.add(customerConsentUpdatedEventItem);
    return this;
  }

   /**
   * Customer consent updated events
   * @return customerConsentUpdatedEvent
  **/
  @ApiModelProperty(value = "Customer consent updated events")
  public List<CustomerConsentUpdatedEvent> getCustomerConsentUpdatedEvent() {
    return customerConsentUpdatedEvent;
  }

  public void setCustomerConsentUpdatedEvent(List<CustomerConsentUpdatedEvent> customerConsentUpdatedEvent) {
    this.customerConsentUpdatedEvent = customerConsentUpdatedEvent;
  }

  public EventSearchResult webhookSubscriptionCreatedEvent(List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent) {
    this.webhookSubscriptionCreatedEvent = webhookSubscriptionCreatedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionCreatedEventItem(WebhookSubscriptionCreatedEvent webhookSubscriptionCreatedEventItem) {
    if (this.webhookSubscriptionCreatedEvent == null) {
      this.webhookSubscriptionCreatedEvent = new ArrayList<WebhookSubscriptionCreatedEvent>();
    }
    this.webhookSubscriptionCreatedEvent.add(webhookSubscriptionCreatedEventItem);
    return this;
  }

   /**
   * Webhook subscription created events
   * @return webhookSubscriptionCreatedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription created events")
  public List<WebhookSubscriptionCreatedEvent> getWebhookSubscriptionCreatedEvent() {
    return webhookSubscriptionCreatedEvent;
  }

  public void setWebhookSubscriptionCreatedEvent(List<WebhookSubscriptionCreatedEvent> webhookSubscriptionCreatedEvent) {
    this.webhookSubscriptionCreatedEvent = webhookSubscriptionCreatedEvent;
  }

  public EventSearchResult webhookSubscriptionUpdatedEvent(List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent) {
    this.webhookSubscriptionUpdatedEvent = webhookSubscriptionUpdatedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionUpdatedEventItem(WebhookSubscriptionUpdatedEvent webhookSubscriptionUpdatedEventItem) {
    if (this.webhookSubscriptionUpdatedEvent == null) {
      this.webhookSubscriptionUpdatedEvent = new ArrayList<WebhookSubscriptionUpdatedEvent>();
    }
    this.webhookSubscriptionUpdatedEvent.add(webhookSubscriptionUpdatedEventItem);
    return this;
  }

   /**
   * Webhook subscription updated events
   * @return webhookSubscriptionUpdatedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription updated events")
  public List<WebhookSubscriptionUpdatedEvent> getWebhookSubscriptionUpdatedEvent() {
    return webhookSubscriptionUpdatedEvent;
  }

  public void setWebhookSubscriptionUpdatedEvent(List<WebhookSubscriptionUpdatedEvent> webhookSubscriptionUpdatedEvent) {
    this.webhookSubscriptionUpdatedEvent = webhookSubscriptionUpdatedEvent;
  }

  public EventSearchResult webhookSubscriptionDeletedEvent(List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent) {
    this.webhookSubscriptionDeletedEvent = webhookSubscriptionDeletedEvent;
    return this;
  }

  public EventSearchResult addWebhookSubscriptionDeletedEventItem(WebhookSubscriptionDeletedEvent webhookSubscriptionDeletedEventItem) {
    if (this.webhookSubscriptionDeletedEvent == null) {
      this.webhookSubscriptionDeletedEvent = new ArrayList<WebhookSubscriptionDeletedEvent>();
    }
    this.webhookSubscriptionDeletedEvent.add(webhookSubscriptionDeletedEventItem);
    return this;
  }

   /**
   * Webhook subscription deleted events
   * @return webhookSubscriptionDeletedEvent
  **/
  @ApiModelProperty(value = "Webhook subscription deleted events")
  public List<WebhookSubscriptionDeletedEvent> getWebhookSubscriptionDeletedEvent() {
    return webhookSubscriptionDeletedEvent;
  }

  public void setWebhookSubscriptionDeletedEvent(List<WebhookSubscriptionDeletedEvent> webhookSubscriptionDeletedEvent) {
    this.webhookSubscriptionDeletedEvent = webhookSubscriptionDeletedEvent;
  }

  public EventSearchResult printerTurnedOnEvent(List<PrinterTurnedOnEvent> printerTurnedOnEvent) {
    this.printerTurnedOnEvent = printerTurnedOnEvent;
    return this;
  }

  public EventSearchResult addPrinterTurnedOnEventItem(PrinterTurnedOnEvent printerTurnedOnEventItem) {
    if (this.printerTurnedOnEvent == null) {
      this.printerTurnedOnEvent = new ArrayList<PrinterTurnedOnEvent>();
    }
    this.printerTurnedOnEvent.add(printerTurnedOnEventItem);
    return this;
  }

   /**
   * Printer turned ON event
   * @return printerTurnedOnEvent
  **/
  @ApiModelProperty(value = "Printer turned ON event")
  public List<PrinterTurnedOnEvent> getPrinterTurnedOnEvent() {
    return printerTurnedOnEvent;
  }

  public void setPrinterTurnedOnEvent(List<PrinterTurnedOnEvent> printerTurnedOnEvent) {
    this.printerTurnedOnEvent = printerTurnedOnEvent;
  }

  public EventSearchResult printerTurnedOffEvent(List<PrinterTurnedOffEvent> printerTurnedOffEvent) {
    this.printerTurnedOffEvent = printerTurnedOffEvent;
    return this;
  }

  public EventSearchResult addPrinterTurnedOffEventItem(PrinterTurnedOffEvent printerTurnedOffEventItem) {
    if (this.printerTurnedOffEvent == null) {
      this.printerTurnedOffEvent = new ArrayList<PrinterTurnedOffEvent>();
    }
    this.printerTurnedOffEvent.add(printerTurnedOffEventItem);
    return this;
  }

   /**
   * Printer turned OFF event
   * @return printerTurnedOffEvent
  **/
  @ApiModelProperty(value = "Printer turned OFF event")
  public List<PrinterTurnedOffEvent> getPrinterTurnedOffEvent() {
    return printerTurnedOffEvent;
  }

  public void setPrinterTurnedOffEvent(List<PrinterTurnedOffEvent> printerTurnedOffEvent) {
    this.printerTurnedOffEvent = printerTurnedOffEvent;
  }

  public EventSearchResult printerAssignedToStoreEvent(List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent) {
    this.printerAssignedToStoreEvent = printerAssignedToStoreEvent;
    return this;
  }

  public EventSearchResult addPrinterAssignedToStoreEventItem(PrinterAssignedToStoreEvent printerAssignedToStoreEventItem) {
    if (this.printerAssignedToStoreEvent == null) {
      this.printerAssignedToStoreEvent = new ArrayList<PrinterAssignedToStoreEvent>();
    }
    this.printerAssignedToStoreEvent.add(printerAssignedToStoreEventItem);
    return this;
  }

   /**
   * Printer assigned to store event
   * @return printerAssignedToStoreEvent
  **/
  @ApiModelProperty(value = "Printer assigned to store event")
  public List<PrinterAssignedToStoreEvent> getPrinterAssignedToStoreEvent() {
    return printerAssignedToStoreEvent;
  }

  public void setPrinterAssignedToStoreEvent(List<PrinterAssignedToStoreEvent> printerAssignedToStoreEvent) {
    this.printerAssignedToStoreEvent = printerAssignedToStoreEvent;
  }

  public EventSearchResult printerUnassignedFromStoreEvent(List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent) {
    this.printerUnassignedFromStoreEvent = printerUnassignedFromStoreEvent;
    return this;
  }

  public EventSearchResult addPrinterUnassignedFromStoreEventItem(PrinterUnassignedFromStoreEvent printerUnassignedFromStoreEventItem) {
    if (this.printerUnassignedFromStoreEvent == null) {
      this.printerUnassignedFromStoreEvent = new ArrayList<PrinterUnassignedFromStoreEvent>();
    }
    this.printerUnassignedFromStoreEvent.add(printerUnassignedFromStoreEventItem);
    return this;
  }

   /**
   * Printer unassigned from store event
   * @return printerUnassignedFromStoreEvent
  **/
  @ApiModelProperty(value = "Printer unassigned from store event")
  public List<PrinterUnassignedFromStoreEvent> getPrinterUnassignedFromStoreEvent() {
    return printerUnassignedFromStoreEvent;
  }

  public void setPrinterUnassignedFromStoreEvent(List<PrinterUnassignedFromStoreEvent> printerUnassignedFromStoreEvent) {
    this.printerUnassignedFromStoreEvent = printerUnassignedFromStoreEvent;
  }

  public EventSearchResult phoneCallStartedEvent(List<PhoneCallStartedEvent> phoneCallStartedEvent) {
    this.phoneCallStartedEvent = phoneCallStartedEvent;
    return this;
  }

  public EventSearchResult addPhoneCallStartedEventItem(PhoneCallStartedEvent phoneCallStartedEventItem) {
    if (this.phoneCallStartedEvent == null) {
      this.phoneCallStartedEvent = new ArrayList<PhoneCallStartedEvent>();
    }
    this.phoneCallStartedEvent.add(phoneCallStartedEventItem);
    return this;
  }

   /**
   * Phone call started event
   * @return phoneCallStartedEvent
  **/
  @ApiModelProperty(value = "Phone call started event")
  public List<PhoneCallStartedEvent> getPhoneCallStartedEvent() {
    return phoneCallStartedEvent;
  }

  public void setPhoneCallStartedEvent(List<PhoneCallStartedEvent> phoneCallStartedEvent) {
    this.phoneCallStartedEvent = phoneCallStartedEvent;
  }

  public EventSearchResult phoneCallEndedEvent(List<PhoneCallEndedEvent> phoneCallEndedEvent) {
    this.phoneCallEndedEvent = phoneCallEndedEvent;
    return this;
  }

  public EventSearchResult addPhoneCallEndedEventItem(PhoneCallEndedEvent phoneCallEndedEventItem) {
    if (this.phoneCallEndedEvent == null) {
      this.phoneCallEndedEvent = new ArrayList<PhoneCallEndedEvent>();
    }
    this.phoneCallEndedEvent.add(phoneCallEndedEventItem);
    return this;
  }

   /**
   * Phone call ended event
   * @return phoneCallEndedEvent
  **/
  @ApiModelProperty(value = "Phone call ended event")
  public List<PhoneCallEndedEvent> getPhoneCallEndedEvent() {
    return phoneCallEndedEvent;
  }

  public void setPhoneCallEndedEvent(List<PhoneCallEndedEvent> phoneCallEndedEvent) {
    this.phoneCallEndedEvent = phoneCallEndedEvent;
  }

  public EventSearchResult loyaltyCampaignCreatedEvent(List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent) {
    this.loyaltyCampaignCreatedEvent = loyaltyCampaignCreatedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignCreatedEventItem(LoyaltyCampaignCreatedEvent loyaltyCampaignCreatedEventItem) {
    if (this.loyaltyCampaignCreatedEvent == null) {
      this.loyaltyCampaignCreatedEvent = new ArrayList<LoyaltyCampaignCreatedEvent>();
    }
    this.loyaltyCampaignCreatedEvent.add(loyaltyCampaignCreatedEventItem);
    return this;
  }

   /**
   * Loyalty campaign created event
   * @return loyaltyCampaignCreatedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign created event")
  public List<LoyaltyCampaignCreatedEvent> getLoyaltyCampaignCreatedEvent() {
    return loyaltyCampaignCreatedEvent;
  }

  public void setLoyaltyCampaignCreatedEvent(List<LoyaltyCampaignCreatedEvent> loyaltyCampaignCreatedEvent) {
    this.loyaltyCampaignCreatedEvent = loyaltyCampaignCreatedEvent;
  }

  public EventSearchResult loyaltyCampaignDeletedEvent(List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent) {
    this.loyaltyCampaignDeletedEvent = loyaltyCampaignDeletedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignDeletedEventItem(LoyaltyCampaignDeletedEvent loyaltyCampaignDeletedEventItem) {
    if (this.loyaltyCampaignDeletedEvent == null) {
      this.loyaltyCampaignDeletedEvent = new ArrayList<LoyaltyCampaignDeletedEvent>();
    }
    this.loyaltyCampaignDeletedEvent.add(loyaltyCampaignDeletedEventItem);
    return this;
  }

   /**
   * Loyalty campaign deleted event
   * @return loyaltyCampaignDeletedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign deleted event")
  public List<LoyaltyCampaignDeletedEvent> getLoyaltyCampaignDeletedEvent() {
    return loyaltyCampaignDeletedEvent;
  }

  public void setLoyaltyCampaignDeletedEvent(List<LoyaltyCampaignDeletedEvent> loyaltyCampaignDeletedEvent) {
    this.loyaltyCampaignDeletedEvent = loyaltyCampaignDeletedEvent;
  }

  public EventSearchResult loyaltyCampaignUpdatedEvent(List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent) {
    this.loyaltyCampaignUpdatedEvent = loyaltyCampaignUpdatedEvent;
    return this;
  }

  public EventSearchResult addLoyaltyCampaignUpdatedEventItem(LoyaltyCampaignUpdatedEvent loyaltyCampaignUpdatedEventItem) {
    if (this.loyaltyCampaignUpdatedEvent == null) {
      this.loyaltyCampaignUpdatedEvent = new ArrayList<LoyaltyCampaignUpdatedEvent>();
    }
    this.loyaltyCampaignUpdatedEvent.add(loyaltyCampaignUpdatedEventItem);
    return this;
  }

   /**
   * Loyalty campaign updated event
   * @return loyaltyCampaignUpdatedEvent
  **/
  @ApiModelProperty(value = "Loyalty campaign updated event")
  public List<LoyaltyCampaignUpdatedEvent> getLoyaltyCampaignUpdatedEvent() {
    return loyaltyCampaignUpdatedEvent;
  }

  public void setLoyaltyCampaignUpdatedEvent(List<LoyaltyCampaignUpdatedEvent> loyaltyCampaignUpdatedEvent) {
    this.loyaltyCampaignUpdatedEvent = loyaltyCampaignUpdatedEvent;
  }

  public EventSearchResult retentionCampaignCreatedEvent(List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent) {
    this.retentionCampaignCreatedEvent = retentionCampaignCreatedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignCreatedEventItem(RetentionCampaignCreatedEvent retentionCampaignCreatedEventItem) {
    if (this.retentionCampaignCreatedEvent == null) {
      this.retentionCampaignCreatedEvent = new ArrayList<RetentionCampaignCreatedEvent>();
    }
    this.retentionCampaignCreatedEvent.add(retentionCampaignCreatedEventItem);
    return this;
  }

   /**
   * Retention campaign created event
   * @return retentionCampaignCreatedEvent
  **/
  @ApiModelProperty(value = "Retention campaign created event")
  public List<RetentionCampaignCreatedEvent> getRetentionCampaignCreatedEvent() {
    return retentionCampaignCreatedEvent;
  }

  public void setRetentionCampaignCreatedEvent(List<RetentionCampaignCreatedEvent> retentionCampaignCreatedEvent) {
    this.retentionCampaignCreatedEvent = retentionCampaignCreatedEvent;
  }

  public EventSearchResult retentionCampaignDeletedEvent(List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent) {
    this.retentionCampaignDeletedEvent = retentionCampaignDeletedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignDeletedEventItem(RetentionCampaignDeletedEvent retentionCampaignDeletedEventItem) {
    if (this.retentionCampaignDeletedEvent == null) {
      this.retentionCampaignDeletedEvent = new ArrayList<RetentionCampaignDeletedEvent>();
    }
    this.retentionCampaignDeletedEvent.add(retentionCampaignDeletedEventItem);
    return this;
  }

   /**
   * Retention campaign deleted event
   * @return retentionCampaignDeletedEvent
  **/
  @ApiModelProperty(value = "Retention campaign deleted event")
  public List<RetentionCampaignDeletedEvent> getRetentionCampaignDeletedEvent() {
    return retentionCampaignDeletedEvent;
  }

  public void setRetentionCampaignDeletedEvent(List<RetentionCampaignDeletedEvent> retentionCampaignDeletedEvent) {
    this.retentionCampaignDeletedEvent = retentionCampaignDeletedEvent;
  }

  public EventSearchResult retentionCampaignUpdatedEvent(List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent) {
    this.retentionCampaignUpdatedEvent = retentionCampaignUpdatedEvent;
    return this;
  }

  public EventSearchResult addRetentionCampaignUpdatedEventItem(RetentionCampaignUpdatedEvent retentionCampaignUpdatedEventItem) {
    if (this.retentionCampaignUpdatedEvent == null) {
      this.retentionCampaignUpdatedEvent = new ArrayList<RetentionCampaignUpdatedEvent>();
    }
    this.retentionCampaignUpdatedEvent.add(retentionCampaignUpdatedEventItem);
    return this;
  }

   /**
   * Retention campaign updated event
   * @return retentionCampaignUpdatedEvent
  **/
  @ApiModelProperty(value = "Retention campaign updated event")
  public List<RetentionCampaignUpdatedEvent> getRetentionCampaignUpdatedEvent() {
    return retentionCampaignUpdatedEvent;
  }

  public void setRetentionCampaignUpdatedEvent(List<RetentionCampaignUpdatedEvent> retentionCampaignUpdatedEvent) {
    this.retentionCampaignUpdatedEvent = retentionCampaignUpdatedEvent;
  }

  public EventSearchResult smsReceivedEvent(List<SmsReceivedEvent> smsReceivedEvent) {
    this.smsReceivedEvent = smsReceivedEvent;
    return this;
  }

  public EventSearchResult addSmsReceivedEventItem(SmsReceivedEvent smsReceivedEventItem) {
    if (this.smsReceivedEvent == null) {
      this.smsReceivedEvent = new ArrayList<SmsReceivedEvent>();
    }
    this.smsReceivedEvent.add(smsReceivedEventItem);
    return this;
  }

   /**
   * Sms received event
   * @return smsReceivedEvent
  **/
  @ApiModelProperty(value = "Sms received event")
  public List<SmsReceivedEvent> getSmsReceivedEvent() {
    return smsReceivedEvent;
  }

  public void setSmsReceivedEvent(List<SmsReceivedEvent> smsReceivedEvent) {
    this.smsReceivedEvent = smsReceivedEvent;
  }

  public EventSearchResult userLoginEvent(List<UserLoginEvent> userLoginEvent) {
    this.userLoginEvent = userLoginEvent;
    return this;
  }

  public EventSearchResult addUserLoginEventItem(UserLoginEvent userLoginEventItem) {
    if (this.userLoginEvent == null) {
      this.userLoginEvent = new ArrayList<UserLoginEvent>();
    }
    this.userLoginEvent.add(userLoginEventItem);
    return this;
  }

   /**
   * User login event
   * @return userLoginEvent
  **/
  @ApiModelProperty(value = "User login event")
  public List<UserLoginEvent> getUserLoginEvent() {
    return userLoginEvent;
  }

  public void setUserLoginEvent(List<UserLoginEvent> userLoginEvent) {
    this.userLoginEvent = userLoginEvent;
  }

  public EventSearchResult userCreatedEvent(List<UserCreatedEvent> userCreatedEvent) {
    this.userCreatedEvent = userCreatedEvent;
    return this;
  }

  public EventSearchResult addUserCreatedEventItem(UserCreatedEvent userCreatedEventItem) {
    if (this.userCreatedEvent == null) {
      this.userCreatedEvent = new ArrayList<UserCreatedEvent>();
    }
    this.userCreatedEvent.add(userCreatedEventItem);
    return this;
  }

   /**
   * User created event
   * @return userCreatedEvent
  **/
  @ApiModelProperty(value = "User created event")
  public List<UserCreatedEvent> getUserCreatedEvent() {
    return userCreatedEvent;
  }

  public void setUserCreatedEvent(List<UserCreatedEvent> userCreatedEvent) {
    this.userCreatedEvent = userCreatedEvent;
  }

  public EventSearchResult userUpdatedEvent(List<UserUpdatedEvent> userUpdatedEvent) {
    this.userUpdatedEvent = userUpdatedEvent;
    return this;
  }

  public EventSearchResult addUserUpdatedEventItem(UserUpdatedEvent userUpdatedEventItem) {
    if (this.userUpdatedEvent == null) {
      this.userUpdatedEvent = new ArrayList<UserUpdatedEvent>();
    }
    this.userUpdatedEvent.add(userUpdatedEventItem);
    return this;
  }

   /**
   * User updated event
   * @return userUpdatedEvent
  **/
  @ApiModelProperty(value = "User updated event")
  public List<UserUpdatedEvent> getUserUpdatedEvent() {
    return userUpdatedEvent;
  }

  public void setUserUpdatedEvent(List<UserUpdatedEvent> userUpdatedEvent) {
    this.userUpdatedEvent = userUpdatedEvent;
  }

  public EventSearchResult userDeletedEvent(List<UserDeletedEvent> userDeletedEvent) {
    this.userDeletedEvent = userDeletedEvent;
    return this;
  }

  public EventSearchResult addUserDeletedEventItem(UserDeletedEvent userDeletedEventItem) {
    if (this.userDeletedEvent == null) {
      this.userDeletedEvent = new ArrayList<UserDeletedEvent>();
    }
    this.userDeletedEvent.add(userDeletedEventItem);
    return this;
  }

   /**
   * User deleted event
   * @return userDeletedEvent
  **/
  @ApiModelProperty(value = "User deleted event")
  public List<UserDeletedEvent> getUserDeletedEvent() {
    return userDeletedEvent;
  }

  public void setUserDeletedEvent(List<UserDeletedEvent> userDeletedEvent) {
    this.userDeletedEvent = userDeletedEvent;
  }

  public EventSearchResult userCreatedPasswordEvent(List<UserPasswordCreatedEvent> userCreatedPasswordEvent) {
    this.userCreatedPasswordEvent = userCreatedPasswordEvent;
    return this;
  }

  public EventSearchResult addUserCreatedPasswordEventItem(UserPasswordCreatedEvent userCreatedPasswordEventItem) {
    if (this.userCreatedPasswordEvent == null) {
      this.userCreatedPasswordEvent = new ArrayList<UserPasswordCreatedEvent>();
    }
    this.userCreatedPasswordEvent.add(userCreatedPasswordEventItem);
    return this;
  }

   /**
   * User password created event
   * @return userCreatedPasswordEvent
  **/
  @ApiModelProperty(value = "User password created event")
  public List<UserPasswordCreatedEvent> getUserCreatedPasswordEvent() {
    return userCreatedPasswordEvent;
  }

  public void setUserCreatedPasswordEvent(List<UserPasswordCreatedEvent> userCreatedPasswordEvent) {
    this.userCreatedPasswordEvent = userCreatedPasswordEvent;
  }

  public EventSearchResult userAnsweredSignupQuestionsEvent(List<UserAnsweredSignupQuestionsEvent> userAnsweredSignupQuestionsEvent) {
    this.userAnsweredSignupQuestionsEvent = userAnsweredSignupQuestionsEvent;
    return this;
  }

  public EventSearchResult addUserAnsweredSignupQuestionsEventItem(UserAnsweredSignupQuestionsEvent userAnsweredSignupQuestionsEventItem) {
    if (this.userAnsweredSignupQuestionsEvent == null) {
      this.userAnsweredSignupQuestionsEvent = new ArrayList<UserAnsweredSignupQuestionsEvent>();
    }
    this.userAnsweredSignupQuestionsEvent.add(userAnsweredSignupQuestionsEventItem);
    return this;
  }

   /**
   * User answered signup questions event
   * @return userAnsweredSignupQuestionsEvent
  **/
  @ApiModelProperty(value = "User answered signup questions event")
  public List<UserAnsweredSignupQuestionsEvent> getUserAnsweredSignupQuestionsEvent() {
    return userAnsweredSignupQuestionsEvent;
  }

  public void setUserAnsweredSignupQuestionsEvent(List<UserAnsweredSignupQuestionsEvent> userAnsweredSignupQuestionsEvent) {
    this.userAnsweredSignupQuestionsEvent = userAnsweredSignupQuestionsEvent;
  }

  public EventSearchResult voucherCreatedEvent(List<VoucherCreatedEvent> voucherCreatedEvent) {
    this.voucherCreatedEvent = voucherCreatedEvent;
    return this;
  }

  public EventSearchResult addVoucherCreatedEventItem(VoucherCreatedEvent voucherCreatedEventItem) {
    if (this.voucherCreatedEvent == null) {
      this.voucherCreatedEvent = new ArrayList<VoucherCreatedEvent>();
    }
    this.voucherCreatedEvent.add(voucherCreatedEventItem);
    return this;
  }

   /**
   * Voucher created event
   * @return voucherCreatedEvent
  **/
  @ApiModelProperty(value = "Voucher created event")
  public List<VoucherCreatedEvent> getVoucherCreatedEvent() {
    return voucherCreatedEvent;
  }

  public void setVoucherCreatedEvent(List<VoucherCreatedEvent> voucherCreatedEvent) {
    this.voucherCreatedEvent = voucherCreatedEvent;
  }

  public EventSearchResult voucherUpdatedEvent(List<VoucherUpdatedEvent> voucherUpdatedEvent) {
    this.voucherUpdatedEvent = voucherUpdatedEvent;
    return this;
  }

  public EventSearchResult addVoucherUpdatedEventItem(VoucherUpdatedEvent voucherUpdatedEventItem) {
    if (this.voucherUpdatedEvent == null) {
      this.voucherUpdatedEvent = new ArrayList<VoucherUpdatedEvent>();
    }
    this.voucherUpdatedEvent.add(voucherUpdatedEventItem);
    return this;
  }

   /**
   * Voucher updated event
   * @return voucherUpdatedEvent
  **/
  @ApiModelProperty(value = "Voucher updated event")
  public List<VoucherUpdatedEvent> getVoucherUpdatedEvent() {
    return voucherUpdatedEvent;
  }

  public void setVoucherUpdatedEvent(List<VoucherUpdatedEvent> voucherUpdatedEvent) {
    this.voucherUpdatedEvent = voucherUpdatedEvent;
  }

  public EventSearchResult voucherDeletedEvent(List<VoucherDeletedEvent> voucherDeletedEvent) {
    this.voucherDeletedEvent = voucherDeletedEvent;
    return this;
  }

  public EventSearchResult addVoucherDeletedEventItem(VoucherDeletedEvent voucherDeletedEventItem) {
    if (this.voucherDeletedEvent == null) {
      this.voucherDeletedEvent = new ArrayList<VoucherDeletedEvent>();
    }
    this.voucherDeletedEvent.add(voucherDeletedEventItem);
    return this;
  }

   /**
   * Voucher deleted event
   * @return voucherDeletedEvent
  **/
  @ApiModelProperty(value = "Voucher deleted event")
  public List<VoucherDeletedEvent> getVoucherDeletedEvent() {
    return voucherDeletedEvent;
  }

  public void setVoucherDeletedEvent(List<VoucherDeletedEvent> voucherDeletedEvent) {
    this.voucherDeletedEvent = voucherDeletedEvent;
  }

  public EventSearchResult teammateInviteSentEvent(List<TeammateInviteSentEvent> teammateInviteSentEvent) {
    this.teammateInviteSentEvent = teammateInviteSentEvent;
    return this;
  }

  public EventSearchResult addTeammateInviteSentEventItem(TeammateInviteSentEvent teammateInviteSentEventItem) {
    if (this.teammateInviteSentEvent == null) {
      this.teammateInviteSentEvent = new ArrayList<TeammateInviteSentEvent>();
    }
    this.teammateInviteSentEvent.add(teammateInviteSentEventItem);
    return this;
  }

   /**
   * Teammate invite sent event
   * @return teammateInviteSentEvent
  **/
  @ApiModelProperty(value = "Teammate invite sent event")
  public List<TeammateInviteSentEvent> getTeammateInviteSentEvent() {
    return teammateInviteSentEvent;
  }

  public void setTeammateInviteSentEvent(List<TeammateInviteSentEvent> teammateInviteSentEvent) {
    this.teammateInviteSentEvent = teammateInviteSentEvent;
  }

  public EventSearchResult teammateInviteAcceptedEvent(List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent) {
    this.teammateInviteAcceptedEvent = teammateInviteAcceptedEvent;
    return this;
  }

  public EventSearchResult addTeammateInviteAcceptedEventItem(TeammateInviteAcceptedEvent teammateInviteAcceptedEventItem) {
    if (this.teammateInviteAcceptedEvent == null) {
      this.teammateInviteAcceptedEvent = new ArrayList<TeammateInviteAcceptedEvent>();
    }
    this.teammateInviteAcceptedEvent.add(teammateInviteAcceptedEventItem);
    return this;
  }

   /**
   * Teammate invite accepted event
   * @return teammateInviteAcceptedEvent
  **/
  @ApiModelProperty(value = "Teammate invite accepted event")
  public List<TeammateInviteAcceptedEvent> getTeammateInviteAcceptedEvent() {
    return teammateInviteAcceptedEvent;
  }

  public void setTeammateInviteAcceptedEvent(List<TeammateInviteAcceptedEvent> teammateInviteAcceptedEvent) {
    this.teammateInviteAcceptedEvent = teammateInviteAcceptedEvent;
  }

  public EventSearchResult teammateUpdatedEvent(List<TeammateUpdatedEvent> teammateUpdatedEvent) {
    this.teammateUpdatedEvent = teammateUpdatedEvent;
    return this;
  }

  public EventSearchResult addTeammateUpdatedEventItem(TeammateUpdatedEvent teammateUpdatedEventItem) {
    if (this.teammateUpdatedEvent == null) {
      this.teammateUpdatedEvent = new ArrayList<TeammateUpdatedEvent>();
    }
    this.teammateUpdatedEvent.add(teammateUpdatedEventItem);
    return this;
  }

   /**
   * Teammate updated event
   * @return teammateUpdatedEvent
  **/
  @ApiModelProperty(value = "Teammate updated event")
  public List<TeammateUpdatedEvent> getTeammateUpdatedEvent() {
    return teammateUpdatedEvent;
  }

  public void setTeammateUpdatedEvent(List<TeammateUpdatedEvent> teammateUpdatedEvent) {
    this.teammateUpdatedEvent = teammateUpdatedEvent;
  }

  public EventSearchResult teammateDeletedEvent(List<TeammateDeletedEvent> teammateDeletedEvent) {
    this.teammateDeletedEvent = teammateDeletedEvent;
    return this;
  }

  public EventSearchResult addTeammateDeletedEventItem(TeammateDeletedEvent teammateDeletedEventItem) {
    if (this.teammateDeletedEvent == null) {
      this.teammateDeletedEvent = new ArrayList<TeammateDeletedEvent>();
    }
    this.teammateDeletedEvent.add(teammateDeletedEventItem);
    return this;
  }

   /**
   * Teammate deleted event
   * @return teammateDeletedEvent
  **/
  @ApiModelProperty(value = "Teammate deleted event")
  public List<TeammateDeletedEvent> getTeammateDeletedEvent() {
    return teammateDeletedEvent;
  }

  public void setTeammateDeletedEvent(List<TeammateDeletedEvent> teammateDeletedEvent) {
    this.teammateDeletedEvent = teammateDeletedEvent;
  }

  public EventSearchResult bankAccountCreatedEvent(List<BankAccountCreatedEvent> bankAccountCreatedEvent) {
    this.bankAccountCreatedEvent = bankAccountCreatedEvent;
    return this;
  }

  public EventSearchResult addBankAccountCreatedEventItem(BankAccountCreatedEvent bankAccountCreatedEventItem) {
    if (this.bankAccountCreatedEvent == null) {
      this.bankAccountCreatedEvent = new ArrayList<BankAccountCreatedEvent>();
    }
    this.bankAccountCreatedEvent.add(bankAccountCreatedEventItem);
    return this;
  }

   /**
   * Bank account created event
   * @return bankAccountCreatedEvent
  **/
  @ApiModelProperty(value = "Bank account created event")
  public List<BankAccountCreatedEvent> getBankAccountCreatedEvent() {
    return bankAccountCreatedEvent;
  }

  public void setBankAccountCreatedEvent(List<BankAccountCreatedEvent> bankAccountCreatedEvent) {
    this.bankAccountCreatedEvent = bankAccountCreatedEvent;
  }

  public EventSearchResult bankAccountUpdatedEvent(List<BankAccountUpdatedEvent> bankAccountUpdatedEvent) {
    this.bankAccountUpdatedEvent = bankAccountUpdatedEvent;
    return this;
  }

  public EventSearchResult addBankAccountUpdatedEventItem(BankAccountUpdatedEvent bankAccountUpdatedEventItem) {
    if (this.bankAccountUpdatedEvent == null) {
      this.bankAccountUpdatedEvent = new ArrayList<BankAccountUpdatedEvent>();
    }
    this.bankAccountUpdatedEvent.add(bankAccountUpdatedEventItem);
    return this;
  }

   /**
   * Bank account updated event
   * @return bankAccountUpdatedEvent
  **/
  @ApiModelProperty(value = "Bank account updated event")
  public List<BankAccountUpdatedEvent> getBankAccountUpdatedEvent() {
    return bankAccountUpdatedEvent;
  }

  public void setBankAccountUpdatedEvent(List<BankAccountUpdatedEvent> bankAccountUpdatedEvent) {
    this.bankAccountUpdatedEvent = bankAccountUpdatedEvent;
  }

  public EventSearchResult bankAccountDeletedEvent(List<BankAccountDeletedEvent> bankAccountDeletedEvent) {
    this.bankAccountDeletedEvent = bankAccountDeletedEvent;
    return this;
  }

  public EventSearchResult addBankAccountDeletedEventItem(BankAccountDeletedEvent bankAccountDeletedEventItem) {
    if (this.bankAccountDeletedEvent == null) {
      this.bankAccountDeletedEvent = new ArrayList<BankAccountDeletedEvent>();
    }
    this.bankAccountDeletedEvent.add(bankAccountDeletedEventItem);
    return this;
  }

   /**
   * Bank account updated event
   * @return bankAccountDeletedEvent
  **/
  @ApiModelProperty(value = "Bank account updated event")
  public List<BankAccountDeletedEvent> getBankAccountDeletedEvent() {
    return bankAccountDeletedEvent;
  }

  public void setBankAccountDeletedEvent(List<BankAccountDeletedEvent> bankAccountDeletedEvent) {
    this.bankAccountDeletedEvent = bankAccountDeletedEvent;
  }

  public EventSearchResult bankAccountAssignedEvent(List<BankAccountAssignedEvent> bankAccountAssignedEvent) {
    this.bankAccountAssignedEvent = bankAccountAssignedEvent;
    return this;
  }

  public EventSearchResult addBankAccountAssignedEventItem(BankAccountAssignedEvent bankAccountAssignedEventItem) {
    if (this.bankAccountAssignedEvent == null) {
      this.bankAccountAssignedEvent = new ArrayList<BankAccountAssignedEvent>();
    }
    this.bankAccountAssignedEvent.add(bankAccountAssignedEventItem);
    return this;
  }

   /**
   * Bank account assigned event
   * @return bankAccountAssignedEvent
  **/
  @ApiModelProperty(value = "Bank account assigned event")
  public List<BankAccountAssignedEvent> getBankAccountAssignedEvent() {
    return bankAccountAssignedEvent;
  }

  public void setBankAccountAssignedEvent(List<BankAccountAssignedEvent> bankAccountAssignedEvent) {
    this.bankAccountAssignedEvent = bankAccountAssignedEvent;
  }

  public EventSearchResult hydraAssignedEvent(List<HydraAssignedEvent> hydraAssignedEvent) {
    this.hydraAssignedEvent = hydraAssignedEvent;
    return this;
  }

  public EventSearchResult addHydraAssignedEventItem(HydraAssignedEvent hydraAssignedEventItem) {
    if (this.hydraAssignedEvent == null) {
      this.hydraAssignedEvent = new ArrayList<HydraAssignedEvent>();
    }
    this.hydraAssignedEvent.add(hydraAssignedEventItem);
    return this;
  }

   /**
   * Hydra assigned event
   * @return hydraAssignedEvent
  **/
  @ApiModelProperty(value = "Hydra assigned event")
  public List<HydraAssignedEvent> getHydraAssignedEvent() {
    return hydraAssignedEvent;
  }

  public void setHydraAssignedEvent(List<HydraAssignedEvent> hydraAssignedEvent) {
    this.hydraAssignedEvent = hydraAssignedEvent;
  }

  public EventSearchResult hydraRequestResetEvent(List<HydraRequestResetEvent> hydraRequestResetEvent) {
    this.hydraRequestResetEvent = hydraRequestResetEvent;
    return this;
  }

  public EventSearchResult addHydraRequestResetEventItem(HydraRequestResetEvent hydraRequestResetEventItem) {
    if (this.hydraRequestResetEvent == null) {
      this.hydraRequestResetEvent = new ArrayList<HydraRequestResetEvent>();
    }
    this.hydraRequestResetEvent.add(hydraRequestResetEventItem);
    return this;
  }

   /**
   * Hydra reset requested event
   * @return hydraRequestResetEvent
  **/
  @ApiModelProperty(value = "Hydra reset requested event")
  public List<HydraRequestResetEvent> getHydraRequestResetEvent() {
    return hydraRequestResetEvent;
  }

  public void setHydraRequestResetEvent(List<HydraRequestResetEvent> hydraRequestResetEvent) {
    this.hydraRequestResetEvent = hydraRequestResetEvent;
  }

  public EventSearchResult hydraStoreAssignedEvent(List<HydraStoreAssignedEvent> hydraStoreAssignedEvent) {
    this.hydraStoreAssignedEvent = hydraStoreAssignedEvent;
    return this;
  }

  public EventSearchResult addHydraStoreAssignedEventItem(HydraStoreAssignedEvent hydraStoreAssignedEventItem) {
    if (this.hydraStoreAssignedEvent == null) {
      this.hydraStoreAssignedEvent = new ArrayList<HydraStoreAssignedEvent>();
    }
    this.hydraStoreAssignedEvent.add(hydraStoreAssignedEventItem);
    return this;
  }

   /**
   * Hydra store assigned event
   * @return hydraStoreAssignedEvent
  **/
  @ApiModelProperty(value = "Hydra store assigned event")
  public List<HydraStoreAssignedEvent> getHydraStoreAssignedEvent() {
    return hydraStoreAssignedEvent;
  }

  public void setHydraStoreAssignedEvent(List<HydraStoreAssignedEvent> hydraStoreAssignedEvent) {
    this.hydraStoreAssignedEvent = hydraStoreAssignedEvent;
  }

  public EventSearchResult hydraStoreUnassignedEvent(List<HydraStoreUnassignedEvent> hydraStoreUnassignedEvent) {
    this.hydraStoreUnassignedEvent = hydraStoreUnassignedEvent;
    return this;
  }

  public EventSearchResult addHydraStoreUnassignedEventItem(HydraStoreUnassignedEvent hydraStoreUnassignedEventItem) {
    if (this.hydraStoreUnassignedEvent == null) {
      this.hydraStoreUnassignedEvent = new ArrayList<HydraStoreUnassignedEvent>();
    }
    this.hydraStoreUnassignedEvent.add(hydraStoreUnassignedEventItem);
    return this;
  }

   /**
   * Hydra store unassigned
   * @return hydraStoreUnassignedEvent
  **/
  @ApiModelProperty(value = "Hydra store unassigned")
  public List<HydraStoreUnassignedEvent> getHydraStoreUnassignedEvent() {
    return hydraStoreUnassignedEvent;
  }

  public void setHydraStoreUnassignedEvent(List<HydraStoreUnassignedEvent> hydraStoreUnassignedEvent) {
    this.hydraStoreUnassignedEvent = hydraStoreUnassignedEvent;
  }

  public EventSearchResult hydraSettingChangedEvent(List<HydraSettingChangedEvent> hydraSettingChangedEvent) {
    this.hydraSettingChangedEvent = hydraSettingChangedEvent;
    return this;
  }

  public EventSearchResult addHydraSettingChangedEventItem(HydraSettingChangedEvent hydraSettingChangedEventItem) {
    if (this.hydraSettingChangedEvent == null) {
      this.hydraSettingChangedEvent = new ArrayList<HydraSettingChangedEvent>();
    }
    this.hydraSettingChangedEvent.add(hydraSettingChangedEventItem);
    return this;
  }

   /**
   * Hydra settings changed event
   * @return hydraSettingChangedEvent
  **/
  @ApiModelProperty(value = "Hydra settings changed event")
  public List<HydraSettingChangedEvent> getHydraSettingChangedEvent() {
    return hydraSettingChangedEvent;
  }

  public void setHydraSettingChangedEvent(List<HydraSettingChangedEvent> hydraSettingChangedEvent) {
    this.hydraSettingChangedEvent = hydraSettingChangedEvent;
  }

  public EventSearchResult hydraUnAssignedEvent(List<HydraUnAssignedEvent> hydraUnAssignedEvent) {
    this.hydraUnAssignedEvent = hydraUnAssignedEvent;
    return this;
  }

  public EventSearchResult addHydraUnAssignedEventItem(HydraUnAssignedEvent hydraUnAssignedEventItem) {
    if (this.hydraUnAssignedEvent == null) {
      this.hydraUnAssignedEvent = new ArrayList<HydraUnAssignedEvent>();
    }
    this.hydraUnAssignedEvent.add(hydraUnAssignedEventItem);
    return this;
  }

   /**
   * Hydra un-assigned event
   * @return hydraUnAssignedEvent
  **/
  @ApiModelProperty(value = "Hydra un-assigned event")
  public List<HydraUnAssignedEvent> getHydraUnAssignedEvent() {
    return hydraUnAssignedEvent;
  }

  public void setHydraUnAssignedEvent(List<HydraUnAssignedEvent> hydraUnAssignedEvent) {
    this.hydraUnAssignedEvent = hydraUnAssignedEvent;
  }

  public EventSearchResult hydraConnectionStatusChangedEvent(List<HydraConnectionStatusChangedEvent> hydraConnectionStatusChangedEvent) {
    this.hydraConnectionStatusChangedEvent = hydraConnectionStatusChangedEvent;
    return this;
  }

  public EventSearchResult addHydraConnectionStatusChangedEventItem(HydraConnectionStatusChangedEvent hydraConnectionStatusChangedEventItem) {
    if (this.hydraConnectionStatusChangedEvent == null) {
      this.hydraConnectionStatusChangedEvent = new ArrayList<HydraConnectionStatusChangedEvent>();
    }
    this.hydraConnectionStatusChangedEvent.add(hydraConnectionStatusChangedEventItem);
    return this;
  }

   /**
   * Hydra connection state change
   * @return hydraConnectionStatusChangedEvent
  **/
  @ApiModelProperty(value = "Hydra connection state change")
  public List<HydraConnectionStatusChangedEvent> getHydraConnectionStatusChangedEvent() {
    return hydraConnectionStatusChangedEvent;
  }

  public void setHydraConnectionStatusChangedEvent(List<HydraConnectionStatusChangedEvent> hydraConnectionStatusChangedEvent) {
    this.hydraConnectionStatusChangedEvent = hydraConnectionStatusChangedEvent;
  }

  public EventSearchResult kioskBluetoothPairingModeEvent(List<KioskBluetoothPairingModeEvent> kioskBluetoothPairingModeEvent) {
    this.kioskBluetoothPairingModeEvent = kioskBluetoothPairingModeEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothPairingModeEventItem(KioskBluetoothPairingModeEvent kioskBluetoothPairingModeEventItem) {
    if (this.kioskBluetoothPairingModeEvent == null) {
      this.kioskBluetoothPairingModeEvent = new ArrayList<KioskBluetoothPairingModeEvent>();
    }
    this.kioskBluetoothPairingModeEvent.add(kioskBluetoothPairingModeEventItem);
    return this;
  }

   /**
   * Bluetooth Pairing Mode initiated
   * @return kioskBluetoothPairingModeEvent
  **/
  @ApiModelProperty(value = "Bluetooth Pairing Mode initiated")
  public List<KioskBluetoothPairingModeEvent> getKioskBluetoothPairingModeEvent() {
    return kioskBluetoothPairingModeEvent;
  }

  public void setKioskBluetoothPairingModeEvent(List<KioskBluetoothPairingModeEvent> kioskBluetoothPairingModeEvent) {
    this.kioskBluetoothPairingModeEvent = kioskBluetoothPairingModeEvent;
  }

  public EventSearchResult kioskBluetoothUnpairingModeEvent(List<KioskBluetoothUnpairingModeEvent> kioskBluetoothUnpairingModeEvent) {
    this.kioskBluetoothUnpairingModeEvent = kioskBluetoothUnpairingModeEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothUnpairingModeEventItem(KioskBluetoothUnpairingModeEvent kioskBluetoothUnpairingModeEventItem) {
    if (this.kioskBluetoothUnpairingModeEvent == null) {
      this.kioskBluetoothUnpairingModeEvent = new ArrayList<KioskBluetoothUnpairingModeEvent>();
    }
    this.kioskBluetoothUnpairingModeEvent.add(kioskBluetoothUnpairingModeEventItem);
    return this;
  }

   /**
   * Bluetooth Unpairing Mode initiated
   * @return kioskBluetoothUnpairingModeEvent
  **/
  @ApiModelProperty(value = "Bluetooth Unpairing Mode initiated")
  public List<KioskBluetoothUnpairingModeEvent> getKioskBluetoothUnpairingModeEvent() {
    return kioskBluetoothUnpairingModeEvent;
  }

  public void setKioskBluetoothUnpairingModeEvent(List<KioskBluetoothUnpairingModeEvent> kioskBluetoothUnpairingModeEvent) {
    this.kioskBluetoothUnpairingModeEvent = kioskBluetoothUnpairingModeEvent;
  }

  public EventSearchResult kioskBluetoothTerminalUnpairedEvent(List<KioskBluetoothTerminalUnpairedEvent> kioskBluetoothTerminalUnpairedEvent) {
    this.kioskBluetoothTerminalUnpairedEvent = kioskBluetoothTerminalUnpairedEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalUnpairedEventItem(KioskBluetoothTerminalUnpairedEvent kioskBluetoothTerminalUnpairedEventItem) {
    if (this.kioskBluetoothTerminalUnpairedEvent == null) {
      this.kioskBluetoothTerminalUnpairedEvent = new ArrayList<KioskBluetoothTerminalUnpairedEvent>();
    }
    this.kioskBluetoothTerminalUnpairedEvent.add(kioskBluetoothTerminalUnpairedEventItem);
    return this;
  }

   /**
   * Bluetooth Terminal Unpaired with Kiosk
   * @return kioskBluetoothTerminalUnpairedEvent
  **/
  @ApiModelProperty(value = "Bluetooth Terminal Unpaired with Kiosk")
  public List<KioskBluetoothTerminalUnpairedEvent> getKioskBluetoothTerminalUnpairedEvent() {
    return kioskBluetoothTerminalUnpairedEvent;
  }

  public void setKioskBluetoothTerminalUnpairedEvent(List<KioskBluetoothTerminalUnpairedEvent> kioskBluetoothTerminalUnpairedEvent) {
    this.kioskBluetoothTerminalUnpairedEvent = kioskBluetoothTerminalUnpairedEvent;
  }

  public EventSearchResult kioskTerminalActionStateChangedEvent(List<KioskTerminalActionStateChangedEvent> kioskTerminalActionStateChangedEvent) {
    this.kioskTerminalActionStateChangedEvent = kioskTerminalActionStateChangedEvent;
    return this;
  }

  public EventSearchResult addKioskTerminalActionStateChangedEventItem(KioskTerminalActionStateChangedEvent kioskTerminalActionStateChangedEventItem) {
    if (this.kioskTerminalActionStateChangedEvent == null) {
      this.kioskTerminalActionStateChangedEvent = new ArrayList<KioskTerminalActionStateChangedEvent>();
    }
    this.kioskTerminalActionStateChangedEvent.add(kioskTerminalActionStateChangedEventItem);
    return this;
  }

   /**
   * Terminal actionstate change
   * @return kioskTerminalActionStateChangedEvent
  **/
  @ApiModelProperty(value = "Terminal actionstate change")
  public List<KioskTerminalActionStateChangedEvent> getKioskTerminalActionStateChangedEvent() {
    return kioskTerminalActionStateChangedEvent;
  }

  public void setKioskTerminalActionStateChangedEvent(List<KioskTerminalActionStateChangedEvent> kioskTerminalActionStateChangedEvent) {
    this.kioskTerminalActionStateChangedEvent = kioskTerminalActionStateChangedEvent;
  }

  public EventSearchResult kioskBluetoothTerminalUpdatedEvent(List<KioskBluetoothTerminalUpdatedEvent> kioskBluetoothTerminalUpdatedEvent) {
    this.kioskBluetoothTerminalUpdatedEvent = kioskBluetoothTerminalUpdatedEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalUpdatedEventItem(KioskBluetoothTerminalUpdatedEvent kioskBluetoothTerminalUpdatedEventItem) {
    if (this.kioskBluetoothTerminalUpdatedEvent == null) {
      this.kioskBluetoothTerminalUpdatedEvent = new ArrayList<KioskBluetoothTerminalUpdatedEvent>();
    }
    this.kioskBluetoothTerminalUpdatedEvent.add(kioskBluetoothTerminalUpdatedEventItem);
    return this;
  }

   /**
   * Bluetooth Terminal Updated
   * @return kioskBluetoothTerminalUpdatedEvent
  **/
  @ApiModelProperty(value = "Bluetooth Terminal Updated")
  public List<KioskBluetoothTerminalUpdatedEvent> getKioskBluetoothTerminalUpdatedEvent() {
    return kioskBluetoothTerminalUpdatedEvent;
  }

  public void setKioskBluetoothTerminalUpdatedEvent(List<KioskBluetoothTerminalUpdatedEvent> kioskBluetoothTerminalUpdatedEvent) {
    this.kioskBluetoothTerminalUpdatedEvent = kioskBluetoothTerminalUpdatedEvent;
  }

  public EventSearchResult kioskBluetoothTerminalInitiateUpdateCheckEvent(List<KioskBluetoothTerminalInitiateUpdateCheckEvent> kioskBluetoothTerminalInitiateUpdateCheckEvent) {
    this.kioskBluetoothTerminalInitiateUpdateCheckEvent = kioskBluetoothTerminalInitiateUpdateCheckEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalInitiateUpdateCheckEventItem(KioskBluetoothTerminalInitiateUpdateCheckEvent kioskBluetoothTerminalInitiateUpdateCheckEventItem) {
    if (this.kioskBluetoothTerminalInitiateUpdateCheckEvent == null) {
      this.kioskBluetoothTerminalInitiateUpdateCheckEvent = new ArrayList<KioskBluetoothTerminalInitiateUpdateCheckEvent>();
    }
    this.kioskBluetoothTerminalInitiateUpdateCheckEvent.add(kioskBluetoothTerminalInitiateUpdateCheckEventItem);
    return this;
  }

   /**
   * Trigger bluetooth payment terminal update checker
   * @return kioskBluetoothTerminalInitiateUpdateCheckEvent
  **/
  @ApiModelProperty(value = "Trigger bluetooth payment terminal update checker")
  public List<KioskBluetoothTerminalInitiateUpdateCheckEvent> getKioskBluetoothTerminalInitiateUpdateCheckEvent() {
    return kioskBluetoothTerminalInitiateUpdateCheckEvent;
  }

  public void setKioskBluetoothTerminalInitiateUpdateCheckEvent(List<KioskBluetoothTerminalInitiateUpdateCheckEvent> kioskBluetoothTerminalInitiateUpdateCheckEvent) {
    this.kioskBluetoothTerminalInitiateUpdateCheckEvent = kioskBluetoothTerminalInitiateUpdateCheckEvent;
  }

  public EventSearchResult kioskBluetoothInstallUpdateInitiateEvent(List<KioskBluetoothInstallUpdateInitiateEvent> kioskBluetoothInstallUpdateInitiateEvent) {
    this.kioskBluetoothInstallUpdateInitiateEvent = kioskBluetoothInstallUpdateInitiateEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothInstallUpdateInitiateEventItem(KioskBluetoothInstallUpdateInitiateEvent kioskBluetoothInstallUpdateInitiateEventItem) {
    if (this.kioskBluetoothInstallUpdateInitiateEvent == null) {
      this.kioskBluetoothInstallUpdateInitiateEvent = new ArrayList<KioskBluetoothInstallUpdateInitiateEvent>();
    }
    this.kioskBluetoothInstallUpdateInitiateEvent.add(kioskBluetoothInstallUpdateInitiateEventItem);
    return this;
  }

   /**
   * Bluetooth Terminal Initiate Update
   * @return kioskBluetoothInstallUpdateInitiateEvent
  **/
  @ApiModelProperty(value = "Bluetooth Terminal Initiate Update")
  public List<KioskBluetoothInstallUpdateInitiateEvent> getKioskBluetoothInstallUpdateInitiateEvent() {
    return kioskBluetoothInstallUpdateInitiateEvent;
  }

  public void setKioskBluetoothInstallUpdateInitiateEvent(List<KioskBluetoothInstallUpdateInitiateEvent> kioskBluetoothInstallUpdateInitiateEvent) {
    this.kioskBluetoothInstallUpdateInitiateEvent = kioskBluetoothInstallUpdateInitiateEvent;
  }

  public EventSearchResult kioskBluetoothTerminalCancelUpdateEvent(List<KioskBluetoothTerminalCancelUpdateEvent> kioskBluetoothTerminalCancelUpdateEvent) {
    this.kioskBluetoothTerminalCancelUpdateEvent = kioskBluetoothTerminalCancelUpdateEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalCancelUpdateEventItem(KioskBluetoothTerminalCancelUpdateEvent kioskBluetoothTerminalCancelUpdateEventItem) {
    if (this.kioskBluetoothTerminalCancelUpdateEvent == null) {
      this.kioskBluetoothTerminalCancelUpdateEvent = new ArrayList<KioskBluetoothTerminalCancelUpdateEvent>();
    }
    this.kioskBluetoothTerminalCancelUpdateEvent.add(kioskBluetoothTerminalCancelUpdateEventItem);
    return this;
  }

   /**
   * Bluetooth Terminal Cancel Update Install
   * @return kioskBluetoothTerminalCancelUpdateEvent
  **/
  @ApiModelProperty(value = "Bluetooth Terminal Cancel Update Install")
  public List<KioskBluetoothTerminalCancelUpdateEvent> getKioskBluetoothTerminalCancelUpdateEvent() {
    return kioskBluetoothTerminalCancelUpdateEvent;
  }

  public void setKioskBluetoothTerminalCancelUpdateEvent(List<KioskBluetoothTerminalCancelUpdateEvent> kioskBluetoothTerminalCancelUpdateEvent) {
    this.kioskBluetoothTerminalCancelUpdateEvent = kioskBluetoothTerminalCancelUpdateEvent;
  }

  public EventSearchResult kioskBluetoothTerminalFirmwareVersionStatusEvent(List<KioskBluetoothTerminalFirmwareVersionStatusEvent> kioskBluetoothTerminalFirmwareVersionStatusEvent) {
    this.kioskBluetoothTerminalFirmwareVersionStatusEvent = kioskBluetoothTerminalFirmwareVersionStatusEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalFirmwareVersionStatusEventItem(KioskBluetoothTerminalFirmwareVersionStatusEvent kioskBluetoothTerminalFirmwareVersionStatusEventItem) {
    if (this.kioskBluetoothTerminalFirmwareVersionStatusEvent == null) {
      this.kioskBluetoothTerminalFirmwareVersionStatusEvent = new ArrayList<KioskBluetoothTerminalFirmwareVersionStatusEvent>();
    }
    this.kioskBluetoothTerminalFirmwareVersionStatusEvent.add(kioskBluetoothTerminalFirmwareVersionStatusEventItem);
    return this;
  }

   /**
   * Bluetooth Payment Terminal Firmware Version Status Info
   * @return kioskBluetoothTerminalFirmwareVersionStatusEvent
  **/
  @ApiModelProperty(value = "Bluetooth Payment Terminal Firmware Version Status Info")
  public List<KioskBluetoothTerminalFirmwareVersionStatusEvent> getKioskBluetoothTerminalFirmwareVersionStatusEvent() {
    return kioskBluetoothTerminalFirmwareVersionStatusEvent;
  }

  public void setKioskBluetoothTerminalFirmwareVersionStatusEvent(List<KioskBluetoothTerminalFirmwareVersionStatusEvent> kioskBluetoothTerminalFirmwareVersionStatusEvent) {
    this.kioskBluetoothTerminalFirmwareVersionStatusEvent = kioskBluetoothTerminalFirmwareVersionStatusEvent;
  }

  public EventSearchResult kioskBluetoothTerminalInstallationStatusEvent(List<KioskBluetoothTerminalInstallationStatusEvent> kioskBluetoothTerminalInstallationStatusEvent) {
    this.kioskBluetoothTerminalInstallationStatusEvent = kioskBluetoothTerminalInstallationStatusEvent;
    return this;
  }

  public EventSearchResult addKioskBluetoothTerminalInstallationStatusEventItem(KioskBluetoothTerminalInstallationStatusEvent kioskBluetoothTerminalInstallationStatusEventItem) {
    if (this.kioskBluetoothTerminalInstallationStatusEvent == null) {
      this.kioskBluetoothTerminalInstallationStatusEvent = new ArrayList<KioskBluetoothTerminalInstallationStatusEvent>();
    }
    this.kioskBluetoothTerminalInstallationStatusEvent.add(kioskBluetoothTerminalInstallationStatusEventItem);
    return this;
  }

   /**
   * Bluetooth Terminal Update Installation Status
   * @return kioskBluetoothTerminalInstallationStatusEvent
  **/
  @ApiModelProperty(value = "Bluetooth Terminal Update Installation Status")
  public List<KioskBluetoothTerminalInstallationStatusEvent> getKioskBluetoothTerminalInstallationStatusEvent() {
    return kioskBluetoothTerminalInstallationStatusEvent;
  }

  public void setKioskBluetoothTerminalInstallationStatusEvent(List<KioskBluetoothTerminalInstallationStatusEvent> kioskBluetoothTerminalInstallationStatusEvent) {
    this.kioskBluetoothTerminalInstallationStatusEvent = kioskBluetoothTerminalInstallationStatusEvent;
  }

  public EventSearchResult pushNotificationScheduledEvent(List<PushNotificationScheduledEvent> pushNotificationScheduledEvent) {
    this.pushNotificationScheduledEvent = pushNotificationScheduledEvent;
    return this;
  }

  public EventSearchResult addPushNotificationScheduledEventItem(PushNotificationScheduledEvent pushNotificationScheduledEventItem) {
    if (this.pushNotificationScheduledEvent == null) {
      this.pushNotificationScheduledEvent = new ArrayList<PushNotificationScheduledEvent>();
    }
    this.pushNotificationScheduledEvent.add(pushNotificationScheduledEventItem);
    return this;
  }

   /**
   * Push notification scheduled event
   * @return pushNotificationScheduledEvent
  **/
  @ApiModelProperty(value = "Push notification scheduled event")
  public List<PushNotificationScheduledEvent> getPushNotificationScheduledEvent() {
    return pushNotificationScheduledEvent;
  }

  public void setPushNotificationScheduledEvent(List<PushNotificationScheduledEvent> pushNotificationScheduledEvent) {
    this.pushNotificationScheduledEvent = pushNotificationScheduledEvent;
  }

  public EventSearchResult pushNotificationSentEvent(List<PushNotificationSentEvent> pushNotificationSentEvent) {
    this.pushNotificationSentEvent = pushNotificationSentEvent;
    return this;
  }

  public EventSearchResult addPushNotificationSentEventItem(PushNotificationSentEvent pushNotificationSentEventItem) {
    if (this.pushNotificationSentEvent == null) {
      this.pushNotificationSentEvent = new ArrayList<PushNotificationSentEvent>();
    }
    this.pushNotificationSentEvent.add(pushNotificationSentEventItem);
    return this;
  }

   /**
   * Push notification sent event
   * @return pushNotificationSentEvent
  **/
  @ApiModelProperty(value = "Push notification sent event")
  public List<PushNotificationSentEvent> getPushNotificationSentEvent() {
    return pushNotificationSentEvent;
  }

  public void setPushNotificationSentEvent(List<PushNotificationSentEvent> pushNotificationSentEvent) {
    this.pushNotificationSentEvent = pushNotificationSentEvent;
  }

  public EventSearchResult pushNotificationDeletedEvent(List<PushNotificationDeletedEvent> pushNotificationDeletedEvent) {
    this.pushNotificationDeletedEvent = pushNotificationDeletedEvent;
    return this;
  }

  public EventSearchResult addPushNotificationDeletedEventItem(PushNotificationDeletedEvent pushNotificationDeletedEventItem) {
    if (this.pushNotificationDeletedEvent == null) {
      this.pushNotificationDeletedEvent = new ArrayList<PushNotificationDeletedEvent>();
    }
    this.pushNotificationDeletedEvent.add(pushNotificationDeletedEventItem);
    return this;
  }

   /**
   * Push notification deleted event
   * @return pushNotificationDeletedEvent
  **/
  @ApiModelProperty(value = "Push notification deleted event")
  public List<PushNotificationDeletedEvent> getPushNotificationDeletedEvent() {
    return pushNotificationDeletedEvent;
  }

  public void setPushNotificationDeletedEvent(List<PushNotificationDeletedEvent> pushNotificationDeletedEvent) {
    this.pushNotificationDeletedEvent = pushNotificationDeletedEvent;
  }

  public EventSearchResult dnsVerifiedEvent(List<DnsVerifiedEvent> dnsVerifiedEvent) {
    this.dnsVerifiedEvent = dnsVerifiedEvent;
    return this;
  }

  public EventSearchResult addDnsVerifiedEventItem(DnsVerifiedEvent dnsVerifiedEventItem) {
    if (this.dnsVerifiedEvent == null) {
      this.dnsVerifiedEvent = new ArrayList<DnsVerifiedEvent>();
    }
    this.dnsVerifiedEvent.add(dnsVerifiedEventItem);
    return this;
  }

   /**
   * DNS Verified
   * @return dnsVerifiedEvent
  **/
  @ApiModelProperty(value = "DNS Verified")
  public List<DnsVerifiedEvent> getDnsVerifiedEvent() {
    return dnsVerifiedEvent;
  }

  public void setDnsVerifiedEvent(List<DnsVerifiedEvent> dnsVerifiedEvent) {
    this.dnsVerifiedEvent = dnsVerifiedEvent;
  }

  public EventSearchResult certificateCreatedEvent(List<CertificateCreatedEvent> certificateCreatedEvent) {
    this.certificateCreatedEvent = certificateCreatedEvent;
    return this;
  }

  public EventSearchResult addCertificateCreatedEventItem(CertificateCreatedEvent certificateCreatedEventItem) {
    if (this.certificateCreatedEvent == null) {
      this.certificateCreatedEvent = new ArrayList<CertificateCreatedEvent>();
    }
    this.certificateCreatedEvent.add(certificateCreatedEventItem);
    return this;
  }

   /**
   * Certificate created
   * @return certificateCreatedEvent
  **/
  @ApiModelProperty(value = "Certificate created")
  public List<CertificateCreatedEvent> getCertificateCreatedEvent() {
    return certificateCreatedEvent;
  }

  public void setCertificateCreatedEvent(List<CertificateCreatedEvent> certificateCreatedEvent) {
    this.certificateCreatedEvent = certificateCreatedEvent;
  }

  public EventSearchResult certificateRenewedEvent(List<CertificateRenewedEvent> certificateRenewedEvent) {
    this.certificateRenewedEvent = certificateRenewedEvent;
    return this;
  }

  public EventSearchResult addCertificateRenewedEventItem(CertificateRenewedEvent certificateRenewedEventItem) {
    if (this.certificateRenewedEvent == null) {
      this.certificateRenewedEvent = new ArrayList<CertificateRenewedEvent>();
    }
    this.certificateRenewedEvent.add(certificateRenewedEventItem);
    return this;
  }

   /**
   * Certificate renewed
   * @return certificateRenewedEvent
  **/
  @ApiModelProperty(value = "Certificate renewed")
  public List<CertificateRenewedEvent> getCertificateRenewedEvent() {
    return certificateRenewedEvent;
  }

  public void setCertificateRenewedEvent(List<CertificateRenewedEvent> certificateRenewedEvent) {
    this.certificateRenewedEvent = certificateRenewedEvent;
  }

  public EventSearchResult websiteVanityUrlUpdatedEvent(List<WebsiteVanityUrlUpdatedEvent> websiteVanityUrlUpdatedEvent) {
    this.websiteVanityUrlUpdatedEvent = websiteVanityUrlUpdatedEvent;
    return this;
  }

  public EventSearchResult addWebsiteVanityUrlUpdatedEventItem(WebsiteVanityUrlUpdatedEvent websiteVanityUrlUpdatedEventItem) {
    if (this.websiteVanityUrlUpdatedEvent == null) {
      this.websiteVanityUrlUpdatedEvent = new ArrayList<WebsiteVanityUrlUpdatedEvent>();
    }
    this.websiteVanityUrlUpdatedEvent.add(websiteVanityUrlUpdatedEventItem);
    return this;
  }

   /**
   * Panacea vanity url updated
   * @return websiteVanityUrlUpdatedEvent
  **/
  @ApiModelProperty(value = "Panacea vanity url updated")
  public List<WebsiteVanityUrlUpdatedEvent> getWebsiteVanityUrlUpdatedEvent() {
    return websiteVanityUrlUpdatedEvent;
  }

  public void setWebsiteVanityUrlUpdatedEvent(List<WebsiteVanityUrlUpdatedEvent> websiteVanityUrlUpdatedEvent) {
    this.websiteVanityUrlUpdatedEvent = websiteVanityUrlUpdatedEvent;
  }

  public EventSearchResult websiteUpdatedEvent(List<WebsiteUpdatedEvent> websiteUpdatedEvent) {
    this.websiteUpdatedEvent = websiteUpdatedEvent;
    return this;
  }

  public EventSearchResult addWebsiteUpdatedEventItem(WebsiteUpdatedEvent websiteUpdatedEventItem) {
    if (this.websiteUpdatedEvent == null) {
      this.websiteUpdatedEvent = new ArrayList<WebsiteUpdatedEvent>();
    }
    this.websiteUpdatedEvent.add(websiteUpdatedEventItem);
    return this;
  }

   /**
   * Website updated
   * @return websiteUpdatedEvent
  **/
  @ApiModelProperty(value = "Website updated")
  public List<WebsiteUpdatedEvent> getWebsiteUpdatedEvent() {
    return websiteUpdatedEvent;
  }

  public void setWebsiteUpdatedEvent(List<WebsiteUpdatedEvent> websiteUpdatedEvent) {
    this.websiteUpdatedEvent = websiteUpdatedEvent;
  }

  public EventSearchResult orderCapacityUpdatedEvent(List<OrderCapacityConfigUpdatedEvent> orderCapacityUpdatedEvent) {
    this.orderCapacityUpdatedEvent = orderCapacityUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderCapacityUpdatedEventItem(OrderCapacityConfigUpdatedEvent orderCapacityUpdatedEventItem) {
    if (this.orderCapacityUpdatedEvent == null) {
      this.orderCapacityUpdatedEvent = new ArrayList<OrderCapacityConfigUpdatedEvent>();
    }
    this.orderCapacityUpdatedEvent.add(orderCapacityUpdatedEventItem);
    return this;
  }

   /**
   * Order capacity config updated
   * @return orderCapacityUpdatedEvent
  **/
  @ApiModelProperty(value = "Order capacity config updated")
  public List<OrderCapacityConfigUpdatedEvent> getOrderCapacityUpdatedEvent() {
    return orderCapacityUpdatedEvent;
  }

  public void setOrderCapacityUpdatedEvent(List<OrderCapacityConfigUpdatedEvent> orderCapacityUpdatedEvent) {
    this.orderCapacityUpdatedEvent = orderCapacityUpdatedEvent;
  }

  public EventSearchResult externalStoreEvent(List<ExternalStoreEvent> externalStoreEvent) {
    this.externalStoreEvent = externalStoreEvent;
    return this;
  }

  public EventSearchResult addExternalStoreEventItem(ExternalStoreEvent externalStoreEventItem) {
    if (this.externalStoreEvent == null) {
      this.externalStoreEvent = new ArrayList<ExternalStoreEvent>();
    }
    this.externalStoreEvent.add(externalStoreEventItem);
    return this;
  }

   /**
   * External event
   * @return externalStoreEvent
  **/
  @ApiModelProperty(value = "External event")
  public List<ExternalStoreEvent> getExternalStoreEvent() {
    return externalStoreEvent;
  }

  public void setExternalStoreEvent(List<ExternalStoreEvent> externalStoreEvent) {
    this.externalStoreEvent = externalStoreEvent;
  }

  public EventSearchResult orderFulfillmentStatusUpdatedEvent(List<OrderFulfillmentStatusUpdatedEvent> orderFulfillmentStatusUpdatedEvent) {
    this.orderFulfillmentStatusUpdatedEvent = orderFulfillmentStatusUpdatedEvent;
    return this;
  }

  public EventSearchResult addOrderFulfillmentStatusUpdatedEventItem(OrderFulfillmentStatusUpdatedEvent orderFulfillmentStatusUpdatedEventItem) {
    if (this.orderFulfillmentStatusUpdatedEvent == null) {
      this.orderFulfillmentStatusUpdatedEvent = new ArrayList<OrderFulfillmentStatusUpdatedEvent>();
    }
    this.orderFulfillmentStatusUpdatedEvent.add(orderFulfillmentStatusUpdatedEventItem);
    return this;
  }

   /**
   * Fulfillment status updated event
   * @return orderFulfillmentStatusUpdatedEvent
  **/
  @ApiModelProperty(value = "Fulfillment status updated event")
  public List<OrderFulfillmentStatusUpdatedEvent> getOrderFulfillmentStatusUpdatedEvent() {
    return orderFulfillmentStatusUpdatedEvent;
  }

  public void setOrderFulfillmentStatusUpdatedEvent(List<OrderFulfillmentStatusUpdatedEvent> orderFulfillmentStatusUpdatedEvent) {
    this.orderFulfillmentStatusUpdatedEvent = orderFulfillmentStatusUpdatedEvent;
  }

  public EventSearchResult appStoreConfigCreatedEvent(List<AppStoreConfigCreatedEvent> appStoreConfigCreatedEvent) {
    this.appStoreConfigCreatedEvent = appStoreConfigCreatedEvent;
    return this;
  }

  public EventSearchResult addAppStoreConfigCreatedEventItem(AppStoreConfigCreatedEvent appStoreConfigCreatedEventItem) {
    if (this.appStoreConfigCreatedEvent == null) {
      this.appStoreConfigCreatedEvent = new ArrayList<AppStoreConfigCreatedEvent>();
    }
    this.appStoreConfigCreatedEvent.add(appStoreConfigCreatedEventItem);
    return this;
  }

   /**
   * App Store Config Created
   * @return appStoreConfigCreatedEvent
  **/
  @ApiModelProperty(value = "App Store Config Created")
  public List<AppStoreConfigCreatedEvent> getAppStoreConfigCreatedEvent() {
    return appStoreConfigCreatedEvent;
  }

  public void setAppStoreConfigCreatedEvent(List<AppStoreConfigCreatedEvent> appStoreConfigCreatedEvent) {
    this.appStoreConfigCreatedEvent = appStoreConfigCreatedEvent;
  }

  public EventSearchResult appStoreConfigUpdatedEvent(List<AppStoreConfigUpdatedEvent> appStoreConfigUpdatedEvent) {
    this.appStoreConfigUpdatedEvent = appStoreConfigUpdatedEvent;
    return this;
  }

  public EventSearchResult addAppStoreConfigUpdatedEventItem(AppStoreConfigUpdatedEvent appStoreConfigUpdatedEventItem) {
    if (this.appStoreConfigUpdatedEvent == null) {
      this.appStoreConfigUpdatedEvent = new ArrayList<AppStoreConfigUpdatedEvent>();
    }
    this.appStoreConfigUpdatedEvent.add(appStoreConfigUpdatedEventItem);
    return this;
  }

   /**
   * App Store Config Updated
   * @return appStoreConfigUpdatedEvent
  **/
  @ApiModelProperty(value = "App Store Config Updated")
  public List<AppStoreConfigUpdatedEvent> getAppStoreConfigUpdatedEvent() {
    return appStoreConfigUpdatedEvent;
  }

  public void setAppStoreConfigUpdatedEvent(List<AppStoreConfigUpdatedEvent> appStoreConfigUpdatedEvent) {
    this.appStoreConfigUpdatedEvent = appStoreConfigUpdatedEvent;
  }

  public EventSearchResult appStoreConfigDeletedEvent(List<AppStoreConfigDeletedEvent> appStoreConfigDeletedEvent) {
    this.appStoreConfigDeletedEvent = appStoreConfigDeletedEvent;
    return this;
  }

  public EventSearchResult addAppStoreConfigDeletedEventItem(AppStoreConfigDeletedEvent appStoreConfigDeletedEventItem) {
    if (this.appStoreConfigDeletedEvent == null) {
      this.appStoreConfigDeletedEvent = new ArrayList<AppStoreConfigDeletedEvent>();
    }
    this.appStoreConfigDeletedEvent.add(appStoreConfigDeletedEventItem);
    return this;
  }

   /**
   * App Store Config Deleted
   * @return appStoreConfigDeletedEvent
  **/
  @ApiModelProperty(value = "App Store Config Deleted")
  public List<AppStoreConfigDeletedEvent> getAppStoreConfigDeletedEvent() {
    return appStoreConfigDeletedEvent;
  }

  public void setAppStoreConfigDeletedEvent(List<AppStoreConfigDeletedEvent> appStoreConfigDeletedEvent) {
    this.appStoreConfigDeletedEvent = appStoreConfigDeletedEvent;
  }

  public EventSearchResult catalogItemCreatedEvent(List<CatalogItemCreatedEvent> catalogItemCreatedEvent) {
    this.catalogItemCreatedEvent = catalogItemCreatedEvent;
    return this;
  }

  public EventSearchResult addCatalogItemCreatedEventItem(CatalogItemCreatedEvent catalogItemCreatedEventItem) {
    if (this.catalogItemCreatedEvent == null) {
      this.catalogItemCreatedEvent = new ArrayList<CatalogItemCreatedEvent>();
    }
    this.catalogItemCreatedEvent.add(catalogItemCreatedEventItem);
    return this;
  }

   /**
   * Catalog Item Created
   * @return catalogItemCreatedEvent
  **/
  @ApiModelProperty(value = "Catalog Item Created")
  public List<CatalogItemCreatedEvent> getCatalogItemCreatedEvent() {
    return catalogItemCreatedEvent;
  }

  public void setCatalogItemCreatedEvent(List<CatalogItemCreatedEvent> catalogItemCreatedEvent) {
    this.catalogItemCreatedEvent = catalogItemCreatedEvent;
  }

  public EventSearchResult catalogItemUpdatedEvent(List<CatalogItemUpdatedEvent> catalogItemUpdatedEvent) {
    this.catalogItemUpdatedEvent = catalogItemUpdatedEvent;
    return this;
  }

  public EventSearchResult addCatalogItemUpdatedEventItem(CatalogItemUpdatedEvent catalogItemUpdatedEventItem) {
    if (this.catalogItemUpdatedEvent == null) {
      this.catalogItemUpdatedEvent = new ArrayList<CatalogItemUpdatedEvent>();
    }
    this.catalogItemUpdatedEvent.add(catalogItemUpdatedEventItem);
    return this;
  }

   /**
   * Catalog Item Updated
   * @return catalogItemUpdatedEvent
  **/
  @ApiModelProperty(value = "Catalog Item Updated")
  public List<CatalogItemUpdatedEvent> getCatalogItemUpdatedEvent() {
    return catalogItemUpdatedEvent;
  }

  public void setCatalogItemUpdatedEvent(List<CatalogItemUpdatedEvent> catalogItemUpdatedEvent) {
    this.catalogItemUpdatedEvent = catalogItemUpdatedEvent;
  }

  public EventSearchResult catalogItemArchivedEvent(List<CatalogItemArchivedEvent> catalogItemArchivedEvent) {
    this.catalogItemArchivedEvent = catalogItemArchivedEvent;
    return this;
  }

  public EventSearchResult addCatalogItemArchivedEventItem(CatalogItemArchivedEvent catalogItemArchivedEventItem) {
    if (this.catalogItemArchivedEvent == null) {
      this.catalogItemArchivedEvent = new ArrayList<CatalogItemArchivedEvent>();
    }
    this.catalogItemArchivedEvent.add(catalogItemArchivedEventItem);
    return this;
  }

   /**
   * Catalog Item Archived
   * @return catalogItemArchivedEvent
  **/
  @ApiModelProperty(value = "Catalog Item Archived")
  public List<CatalogItemArchivedEvent> getCatalogItemArchivedEvent() {
    return catalogItemArchivedEvent;
  }

  public void setCatalogItemArchivedEvent(List<CatalogItemArchivedEvent> catalogItemArchivedEvent) {
    this.catalogItemArchivedEvent = catalogItemArchivedEvent;
  }

  public EventSearchResult catalogGroupCreatedEvent(List<CatalogGroupCreatedEvent> catalogGroupCreatedEvent) {
    this.catalogGroupCreatedEvent = catalogGroupCreatedEvent;
    return this;
  }

  public EventSearchResult addCatalogGroupCreatedEventItem(CatalogGroupCreatedEvent catalogGroupCreatedEventItem) {
    if (this.catalogGroupCreatedEvent == null) {
      this.catalogGroupCreatedEvent = new ArrayList<CatalogGroupCreatedEvent>();
    }
    this.catalogGroupCreatedEvent.add(catalogGroupCreatedEventItem);
    return this;
  }

   /**
   * Catalog Group Created
   * @return catalogGroupCreatedEvent
  **/
  @ApiModelProperty(value = "Catalog Group Created")
  public List<CatalogGroupCreatedEvent> getCatalogGroupCreatedEvent() {
    return catalogGroupCreatedEvent;
  }

  public void setCatalogGroupCreatedEvent(List<CatalogGroupCreatedEvent> catalogGroupCreatedEvent) {
    this.catalogGroupCreatedEvent = catalogGroupCreatedEvent;
  }

  public EventSearchResult catalogGroupUpdatedEvent(List<CatalogGroupUpdatedEvent> catalogGroupUpdatedEvent) {
    this.catalogGroupUpdatedEvent = catalogGroupUpdatedEvent;
    return this;
  }

  public EventSearchResult addCatalogGroupUpdatedEventItem(CatalogGroupUpdatedEvent catalogGroupUpdatedEventItem) {
    if (this.catalogGroupUpdatedEvent == null) {
      this.catalogGroupUpdatedEvent = new ArrayList<CatalogGroupUpdatedEvent>();
    }
    this.catalogGroupUpdatedEvent.add(catalogGroupUpdatedEventItem);
    return this;
  }

   /**
   * Catalog Group Updated
   * @return catalogGroupUpdatedEvent
  **/
  @ApiModelProperty(value = "Catalog Group Updated")
  public List<CatalogGroupUpdatedEvent> getCatalogGroupUpdatedEvent() {
    return catalogGroupUpdatedEvent;
  }

  public void setCatalogGroupUpdatedEvent(List<CatalogGroupUpdatedEvent> catalogGroupUpdatedEvent) {
    this.catalogGroupUpdatedEvent = catalogGroupUpdatedEvent;
  }

  public EventSearchResult catalogGroupArchivedEvent(List<CatalogGroupArchivedEvent> catalogGroupArchivedEvent) {
    this.catalogGroupArchivedEvent = catalogGroupArchivedEvent;
    return this;
  }

  public EventSearchResult addCatalogGroupArchivedEventItem(CatalogGroupArchivedEvent catalogGroupArchivedEventItem) {
    if (this.catalogGroupArchivedEvent == null) {
      this.catalogGroupArchivedEvent = new ArrayList<CatalogGroupArchivedEvent>();
    }
    this.catalogGroupArchivedEvent.add(catalogGroupArchivedEventItem);
    return this;
  }

   /**
   * Catalog Group Archived
   * @return catalogGroupArchivedEvent
  **/
  @ApiModelProperty(value = "Catalog Group Archived")
  public List<CatalogGroupArchivedEvent> getCatalogGroupArchivedEvent() {
    return catalogGroupArchivedEvent;
  }

  public void setCatalogGroupArchivedEvent(List<CatalogGroupArchivedEvent> catalogGroupArchivedEvent) {
    this.catalogGroupArchivedEvent = catalogGroupArchivedEvent;
  }

  public EventSearchResult storeTipUpdatedEvent(List<StoreTipUpdatedEvent> storeTipUpdatedEvent) {
    this.storeTipUpdatedEvent = storeTipUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreTipUpdatedEventItem(StoreTipUpdatedEvent storeTipUpdatedEventItem) {
    if (this.storeTipUpdatedEvent == null) {
      this.storeTipUpdatedEvent = new ArrayList<StoreTipUpdatedEvent>();
    }
    this.storeTipUpdatedEvent.add(storeTipUpdatedEventItem);
    return this;
  }

   /**
   * Store Tip Updated Event
   * @return storeTipUpdatedEvent
  **/
  @ApiModelProperty(value = "Store Tip Updated Event")
  public List<StoreTipUpdatedEvent> getStoreTipUpdatedEvent() {
    return storeTipUpdatedEvent;
  }

  public void setStoreTipUpdatedEvent(List<StoreTipUpdatedEvent> storeTipUpdatedEvent) {
    this.storeTipUpdatedEvent = storeTipUpdatedEvent;
  }

  public EventSearchResult locationAreaCreatedEvent(List<LocationAreaCreatedEvent> locationAreaCreatedEvent) {
    this.locationAreaCreatedEvent = locationAreaCreatedEvent;
    return this;
  }

  public EventSearchResult addLocationAreaCreatedEventItem(LocationAreaCreatedEvent locationAreaCreatedEventItem) {
    if (this.locationAreaCreatedEvent == null) {
      this.locationAreaCreatedEvent = new ArrayList<LocationAreaCreatedEvent>();
    }
    this.locationAreaCreatedEvent.add(locationAreaCreatedEventItem);
    return this;
  }

   /**
   * LocationArea created event
   * @return locationAreaCreatedEvent
  **/
  @ApiModelProperty(value = "LocationArea created event")
  public List<LocationAreaCreatedEvent> getLocationAreaCreatedEvent() {
    return locationAreaCreatedEvent;
  }

  public void setLocationAreaCreatedEvent(List<LocationAreaCreatedEvent> locationAreaCreatedEvent) {
    this.locationAreaCreatedEvent = locationAreaCreatedEvent;
  }

  public EventSearchResult locationAreaUpdatedEvent(List<LocationAreaUpdatedEvent> locationAreaUpdatedEvent) {
    this.locationAreaUpdatedEvent = locationAreaUpdatedEvent;
    return this;
  }

  public EventSearchResult addLocationAreaUpdatedEventItem(LocationAreaUpdatedEvent locationAreaUpdatedEventItem) {
    if (this.locationAreaUpdatedEvent == null) {
      this.locationAreaUpdatedEvent = new ArrayList<LocationAreaUpdatedEvent>();
    }
    this.locationAreaUpdatedEvent.add(locationAreaUpdatedEventItem);
    return this;
  }

   /**
   * LocationArea updated event
   * @return locationAreaUpdatedEvent
  **/
  @ApiModelProperty(value = "LocationArea updated event")
  public List<LocationAreaUpdatedEvent> getLocationAreaUpdatedEvent() {
    return locationAreaUpdatedEvent;
  }

  public void setLocationAreaUpdatedEvent(List<LocationAreaUpdatedEvent> locationAreaUpdatedEvent) {
    this.locationAreaUpdatedEvent = locationAreaUpdatedEvent;
  }

  public EventSearchResult locationCreatedEvent(List<LocationCreatedEvent> locationCreatedEvent) {
    this.locationCreatedEvent = locationCreatedEvent;
    return this;
  }

  public EventSearchResult addLocationCreatedEventItem(LocationCreatedEvent locationCreatedEventItem) {
    if (this.locationCreatedEvent == null) {
      this.locationCreatedEvent = new ArrayList<LocationCreatedEvent>();
    }
    this.locationCreatedEvent.add(locationCreatedEventItem);
    return this;
  }

   /**
   * Location created event
   * @return locationCreatedEvent
  **/
  @ApiModelProperty(value = "Location created event")
  public List<LocationCreatedEvent> getLocationCreatedEvent() {
    return locationCreatedEvent;
  }

  public void setLocationCreatedEvent(List<LocationCreatedEvent> locationCreatedEvent) {
    this.locationCreatedEvent = locationCreatedEvent;
  }

  public EventSearchResult locationDeletedEvent(List<LocationDeletedEvent> locationDeletedEvent) {
    this.locationDeletedEvent = locationDeletedEvent;
    return this;
  }

  public EventSearchResult addLocationDeletedEventItem(LocationDeletedEvent locationDeletedEventItem) {
    if (this.locationDeletedEvent == null) {
      this.locationDeletedEvent = new ArrayList<LocationDeletedEvent>();
    }
    this.locationDeletedEvent.add(locationDeletedEventItem);
    return this;
  }

   /**
   * Location deleted event
   * @return locationDeletedEvent
  **/
  @ApiModelProperty(value = "Location deleted event")
  public List<LocationDeletedEvent> getLocationDeletedEvent() {
    return locationDeletedEvent;
  }

  public void setLocationDeletedEvent(List<LocationDeletedEvent> locationDeletedEvent) {
    this.locationDeletedEvent = locationDeletedEvent;
  }

  public EventSearchResult storeServiceChargeUpdatedEvent(List<StoreServiceChargeUpdatedEvent> storeServiceChargeUpdatedEvent) {
    this.storeServiceChargeUpdatedEvent = storeServiceChargeUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreServiceChargeUpdatedEventItem(StoreServiceChargeUpdatedEvent storeServiceChargeUpdatedEventItem) {
    if (this.storeServiceChargeUpdatedEvent == null) {
      this.storeServiceChargeUpdatedEvent = new ArrayList<StoreServiceChargeUpdatedEvent>();
    }
    this.storeServiceChargeUpdatedEvent.add(storeServiceChargeUpdatedEventItem);
    return this;
  }

   /**
   * Service Charge Updated Event
   * @return storeServiceChargeUpdatedEvent
  **/
  @ApiModelProperty(value = "Service Charge Updated Event")
  public List<StoreServiceChargeUpdatedEvent> getStoreServiceChargeUpdatedEvent() {
    return storeServiceChargeUpdatedEvent;
  }

  public void setStoreServiceChargeUpdatedEvent(List<StoreServiceChargeUpdatedEvent> storeServiceChargeUpdatedEvent) {
    this.storeServiceChargeUpdatedEvent = storeServiceChargeUpdatedEvent;
  }

  public EventSearchResult mobileAppsSubmissionStatusUpdatedEvent(List<MobileAppsSubmissionStatusUpdatedEvent> mobileAppsSubmissionStatusUpdatedEvent) {
    this.mobileAppsSubmissionStatusUpdatedEvent = mobileAppsSubmissionStatusUpdatedEvent;
    return this;
  }

  public EventSearchResult addMobileAppsSubmissionStatusUpdatedEventItem(MobileAppsSubmissionStatusUpdatedEvent mobileAppsSubmissionStatusUpdatedEventItem) {
    if (this.mobileAppsSubmissionStatusUpdatedEvent == null) {
      this.mobileAppsSubmissionStatusUpdatedEvent = new ArrayList<MobileAppsSubmissionStatusUpdatedEvent>();
    }
    this.mobileAppsSubmissionStatusUpdatedEvent.add(mobileAppsSubmissionStatusUpdatedEventItem);
    return this;
  }

   /**
   * Mobile Submission Status Updated Event
   * @return mobileAppsSubmissionStatusUpdatedEvent
  **/
  @ApiModelProperty(value = "Mobile Submission Status Updated Event")
  public List<MobileAppsSubmissionStatusUpdatedEvent> getMobileAppsSubmissionStatusUpdatedEvent() {
    return mobileAppsSubmissionStatusUpdatedEvent;
  }

  public void setMobileAppsSubmissionStatusUpdatedEvent(List<MobileAppsSubmissionStatusUpdatedEvent> mobileAppsSubmissionStatusUpdatedEvent) {
    this.mobileAppsSubmissionStatusUpdatedEvent = mobileAppsSubmissionStatusUpdatedEvent;
  }

  public EventSearchResult mobileAppsSubmissionUpdatedEvent(List<MobileAppsSubmissionUpdatedEvent> mobileAppsSubmissionUpdatedEvent) {
    this.mobileAppsSubmissionUpdatedEvent = mobileAppsSubmissionUpdatedEvent;
    return this;
  }

  public EventSearchResult addMobileAppsSubmissionUpdatedEventItem(MobileAppsSubmissionUpdatedEvent mobileAppsSubmissionUpdatedEventItem) {
    if (this.mobileAppsSubmissionUpdatedEvent == null) {
      this.mobileAppsSubmissionUpdatedEvent = new ArrayList<MobileAppsSubmissionUpdatedEvent>();
    }
    this.mobileAppsSubmissionUpdatedEvent.add(mobileAppsSubmissionUpdatedEventItem);
    return this;
  }

   /**
   * Mobile Submission Updated Event
   * @return mobileAppsSubmissionUpdatedEvent
  **/
  @ApiModelProperty(value = "Mobile Submission Updated Event")
  public List<MobileAppsSubmissionUpdatedEvent> getMobileAppsSubmissionUpdatedEvent() {
    return mobileAppsSubmissionUpdatedEvent;
  }

  public void setMobileAppsSubmissionUpdatedEvent(List<MobileAppsSubmissionUpdatedEvent> mobileAppsSubmissionUpdatedEvent) {
    this.mobileAppsSubmissionUpdatedEvent = mobileAppsSubmissionUpdatedEvent;
  }

  public EventSearchResult storeFeeConfigUpdatedEvent(List<StoreFeeConfigUpdatedEvent> storeFeeConfigUpdatedEvent) {
    this.storeFeeConfigUpdatedEvent = storeFeeConfigUpdatedEvent;
    return this;
  }

  public EventSearchResult addStoreFeeConfigUpdatedEventItem(StoreFeeConfigUpdatedEvent storeFeeConfigUpdatedEventItem) {
    if (this.storeFeeConfigUpdatedEvent == null) {
      this.storeFeeConfigUpdatedEvent = new ArrayList<StoreFeeConfigUpdatedEvent>();
    }
    this.storeFeeConfigUpdatedEvent.add(storeFeeConfigUpdatedEventItem);
    return this;
  }

   /**
   * Store Fee Config Updated Event
   * @return storeFeeConfigUpdatedEvent
  **/
  @ApiModelProperty(value = "Store Fee Config Updated Event")
  public List<StoreFeeConfigUpdatedEvent> getStoreFeeConfigUpdatedEvent() {
    return storeFeeConfigUpdatedEvent;
  }

  public void setStoreFeeConfigUpdatedEvent(List<StoreFeeConfigUpdatedEvent> storeFeeConfigUpdatedEvent) {
    this.storeFeeConfigUpdatedEvent = storeFeeConfigUpdatedEvent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventSearchResult eventSearchResult = (EventSearchResult) o;
    return Objects.equals(this.appCreatedEvent, eventSearchResult.appCreatedEvent) &&
        Objects.equals(this.appUpdatedEvent, eventSearchResult.appUpdatedEvent) &&
        Objects.equals(this.analyticsClientEvent, eventSearchResult.analyticsClientEvent) &&
        Objects.equals(this.orderAcceptedEvent, eventSearchResult.orderAcceptedEvent) &&
        Objects.equals(this.orderDispatchedEvent, eventSearchResult.orderDispatchedEvent) &&
        Objects.equals(this.orderCustomerTrackingCreatedEvent, eventSearchResult.orderCustomerTrackingCreatedEvent) &&
        Objects.equals(this.orderDeliveryTrackingStatusUpdatedEvent, eventSearchResult.orderDeliveryTrackingStatusUpdatedEvent) &&
        Objects.equals(this.orderBatchPublishedEvent, eventSearchResult.orderBatchPublishedEvent) &&
        Objects.equals(this.orderCreatedEvent, eventSearchResult.orderCreatedEvent) &&
        Objects.equals(this.orderRatingUpdatedEvent, eventSearchResult.orderRatingUpdatedEvent) &&
        Objects.equals(this.orderRefundedEvent, eventSearchResult.orderRefundedEvent) &&
        Objects.equals(this.orderRejectedEvent, eventSearchResult.orderRejectedEvent) &&
        Objects.equals(this.orderTipUpdatedEvent, eventSearchResult.orderTipUpdatedEvent) &&
        Objects.equals(this.orderTerminalNotifications, eventSearchResult.orderTerminalNotifications) &&
        Objects.equals(this.storeCreatedEvent, eventSearchResult.storeCreatedEvent) &&
        Objects.equals(this.storeDeletedEvent, eventSearchResult.storeDeletedEvent) &&
        Objects.equals(this.storeAddressUpdatedEvent, eventSearchResult.storeAddressUpdatedEvent) &&
        Objects.equals(this.storeKioskSettingUpdatedEvent, eventSearchResult.storeKioskSettingUpdatedEvent) &&
        Objects.equals(this.deliveryZoneCreatedEvent, eventSearchResult.deliveryZoneCreatedEvent) &&
        Objects.equals(this.deliveryZoneUpdatedEvent, eventSearchResult.deliveryZoneUpdatedEvent) &&
        Objects.equals(this.deliveryZoneDeletedEvent, eventSearchResult.deliveryZoneDeletedEvent) &&
        Objects.equals(this.storeOpeningHoursUpdatedEvent, eventSearchResult.storeOpeningHoursUpdatedEvent) &&
        Objects.equals(this.storeMenuAssignedEvent, eventSearchResult.storeMenuAssignedEvent) &&
        Objects.equals(this.storeBusinessHoursOverrideCreatedEvent, eventSearchResult.storeBusinessHoursOverrideCreatedEvent) &&
        Objects.equals(this.storeBusinessHoursOverrideDeletedEvent, eventSearchResult.storeBusinessHoursOverrideDeletedEvent) &&
        Objects.equals(this.storeArchivedEvent, eventSearchResult.storeArchivedEvent) &&
        Objects.equals(this.storeUnarchivedEvent, eventSearchResult.storeUnarchivedEvent) &&
        Objects.equals(this.storePublishedEvent, eventSearchResult.storePublishedEvent) &&
        Objects.equals(this.storeUnpublishedEvent, eventSearchResult.storeUnpublishedEvent) &&
        Objects.equals(this.storeUpdatedEvent, eventSearchResult.storeUpdatedEvent) &&
        Objects.equals(this.storePreOrderConfigUpdatedEvent, eventSearchResult.storePreOrderConfigUpdatedEvent) &&
        Objects.equals(this.storeLogoCreatedEvent, eventSearchResult.storeLogoCreatedEvent) &&
        Objects.equals(this.storeLogoUpdatedEvent, eventSearchResult.storeLogoUpdatedEvent) &&
        Objects.equals(this.storeLogoDeletedEvent, eventSearchResult.storeLogoDeletedEvent) &&
        Objects.equals(this.menuCreatedEvent, eventSearchResult.menuCreatedEvent) &&
        Objects.equals(this.menuUpdatedEvent, eventSearchResult.menuUpdatedEvent) &&
        Objects.equals(this.menuUploadedEvent, eventSearchResult.menuUploadedEvent) &&
        Objects.equals(this.menuBulkEditEvent, eventSearchResult.menuBulkEditEvent) &&
        Objects.equals(this.menuSectionCreatedEvent, eventSearchResult.menuSectionCreatedEvent) &&
        Objects.equals(this.menuSectionUpdatedEvent, eventSearchResult.menuSectionUpdatedEvent) &&
        Objects.equals(this.menuSectionDeletedEvent, eventSearchResult.menuSectionDeletedEvent) &&
        Objects.equals(this.menuSectionItemCreatedEvent, eventSearchResult.menuSectionItemCreatedEvent) &&
        Objects.equals(this.menuSectionItemUpdatedEvent, eventSearchResult.menuSectionItemUpdatedEvent) &&
        Objects.equals(this.menuSectionItemDeletedEvent, eventSearchResult.menuSectionItemDeletedEvent) &&
        Objects.equals(this.menuItemOptionSetCreatedEvent, eventSearchResult.menuItemOptionSetCreatedEvent) &&
        Objects.equals(this.menuItemOptionSetUpdatedEvent, eventSearchResult.menuItemOptionSetUpdatedEvent) &&
        Objects.equals(this.menuItemOptionSetDeletedEvent, eventSearchResult.menuItemOptionSetDeletedEvent) &&
        Objects.equals(this.menuItemOptionSetItemCreatedEvent, eventSearchResult.menuItemOptionSetItemCreatedEvent) &&
        Objects.equals(this.menuItemOptionSetItemUpdatedEvent, eventSearchResult.menuItemOptionSetItemUpdatedEvent) &&
        Objects.equals(this.menuItemOptionSetItemDeletedEvent, eventSearchResult.menuItemOptionSetItemDeletedEvent) &&
        Objects.equals(this.menuCheckpointCreatedEvent, eventSearchResult.menuCheckpointCreatedEvent) &&
        Objects.equals(this.storeGroupCreatedEvent, eventSearchResult.storeGroupCreatedEvent) &&
        Objects.equals(this.storeGroupUpdatedEvent, eventSearchResult.storeGroupUpdatedEvent) &&
        Objects.equals(this.storeGroupDeletedEvent, eventSearchResult.storeGroupDeletedEvent) &&
        Objects.equals(this.customerCreatedEvent, eventSearchResult.customerCreatedEvent) &&
        Objects.equals(this.customerUpdatedEvent, eventSearchResult.customerUpdatedEvent) &&
        Objects.equals(this.customerConsentUpdatedEvent, eventSearchResult.customerConsentUpdatedEvent) &&
        Objects.equals(this.webhookSubscriptionCreatedEvent, eventSearchResult.webhookSubscriptionCreatedEvent) &&
        Objects.equals(this.webhookSubscriptionUpdatedEvent, eventSearchResult.webhookSubscriptionUpdatedEvent) &&
        Objects.equals(this.webhookSubscriptionDeletedEvent, eventSearchResult.webhookSubscriptionDeletedEvent) &&
        Objects.equals(this.printerTurnedOnEvent, eventSearchResult.printerTurnedOnEvent) &&
        Objects.equals(this.printerTurnedOffEvent, eventSearchResult.printerTurnedOffEvent) &&
        Objects.equals(this.printerAssignedToStoreEvent, eventSearchResult.printerAssignedToStoreEvent) &&
        Objects.equals(this.printerUnassignedFromStoreEvent, eventSearchResult.printerUnassignedFromStoreEvent) &&
        Objects.equals(this.phoneCallStartedEvent, eventSearchResult.phoneCallStartedEvent) &&
        Objects.equals(this.phoneCallEndedEvent, eventSearchResult.phoneCallEndedEvent) &&
        Objects.equals(this.loyaltyCampaignCreatedEvent, eventSearchResult.loyaltyCampaignCreatedEvent) &&
        Objects.equals(this.loyaltyCampaignDeletedEvent, eventSearchResult.loyaltyCampaignDeletedEvent) &&
        Objects.equals(this.loyaltyCampaignUpdatedEvent, eventSearchResult.loyaltyCampaignUpdatedEvent) &&
        Objects.equals(this.retentionCampaignCreatedEvent, eventSearchResult.retentionCampaignCreatedEvent) &&
        Objects.equals(this.retentionCampaignDeletedEvent, eventSearchResult.retentionCampaignDeletedEvent) &&
        Objects.equals(this.retentionCampaignUpdatedEvent, eventSearchResult.retentionCampaignUpdatedEvent) &&
        Objects.equals(this.smsReceivedEvent, eventSearchResult.smsReceivedEvent) &&
        Objects.equals(this.userLoginEvent, eventSearchResult.userLoginEvent) &&
        Objects.equals(this.userCreatedEvent, eventSearchResult.userCreatedEvent) &&
        Objects.equals(this.userUpdatedEvent, eventSearchResult.userUpdatedEvent) &&
        Objects.equals(this.userDeletedEvent, eventSearchResult.userDeletedEvent) &&
        Objects.equals(this.userCreatedPasswordEvent, eventSearchResult.userCreatedPasswordEvent) &&
        Objects.equals(this.userAnsweredSignupQuestionsEvent, eventSearchResult.userAnsweredSignupQuestionsEvent) &&
        Objects.equals(this.voucherCreatedEvent, eventSearchResult.voucherCreatedEvent) &&
        Objects.equals(this.voucherUpdatedEvent, eventSearchResult.voucherUpdatedEvent) &&
        Objects.equals(this.voucherDeletedEvent, eventSearchResult.voucherDeletedEvent) &&
        Objects.equals(this.teammateInviteSentEvent, eventSearchResult.teammateInviteSentEvent) &&
        Objects.equals(this.teammateInviteAcceptedEvent, eventSearchResult.teammateInviteAcceptedEvent) &&
        Objects.equals(this.teammateUpdatedEvent, eventSearchResult.teammateUpdatedEvent) &&
        Objects.equals(this.teammateDeletedEvent, eventSearchResult.teammateDeletedEvent) &&
        Objects.equals(this.bankAccountCreatedEvent, eventSearchResult.bankAccountCreatedEvent) &&
        Objects.equals(this.bankAccountUpdatedEvent, eventSearchResult.bankAccountUpdatedEvent) &&
        Objects.equals(this.bankAccountDeletedEvent, eventSearchResult.bankAccountDeletedEvent) &&
        Objects.equals(this.bankAccountAssignedEvent, eventSearchResult.bankAccountAssignedEvent) &&
        Objects.equals(this.hydraAssignedEvent, eventSearchResult.hydraAssignedEvent) &&
        Objects.equals(this.hydraRequestResetEvent, eventSearchResult.hydraRequestResetEvent) &&
        Objects.equals(this.hydraStoreAssignedEvent, eventSearchResult.hydraStoreAssignedEvent) &&
        Objects.equals(this.hydraStoreUnassignedEvent, eventSearchResult.hydraStoreUnassignedEvent) &&
        Objects.equals(this.hydraSettingChangedEvent, eventSearchResult.hydraSettingChangedEvent) &&
        Objects.equals(this.hydraUnAssignedEvent, eventSearchResult.hydraUnAssignedEvent) &&
        Objects.equals(this.hydraConnectionStatusChangedEvent, eventSearchResult.hydraConnectionStatusChangedEvent) &&
        Objects.equals(this.kioskBluetoothPairingModeEvent, eventSearchResult.kioskBluetoothPairingModeEvent) &&
        Objects.equals(this.kioskBluetoothUnpairingModeEvent, eventSearchResult.kioskBluetoothUnpairingModeEvent) &&
        Objects.equals(this.kioskBluetoothTerminalUnpairedEvent, eventSearchResult.kioskBluetoothTerminalUnpairedEvent) &&
        Objects.equals(this.kioskTerminalActionStateChangedEvent, eventSearchResult.kioskTerminalActionStateChangedEvent) &&
        Objects.equals(this.kioskBluetoothTerminalUpdatedEvent, eventSearchResult.kioskBluetoothTerminalUpdatedEvent) &&
        Objects.equals(this.kioskBluetoothTerminalInitiateUpdateCheckEvent, eventSearchResult.kioskBluetoothTerminalInitiateUpdateCheckEvent) &&
        Objects.equals(this.kioskBluetoothInstallUpdateInitiateEvent, eventSearchResult.kioskBluetoothInstallUpdateInitiateEvent) &&
        Objects.equals(this.kioskBluetoothTerminalCancelUpdateEvent, eventSearchResult.kioskBluetoothTerminalCancelUpdateEvent) &&
        Objects.equals(this.kioskBluetoothTerminalFirmwareVersionStatusEvent, eventSearchResult.kioskBluetoothTerminalFirmwareVersionStatusEvent) &&
        Objects.equals(this.kioskBluetoothTerminalInstallationStatusEvent, eventSearchResult.kioskBluetoothTerminalInstallationStatusEvent) &&
        Objects.equals(this.pushNotificationScheduledEvent, eventSearchResult.pushNotificationScheduledEvent) &&
        Objects.equals(this.pushNotificationSentEvent, eventSearchResult.pushNotificationSentEvent) &&
        Objects.equals(this.pushNotificationDeletedEvent, eventSearchResult.pushNotificationDeletedEvent) &&
        Objects.equals(this.dnsVerifiedEvent, eventSearchResult.dnsVerifiedEvent) &&
        Objects.equals(this.certificateCreatedEvent, eventSearchResult.certificateCreatedEvent) &&
        Objects.equals(this.certificateRenewedEvent, eventSearchResult.certificateRenewedEvent) &&
        Objects.equals(this.websiteVanityUrlUpdatedEvent, eventSearchResult.websiteVanityUrlUpdatedEvent) &&
        Objects.equals(this.websiteUpdatedEvent, eventSearchResult.websiteUpdatedEvent) &&
        Objects.equals(this.orderCapacityUpdatedEvent, eventSearchResult.orderCapacityUpdatedEvent) &&
        Objects.equals(this.externalStoreEvent, eventSearchResult.externalStoreEvent) &&
        Objects.equals(this.orderFulfillmentStatusUpdatedEvent, eventSearchResult.orderFulfillmentStatusUpdatedEvent) &&
        Objects.equals(this.appStoreConfigCreatedEvent, eventSearchResult.appStoreConfigCreatedEvent) &&
        Objects.equals(this.appStoreConfigUpdatedEvent, eventSearchResult.appStoreConfigUpdatedEvent) &&
        Objects.equals(this.appStoreConfigDeletedEvent, eventSearchResult.appStoreConfigDeletedEvent) &&
        Objects.equals(this.catalogItemCreatedEvent, eventSearchResult.catalogItemCreatedEvent) &&
        Objects.equals(this.catalogItemUpdatedEvent, eventSearchResult.catalogItemUpdatedEvent) &&
        Objects.equals(this.catalogItemArchivedEvent, eventSearchResult.catalogItemArchivedEvent) &&
        Objects.equals(this.catalogGroupCreatedEvent, eventSearchResult.catalogGroupCreatedEvent) &&
        Objects.equals(this.catalogGroupUpdatedEvent, eventSearchResult.catalogGroupUpdatedEvent) &&
        Objects.equals(this.catalogGroupArchivedEvent, eventSearchResult.catalogGroupArchivedEvent) &&
        Objects.equals(this.storeTipUpdatedEvent, eventSearchResult.storeTipUpdatedEvent) &&
        Objects.equals(this.locationAreaCreatedEvent, eventSearchResult.locationAreaCreatedEvent) &&
        Objects.equals(this.locationAreaUpdatedEvent, eventSearchResult.locationAreaUpdatedEvent) &&
        Objects.equals(this.locationCreatedEvent, eventSearchResult.locationCreatedEvent) &&
        Objects.equals(this.locationDeletedEvent, eventSearchResult.locationDeletedEvent) &&
        Objects.equals(this.storeServiceChargeUpdatedEvent, eventSearchResult.storeServiceChargeUpdatedEvent) &&
        Objects.equals(this.mobileAppsSubmissionStatusUpdatedEvent, eventSearchResult.mobileAppsSubmissionStatusUpdatedEvent) &&
        Objects.equals(this.mobileAppsSubmissionUpdatedEvent, eventSearchResult.mobileAppsSubmissionUpdatedEvent) &&
        Objects.equals(this.storeFeeConfigUpdatedEvent, eventSearchResult.storeFeeConfigUpdatedEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appCreatedEvent, appUpdatedEvent, analyticsClientEvent, orderAcceptedEvent, orderDispatchedEvent, orderCustomerTrackingCreatedEvent, orderDeliveryTrackingStatusUpdatedEvent, orderBatchPublishedEvent, orderCreatedEvent, orderRatingUpdatedEvent, orderRefundedEvent, orderRejectedEvent, orderTipUpdatedEvent, orderTerminalNotifications, storeCreatedEvent, storeDeletedEvent, storeAddressUpdatedEvent, storeKioskSettingUpdatedEvent, deliveryZoneCreatedEvent, deliveryZoneUpdatedEvent, deliveryZoneDeletedEvent, storeOpeningHoursUpdatedEvent, storeMenuAssignedEvent, storeBusinessHoursOverrideCreatedEvent, storeBusinessHoursOverrideDeletedEvent, storeArchivedEvent, storeUnarchivedEvent, storePublishedEvent, storeUnpublishedEvent, storeUpdatedEvent, storePreOrderConfigUpdatedEvent, storeLogoCreatedEvent, storeLogoUpdatedEvent, storeLogoDeletedEvent, menuCreatedEvent, menuUpdatedEvent, menuUploadedEvent, menuBulkEditEvent, menuSectionCreatedEvent, menuSectionUpdatedEvent, menuSectionDeletedEvent, menuSectionItemCreatedEvent, menuSectionItemUpdatedEvent, menuSectionItemDeletedEvent, menuItemOptionSetCreatedEvent, menuItemOptionSetUpdatedEvent, menuItemOptionSetDeletedEvent, menuItemOptionSetItemCreatedEvent, menuItemOptionSetItemUpdatedEvent, menuItemOptionSetItemDeletedEvent, menuCheckpointCreatedEvent, storeGroupCreatedEvent, storeGroupUpdatedEvent, storeGroupDeletedEvent, customerCreatedEvent, customerUpdatedEvent, customerConsentUpdatedEvent, webhookSubscriptionCreatedEvent, webhookSubscriptionUpdatedEvent, webhookSubscriptionDeletedEvent, printerTurnedOnEvent, printerTurnedOffEvent, printerAssignedToStoreEvent, printerUnassignedFromStoreEvent, phoneCallStartedEvent, phoneCallEndedEvent, loyaltyCampaignCreatedEvent, loyaltyCampaignDeletedEvent, loyaltyCampaignUpdatedEvent, retentionCampaignCreatedEvent, retentionCampaignDeletedEvent, retentionCampaignUpdatedEvent, smsReceivedEvent, userLoginEvent, userCreatedEvent, userUpdatedEvent, userDeletedEvent, userCreatedPasswordEvent, userAnsweredSignupQuestionsEvent, voucherCreatedEvent, voucherUpdatedEvent, voucherDeletedEvent, teammateInviteSentEvent, teammateInviteAcceptedEvent, teammateUpdatedEvent, teammateDeletedEvent, bankAccountCreatedEvent, bankAccountUpdatedEvent, bankAccountDeletedEvent, bankAccountAssignedEvent, hydraAssignedEvent, hydraRequestResetEvent, hydraStoreAssignedEvent, hydraStoreUnassignedEvent, hydraSettingChangedEvent, hydraUnAssignedEvent, hydraConnectionStatusChangedEvent, kioskBluetoothPairingModeEvent, kioskBluetoothUnpairingModeEvent, kioskBluetoothTerminalUnpairedEvent, kioskTerminalActionStateChangedEvent, kioskBluetoothTerminalUpdatedEvent, kioskBluetoothTerminalInitiateUpdateCheckEvent, kioskBluetoothInstallUpdateInitiateEvent, kioskBluetoothTerminalCancelUpdateEvent, kioskBluetoothTerminalFirmwareVersionStatusEvent, kioskBluetoothTerminalInstallationStatusEvent, pushNotificationScheduledEvent, pushNotificationSentEvent, pushNotificationDeletedEvent, dnsVerifiedEvent, certificateCreatedEvent, certificateRenewedEvent, websiteVanityUrlUpdatedEvent, websiteUpdatedEvent, orderCapacityUpdatedEvent, externalStoreEvent, orderFulfillmentStatusUpdatedEvent, appStoreConfigCreatedEvent, appStoreConfigUpdatedEvent, appStoreConfigDeletedEvent, catalogItemCreatedEvent, catalogItemUpdatedEvent, catalogItemArchivedEvent, catalogGroupCreatedEvent, catalogGroupUpdatedEvent, catalogGroupArchivedEvent, storeTipUpdatedEvent, locationAreaCreatedEvent, locationAreaUpdatedEvent, locationCreatedEvent, locationDeletedEvent, storeServiceChargeUpdatedEvent, mobileAppsSubmissionStatusUpdatedEvent, mobileAppsSubmissionUpdatedEvent, storeFeeConfigUpdatedEvent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventSearchResult {\n");
    
    sb.append("    appCreatedEvent: ").append(toIndentedString(appCreatedEvent)).append("\n");
    sb.append("    appUpdatedEvent: ").append(toIndentedString(appUpdatedEvent)).append("\n");
    sb.append("    analyticsClientEvent: ").append(toIndentedString(analyticsClientEvent)).append("\n");
    sb.append("    orderAcceptedEvent: ").append(toIndentedString(orderAcceptedEvent)).append("\n");
    sb.append("    orderDispatchedEvent: ").append(toIndentedString(orderDispatchedEvent)).append("\n");
    sb.append("    orderCustomerTrackingCreatedEvent: ").append(toIndentedString(orderCustomerTrackingCreatedEvent)).append("\n");
    sb.append("    orderDeliveryTrackingStatusUpdatedEvent: ").append(toIndentedString(orderDeliveryTrackingStatusUpdatedEvent)).append("\n");
    sb.append("    orderBatchPublishedEvent: ").append(toIndentedString(orderBatchPublishedEvent)).append("\n");
    sb.append("    orderCreatedEvent: ").append(toIndentedString(orderCreatedEvent)).append("\n");
    sb.append("    orderRatingUpdatedEvent: ").append(toIndentedString(orderRatingUpdatedEvent)).append("\n");
    sb.append("    orderRefundedEvent: ").append(toIndentedString(orderRefundedEvent)).append("\n");
    sb.append("    orderRejectedEvent: ").append(toIndentedString(orderRejectedEvent)).append("\n");
    sb.append("    orderTipUpdatedEvent: ").append(toIndentedString(orderTipUpdatedEvent)).append("\n");
    sb.append("    orderTerminalNotifications: ").append(toIndentedString(orderTerminalNotifications)).append("\n");
    sb.append("    storeCreatedEvent: ").append(toIndentedString(storeCreatedEvent)).append("\n");
    sb.append("    storeDeletedEvent: ").append(toIndentedString(storeDeletedEvent)).append("\n");
    sb.append("    storeAddressUpdatedEvent: ").append(toIndentedString(storeAddressUpdatedEvent)).append("\n");
    sb.append("    storeKioskSettingUpdatedEvent: ").append(toIndentedString(storeKioskSettingUpdatedEvent)).append("\n");
    sb.append("    deliveryZoneCreatedEvent: ").append(toIndentedString(deliveryZoneCreatedEvent)).append("\n");
    sb.append("    deliveryZoneUpdatedEvent: ").append(toIndentedString(deliveryZoneUpdatedEvent)).append("\n");
    sb.append("    deliveryZoneDeletedEvent: ").append(toIndentedString(deliveryZoneDeletedEvent)).append("\n");
    sb.append("    storeOpeningHoursUpdatedEvent: ").append(toIndentedString(storeOpeningHoursUpdatedEvent)).append("\n");
    sb.append("    storeMenuAssignedEvent: ").append(toIndentedString(storeMenuAssignedEvent)).append("\n");
    sb.append("    storeBusinessHoursOverrideCreatedEvent: ").append(toIndentedString(storeBusinessHoursOverrideCreatedEvent)).append("\n");
    sb.append("    storeBusinessHoursOverrideDeletedEvent: ").append(toIndentedString(storeBusinessHoursOverrideDeletedEvent)).append("\n");
    sb.append("    storeArchivedEvent: ").append(toIndentedString(storeArchivedEvent)).append("\n");
    sb.append("    storeUnarchivedEvent: ").append(toIndentedString(storeUnarchivedEvent)).append("\n");
    sb.append("    storePublishedEvent: ").append(toIndentedString(storePublishedEvent)).append("\n");
    sb.append("    storeUnpublishedEvent: ").append(toIndentedString(storeUnpublishedEvent)).append("\n");
    sb.append("    storeUpdatedEvent: ").append(toIndentedString(storeUpdatedEvent)).append("\n");
    sb.append("    storePreOrderConfigUpdatedEvent: ").append(toIndentedString(storePreOrderConfigUpdatedEvent)).append("\n");
    sb.append("    storeLogoCreatedEvent: ").append(toIndentedString(storeLogoCreatedEvent)).append("\n");
    sb.append("    storeLogoUpdatedEvent: ").append(toIndentedString(storeLogoUpdatedEvent)).append("\n");
    sb.append("    storeLogoDeletedEvent: ").append(toIndentedString(storeLogoDeletedEvent)).append("\n");
    sb.append("    menuCreatedEvent: ").append(toIndentedString(menuCreatedEvent)).append("\n");
    sb.append("    menuUpdatedEvent: ").append(toIndentedString(menuUpdatedEvent)).append("\n");
    sb.append("    menuUploadedEvent: ").append(toIndentedString(menuUploadedEvent)).append("\n");
    sb.append("    menuBulkEditEvent: ").append(toIndentedString(menuBulkEditEvent)).append("\n");
    sb.append("    menuSectionCreatedEvent: ").append(toIndentedString(menuSectionCreatedEvent)).append("\n");
    sb.append("    menuSectionUpdatedEvent: ").append(toIndentedString(menuSectionUpdatedEvent)).append("\n");
    sb.append("    menuSectionDeletedEvent: ").append(toIndentedString(menuSectionDeletedEvent)).append("\n");
    sb.append("    menuSectionItemCreatedEvent: ").append(toIndentedString(menuSectionItemCreatedEvent)).append("\n");
    sb.append("    menuSectionItemUpdatedEvent: ").append(toIndentedString(menuSectionItemUpdatedEvent)).append("\n");
    sb.append("    menuSectionItemDeletedEvent: ").append(toIndentedString(menuSectionItemDeletedEvent)).append("\n");
    sb.append("    menuItemOptionSetCreatedEvent: ").append(toIndentedString(menuItemOptionSetCreatedEvent)).append("\n");
    sb.append("    menuItemOptionSetUpdatedEvent: ").append(toIndentedString(menuItemOptionSetUpdatedEvent)).append("\n");
    sb.append("    menuItemOptionSetDeletedEvent: ").append(toIndentedString(menuItemOptionSetDeletedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemCreatedEvent: ").append(toIndentedString(menuItemOptionSetItemCreatedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemUpdatedEvent: ").append(toIndentedString(menuItemOptionSetItemUpdatedEvent)).append("\n");
    sb.append("    menuItemOptionSetItemDeletedEvent: ").append(toIndentedString(menuItemOptionSetItemDeletedEvent)).append("\n");
    sb.append("    menuCheckpointCreatedEvent: ").append(toIndentedString(menuCheckpointCreatedEvent)).append("\n");
    sb.append("    storeGroupCreatedEvent: ").append(toIndentedString(storeGroupCreatedEvent)).append("\n");
    sb.append("    storeGroupUpdatedEvent: ").append(toIndentedString(storeGroupUpdatedEvent)).append("\n");
    sb.append("    storeGroupDeletedEvent: ").append(toIndentedString(storeGroupDeletedEvent)).append("\n");
    sb.append("    customerCreatedEvent: ").append(toIndentedString(customerCreatedEvent)).append("\n");
    sb.append("    customerUpdatedEvent: ").append(toIndentedString(customerUpdatedEvent)).append("\n");
    sb.append("    customerConsentUpdatedEvent: ").append(toIndentedString(customerConsentUpdatedEvent)).append("\n");
    sb.append("    webhookSubscriptionCreatedEvent: ").append(toIndentedString(webhookSubscriptionCreatedEvent)).append("\n");
    sb.append("    webhookSubscriptionUpdatedEvent: ").append(toIndentedString(webhookSubscriptionUpdatedEvent)).append("\n");
    sb.append("    webhookSubscriptionDeletedEvent: ").append(toIndentedString(webhookSubscriptionDeletedEvent)).append("\n");
    sb.append("    printerTurnedOnEvent: ").append(toIndentedString(printerTurnedOnEvent)).append("\n");
    sb.append("    printerTurnedOffEvent: ").append(toIndentedString(printerTurnedOffEvent)).append("\n");
    sb.append("    printerAssignedToStoreEvent: ").append(toIndentedString(printerAssignedToStoreEvent)).append("\n");
    sb.append("    printerUnassignedFromStoreEvent: ").append(toIndentedString(printerUnassignedFromStoreEvent)).append("\n");
    sb.append("    phoneCallStartedEvent: ").append(toIndentedString(phoneCallStartedEvent)).append("\n");
    sb.append("    phoneCallEndedEvent: ").append(toIndentedString(phoneCallEndedEvent)).append("\n");
    sb.append("    loyaltyCampaignCreatedEvent: ").append(toIndentedString(loyaltyCampaignCreatedEvent)).append("\n");
    sb.append("    loyaltyCampaignDeletedEvent: ").append(toIndentedString(loyaltyCampaignDeletedEvent)).append("\n");
    sb.append("    loyaltyCampaignUpdatedEvent: ").append(toIndentedString(loyaltyCampaignUpdatedEvent)).append("\n");
    sb.append("    retentionCampaignCreatedEvent: ").append(toIndentedString(retentionCampaignCreatedEvent)).append("\n");
    sb.append("    retentionCampaignDeletedEvent: ").append(toIndentedString(retentionCampaignDeletedEvent)).append("\n");
    sb.append("    retentionCampaignUpdatedEvent: ").append(toIndentedString(retentionCampaignUpdatedEvent)).append("\n");
    sb.append("    smsReceivedEvent: ").append(toIndentedString(smsReceivedEvent)).append("\n");
    sb.append("    userLoginEvent: ").append(toIndentedString(userLoginEvent)).append("\n");
    sb.append("    userCreatedEvent: ").append(toIndentedString(userCreatedEvent)).append("\n");
    sb.append("    userUpdatedEvent: ").append(toIndentedString(userUpdatedEvent)).append("\n");
    sb.append("    userDeletedEvent: ").append(toIndentedString(userDeletedEvent)).append("\n");
    sb.append("    userCreatedPasswordEvent: ").append(toIndentedString(userCreatedPasswordEvent)).append("\n");
    sb.append("    userAnsweredSignupQuestionsEvent: ").append(toIndentedString(userAnsweredSignupQuestionsEvent)).append("\n");
    sb.append("    voucherCreatedEvent: ").append(toIndentedString(voucherCreatedEvent)).append("\n");
    sb.append("    voucherUpdatedEvent: ").append(toIndentedString(voucherUpdatedEvent)).append("\n");
    sb.append("    voucherDeletedEvent: ").append(toIndentedString(voucherDeletedEvent)).append("\n");
    sb.append("    teammateInviteSentEvent: ").append(toIndentedString(teammateInviteSentEvent)).append("\n");
    sb.append("    teammateInviteAcceptedEvent: ").append(toIndentedString(teammateInviteAcceptedEvent)).append("\n");
    sb.append("    teammateUpdatedEvent: ").append(toIndentedString(teammateUpdatedEvent)).append("\n");
    sb.append("    teammateDeletedEvent: ").append(toIndentedString(teammateDeletedEvent)).append("\n");
    sb.append("    bankAccountCreatedEvent: ").append(toIndentedString(bankAccountCreatedEvent)).append("\n");
    sb.append("    bankAccountUpdatedEvent: ").append(toIndentedString(bankAccountUpdatedEvent)).append("\n");
    sb.append("    bankAccountDeletedEvent: ").append(toIndentedString(bankAccountDeletedEvent)).append("\n");
    sb.append("    bankAccountAssignedEvent: ").append(toIndentedString(bankAccountAssignedEvent)).append("\n");
    sb.append("    hydraAssignedEvent: ").append(toIndentedString(hydraAssignedEvent)).append("\n");
    sb.append("    hydraRequestResetEvent: ").append(toIndentedString(hydraRequestResetEvent)).append("\n");
    sb.append("    hydraStoreAssignedEvent: ").append(toIndentedString(hydraStoreAssignedEvent)).append("\n");
    sb.append("    hydraStoreUnassignedEvent: ").append(toIndentedString(hydraStoreUnassignedEvent)).append("\n");
    sb.append("    hydraSettingChangedEvent: ").append(toIndentedString(hydraSettingChangedEvent)).append("\n");
    sb.append("    hydraUnAssignedEvent: ").append(toIndentedString(hydraUnAssignedEvent)).append("\n");
    sb.append("    hydraConnectionStatusChangedEvent: ").append(toIndentedString(hydraConnectionStatusChangedEvent)).append("\n");
    sb.append("    kioskBluetoothPairingModeEvent: ").append(toIndentedString(kioskBluetoothPairingModeEvent)).append("\n");
    sb.append("    kioskBluetoothUnpairingModeEvent: ").append(toIndentedString(kioskBluetoothUnpairingModeEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalUnpairedEvent: ").append(toIndentedString(kioskBluetoothTerminalUnpairedEvent)).append("\n");
    sb.append("    kioskTerminalActionStateChangedEvent: ").append(toIndentedString(kioskTerminalActionStateChangedEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalUpdatedEvent: ").append(toIndentedString(kioskBluetoothTerminalUpdatedEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalInitiateUpdateCheckEvent: ").append(toIndentedString(kioskBluetoothTerminalInitiateUpdateCheckEvent)).append("\n");
    sb.append("    kioskBluetoothInstallUpdateInitiateEvent: ").append(toIndentedString(kioskBluetoothInstallUpdateInitiateEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalCancelUpdateEvent: ").append(toIndentedString(kioskBluetoothTerminalCancelUpdateEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalFirmwareVersionStatusEvent: ").append(toIndentedString(kioskBluetoothTerminalFirmwareVersionStatusEvent)).append("\n");
    sb.append("    kioskBluetoothTerminalInstallationStatusEvent: ").append(toIndentedString(kioskBluetoothTerminalInstallationStatusEvent)).append("\n");
    sb.append("    pushNotificationScheduledEvent: ").append(toIndentedString(pushNotificationScheduledEvent)).append("\n");
    sb.append("    pushNotificationSentEvent: ").append(toIndentedString(pushNotificationSentEvent)).append("\n");
    sb.append("    pushNotificationDeletedEvent: ").append(toIndentedString(pushNotificationDeletedEvent)).append("\n");
    sb.append("    dnsVerifiedEvent: ").append(toIndentedString(dnsVerifiedEvent)).append("\n");
    sb.append("    certificateCreatedEvent: ").append(toIndentedString(certificateCreatedEvent)).append("\n");
    sb.append("    certificateRenewedEvent: ").append(toIndentedString(certificateRenewedEvent)).append("\n");
    sb.append("    websiteVanityUrlUpdatedEvent: ").append(toIndentedString(websiteVanityUrlUpdatedEvent)).append("\n");
    sb.append("    websiteUpdatedEvent: ").append(toIndentedString(websiteUpdatedEvent)).append("\n");
    sb.append("    orderCapacityUpdatedEvent: ").append(toIndentedString(orderCapacityUpdatedEvent)).append("\n");
    sb.append("    externalStoreEvent: ").append(toIndentedString(externalStoreEvent)).append("\n");
    sb.append("    orderFulfillmentStatusUpdatedEvent: ").append(toIndentedString(orderFulfillmentStatusUpdatedEvent)).append("\n");
    sb.append("    appStoreConfigCreatedEvent: ").append(toIndentedString(appStoreConfigCreatedEvent)).append("\n");
    sb.append("    appStoreConfigUpdatedEvent: ").append(toIndentedString(appStoreConfigUpdatedEvent)).append("\n");
    sb.append("    appStoreConfigDeletedEvent: ").append(toIndentedString(appStoreConfigDeletedEvent)).append("\n");
    sb.append("    catalogItemCreatedEvent: ").append(toIndentedString(catalogItemCreatedEvent)).append("\n");
    sb.append("    catalogItemUpdatedEvent: ").append(toIndentedString(catalogItemUpdatedEvent)).append("\n");
    sb.append("    catalogItemArchivedEvent: ").append(toIndentedString(catalogItemArchivedEvent)).append("\n");
    sb.append("    catalogGroupCreatedEvent: ").append(toIndentedString(catalogGroupCreatedEvent)).append("\n");
    sb.append("    catalogGroupUpdatedEvent: ").append(toIndentedString(catalogGroupUpdatedEvent)).append("\n");
    sb.append("    catalogGroupArchivedEvent: ").append(toIndentedString(catalogGroupArchivedEvent)).append("\n");
    sb.append("    storeTipUpdatedEvent: ").append(toIndentedString(storeTipUpdatedEvent)).append("\n");
    sb.append("    locationAreaCreatedEvent: ").append(toIndentedString(locationAreaCreatedEvent)).append("\n");
    sb.append("    locationAreaUpdatedEvent: ").append(toIndentedString(locationAreaUpdatedEvent)).append("\n");
    sb.append("    locationCreatedEvent: ").append(toIndentedString(locationCreatedEvent)).append("\n");
    sb.append("    locationDeletedEvent: ").append(toIndentedString(locationDeletedEvent)).append("\n");
    sb.append("    storeServiceChargeUpdatedEvent: ").append(toIndentedString(storeServiceChargeUpdatedEvent)).append("\n");
    sb.append("    mobileAppsSubmissionStatusUpdatedEvent: ").append(toIndentedString(mobileAppsSubmissionStatusUpdatedEvent)).append("\n");
    sb.append("    mobileAppsSubmissionUpdatedEvent: ").append(toIndentedString(mobileAppsSubmissionUpdatedEvent)).append("\n");
    sb.append("    storeFeeConfigUpdatedEvent: ").append(toIndentedString(storeFeeConfigUpdatedEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

