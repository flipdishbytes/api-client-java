/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Payment Account information
 */
@ApiModel(description = "Payment Account information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-15T07:07:02.534Z")
public class PaymentAccount {
  @SerializedName("UserId")
  private Integer userId = null;

  @SerializedName("PaymentAccountId")
  private Integer paymentAccountId = null;

  @SerializedName("CanRemoveFromCustomerView")
  private Boolean canRemoveFromCustomerView = null;

  @SerializedName("Bin")
  private String bin = null;

  @SerializedName("IsDefaultPaymentMethod")
  private Boolean isDefaultPaymentMethod = null;

  @SerializedName("IsVisibleToCustomer")
  private Boolean isVisibleToCustomer = null;

  @SerializedName("PaymentAccountType")
  private String paymentAccountType = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("CustomerId")
  private String customerId = null;

  public PaymentAccount userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The user ID associated with the payment account.
   * @return userId
  **/
  @ApiModelProperty(value = "The user ID associated with the payment account.")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public PaymentAccount paymentAccountId(Integer paymentAccountId) {
    this.paymentAccountId = paymentAccountId;
    return this;
  }

   /**
   * Unique identifier for the payment account.
   * @return paymentAccountId
  **/
  @ApiModelProperty(value = "Unique identifier for the payment account.")
  public Integer getPaymentAccountId() {
    return paymentAccountId;
  }

  public void setPaymentAccountId(Integer paymentAccountId) {
    this.paymentAccountId = paymentAccountId;
  }

  public PaymentAccount canRemoveFromCustomerView(Boolean canRemoveFromCustomerView) {
    this.canRemoveFromCustomerView = canRemoveFromCustomerView;
    return this;
  }

   /**
   * Indicates if the payment account can be removed from the customer view.
   * @return canRemoveFromCustomerView
  **/
  @ApiModelProperty(value = "Indicates if the payment account can be removed from the customer view.")
  public Boolean isCanRemoveFromCustomerView() {
    return canRemoveFromCustomerView;
  }

  public void setCanRemoveFromCustomerView(Boolean canRemoveFromCustomerView) {
    this.canRemoveFromCustomerView = canRemoveFromCustomerView;
  }

  public PaymentAccount bin(String bin) {
    this.bin = bin;
    return this;
  }

   /**
   * Bank Identification Number (BIN) of the payment method.
   * @return bin
  **/
  @ApiModelProperty(value = "Bank Identification Number (BIN) of the payment method.")
  public String getBin() {
    return bin;
  }

  public void setBin(String bin) {
    this.bin = bin;
  }

  public PaymentAccount isDefaultPaymentMethod(Boolean isDefaultPaymentMethod) {
    this.isDefaultPaymentMethod = isDefaultPaymentMethod;
    return this;
  }

   /**
   * Indicates if this is the default payment method.
   * @return isDefaultPaymentMethod
  **/
  @ApiModelProperty(value = "Indicates if this is the default payment method.")
  public Boolean isIsDefaultPaymentMethod() {
    return isDefaultPaymentMethod;
  }

  public void setIsDefaultPaymentMethod(Boolean isDefaultPaymentMethod) {
    this.isDefaultPaymentMethod = isDefaultPaymentMethod;
  }

  public PaymentAccount isVisibleToCustomer(Boolean isVisibleToCustomer) {
    this.isVisibleToCustomer = isVisibleToCustomer;
    return this;
  }

   /**
   * Indicates if the payment account is visible to the customer.
   * @return isVisibleToCustomer
  **/
  @ApiModelProperty(value = "Indicates if the payment account is visible to the customer.")
  public Boolean isIsVisibleToCustomer() {
    return isVisibleToCustomer;
  }

  public void setIsVisibleToCustomer(Boolean isVisibleToCustomer) {
    this.isVisibleToCustomer = isVisibleToCustomer;
  }

  public PaymentAccount paymentAccountType(String paymentAccountType) {
    this.paymentAccountType = paymentAccountType;
    return this;
  }

   /**
   * The type of payment account (e.g., card, PayPal).
   * @return paymentAccountType
  **/
  @ApiModelProperty(value = "The type of payment account (e.g., card, PayPal).")
  public String getPaymentAccountType() {
    return paymentAccountType;
  }

  public void setPaymentAccountType(String paymentAccountType) {
    this.paymentAccountType = paymentAccountType;
  }

  public PaymentAccount description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the payment account.
   * @return description
  **/
  @ApiModelProperty(value = "Description of the payment account.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PaymentAccount customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * The customer ID associated with the payment account.
   * @return customerId
  **/
  @ApiModelProperty(value = "The customer ID associated with the payment account.")
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentAccount paymentAccount = (PaymentAccount) o;
    return Objects.equals(this.userId, paymentAccount.userId) &&
        Objects.equals(this.paymentAccountId, paymentAccount.paymentAccountId) &&
        Objects.equals(this.canRemoveFromCustomerView, paymentAccount.canRemoveFromCustomerView) &&
        Objects.equals(this.bin, paymentAccount.bin) &&
        Objects.equals(this.isDefaultPaymentMethod, paymentAccount.isDefaultPaymentMethod) &&
        Objects.equals(this.isVisibleToCustomer, paymentAccount.isVisibleToCustomer) &&
        Objects.equals(this.paymentAccountType, paymentAccount.paymentAccountType) &&
        Objects.equals(this.description, paymentAccount.description) &&
        Objects.equals(this.customerId, paymentAccount.customerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, paymentAccountId, canRemoveFromCustomerView, bin, isDefaultPaymentMethod, isVisibleToCustomer, paymentAccountType, description, customerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentAccount {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    paymentAccountId: ").append(toIndentedString(paymentAccountId)).append("\n");
    sb.append("    canRemoveFromCustomerView: ").append(toIndentedString(canRemoveFromCustomerView)).append("\n");
    sb.append("    bin: ").append(toIndentedString(bin)).append("\n");
    sb.append("    isDefaultPaymentMethod: ").append(toIndentedString(isDefaultPaymentMethod)).append("\n");
    sb.append("    isVisibleToCustomer: ").append(toIndentedString(isVisibleToCustomer)).append("\n");
    sb.append("    paymentAccountType: ").append(toIndentedString(paymentAccountType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

