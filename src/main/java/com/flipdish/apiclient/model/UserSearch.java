/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.flipdish.apiclient.model.UserWhiteLabelConfig;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * User Search Result
 */
@ApiModel(description = "User Search Result")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-21T12:33:23.306Z")
public class UserSearch {
  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("PhoneNumber")
  private String phoneNumber = null;

  @SerializedName("Email")
  private String email = null;

  @SerializedName("CustomerName")
  private String customerName = null;

  @SerializedName("HasLoggedIn")
  private Boolean hasLoggedIn = null;

  /**
   * User Discriminator
   */
  @JsonAdapter(UserDiscriminatorEnum.Adapter.class)
  public enum UserDiscriminatorEnum {
    ALL("All"),
    
    APPLICATIONUSERS("ApplicationUsers"),
    
    RESTAURANTUSERS("RestaurantUsers"),
    
    HYDRAUSERS("HydraUsers");

    private String value;

    UserDiscriminatorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static UserDiscriminatorEnum fromValue(String text) {
      for (UserDiscriminatorEnum b : UserDiscriminatorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<UserDiscriminatorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserDiscriminatorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserDiscriminatorEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UserDiscriminatorEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("UserDiscriminator")
  private UserDiscriminatorEnum userDiscriminator = null;

  @SerializedName("TsCreate")
  private OffsetDateTime tsCreate = null;

  @SerializedName("WhiteLabelConfigs")
  private List<UserWhiteLabelConfig> whiteLabelConfigs = null;

  @SerializedName("UserType")
  private String userType = null;

  public UserSearch id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * User Id
   * @return id
  **/
  @ApiModelProperty(value = "User Id")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UserSearch phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Phone Number
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Phone Number")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public UserSearch email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @ApiModelProperty(value = "Email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserSearch customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

   /**
   * Customer Name
   * @return customerName
  **/
  @ApiModelProperty(value = "Customer Name")
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }

  public UserSearch hasLoggedIn(Boolean hasLoggedIn) {
    this.hasLoggedIn = hasLoggedIn;
    return this;
  }

   /**
   * Has Logged In
   * @return hasLoggedIn
  **/
  @ApiModelProperty(value = "Has Logged In")
  public Boolean isHasLoggedIn() {
    return hasLoggedIn;
  }

  public void setHasLoggedIn(Boolean hasLoggedIn) {
    this.hasLoggedIn = hasLoggedIn;
  }

  public UserSearch userDiscriminator(UserDiscriminatorEnum userDiscriminator) {
    this.userDiscriminator = userDiscriminator;
    return this;
  }

   /**
   * User Discriminator
   * @return userDiscriminator
  **/
  @ApiModelProperty(value = "User Discriminator")
  public UserDiscriminatorEnum getUserDiscriminator() {
    return userDiscriminator;
  }

  public void setUserDiscriminator(UserDiscriminatorEnum userDiscriminator) {
    this.userDiscriminator = userDiscriminator;
  }

  public UserSearch tsCreate(OffsetDateTime tsCreate) {
    this.tsCreate = tsCreate;
    return this;
  }

   /**
   * Timestamp Created
   * @return tsCreate
  **/
  @ApiModelProperty(value = "Timestamp Created")
  public OffsetDateTime getTsCreate() {
    return tsCreate;
  }

  public void setTsCreate(OffsetDateTime tsCreate) {
    this.tsCreate = tsCreate;
  }

  public UserSearch whiteLabelConfigs(List<UserWhiteLabelConfig> whiteLabelConfigs) {
    this.whiteLabelConfigs = whiteLabelConfigs;
    return this;
  }

  public UserSearch addWhiteLabelConfigsItem(UserWhiteLabelConfig whiteLabelConfigsItem) {
    if (this.whiteLabelConfigs == null) {
      this.whiteLabelConfigs = new ArrayList<UserWhiteLabelConfig>();
    }
    this.whiteLabelConfigs.add(whiteLabelConfigsItem);
    return this;
  }

   /**
   * WhiteLabel Configs
   * @return whiteLabelConfigs
  **/
  @ApiModelProperty(value = "WhiteLabel Configs")
  public List<UserWhiteLabelConfig> getWhiteLabelConfigs() {
    return whiteLabelConfigs;
  }

  public void setWhiteLabelConfigs(List<UserWhiteLabelConfig> whiteLabelConfigs) {
    this.whiteLabelConfigs = whiteLabelConfigs;
  }

   /**
   * User Type
   * @return userType
  **/
  @ApiModelProperty(value = "User Type")
  public String getUserType() {
    return userType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSearch userSearch = (UserSearch) o;
    return Objects.equals(this.id, userSearch.id) &&
        Objects.equals(this.phoneNumber, userSearch.phoneNumber) &&
        Objects.equals(this.email, userSearch.email) &&
        Objects.equals(this.customerName, userSearch.customerName) &&
        Objects.equals(this.hasLoggedIn, userSearch.hasLoggedIn) &&
        Objects.equals(this.userDiscriminator, userSearch.userDiscriminator) &&
        Objects.equals(this.tsCreate, userSearch.tsCreate) &&
        Objects.equals(this.whiteLabelConfigs, userSearch.whiteLabelConfigs) &&
        Objects.equals(this.userType, userSearch.userType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, phoneNumber, email, customerName, hasLoggedIn, userDiscriminator, tsCreate, whiteLabelConfigs, userType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSearch {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    hasLoggedIn: ").append(toIndentedString(hasLoggedIn)).append("\n");
    sb.append("    userDiscriminator: ").append(toIndentedString(userDiscriminator)).append("\n");
    sb.append("    tsCreate: ").append(toIndentedString(tsCreate)).append("\n");
    sb.append("    whiteLabelConfigs: ").append(toIndentedString(whiteLabelConfigs)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

