/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SmsProviderCredential
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-09-02T15:28:26.212Z")
public class SmsProviderCredential {
  @SerializedName("OrgId")
  private String orgId = null;

  @SerializedName("BrandId")
  private String brandId = null;

  /**
   * Gets or Sets smsServiceType
   */
  @JsonAdapter(SmsServiceTypeEnum.Adapter.class)
  public enum SmsServiceTypeEnum {
    NEXMO("Nexmo"),
    
    TWILIO("Twilio"),
    
    DEFAULT("Default"),
    
    MESSAGEBIRD("MessageBird");

    private String value;

    SmsServiceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SmsServiceTypeEnum fromValue(String text) {
      for (SmsServiceTypeEnum b : SmsServiceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SmsServiceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SmsServiceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SmsServiceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SmsServiceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("SmsServiceType")
  private SmsServiceTypeEnum smsServiceType = null;

  @SerializedName("SenderId")
  private String senderId = null;

  @SerializedName("Username")
  private String username = null;

  @SerializedName("AuthToken")
  private String authToken = null;

  public SmsProviderCredential orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @ApiModelProperty(value = "")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public SmsProviderCredential brandId(String brandId) {
    this.brandId = brandId;
    return this;
  }

   /**
   * Get brandId
   * @return brandId
  **/
  @ApiModelProperty(value = "")
  public String getBrandId() {
    return brandId;
  }

  public void setBrandId(String brandId) {
    this.brandId = brandId;
  }

  public SmsProviderCredential smsServiceType(SmsServiceTypeEnum smsServiceType) {
    this.smsServiceType = smsServiceType;
    return this;
  }

   /**
   * Get smsServiceType
   * @return smsServiceType
  **/
  @ApiModelProperty(value = "")
  public SmsServiceTypeEnum getSmsServiceType() {
    return smsServiceType;
  }

  public void setSmsServiceType(SmsServiceTypeEnum smsServiceType) {
    this.smsServiceType = smsServiceType;
  }

  public SmsProviderCredential senderId(String senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * Get senderId
   * @return senderId
  **/
  @ApiModelProperty(value = "")
  public String getSenderId() {
    return senderId;
  }

  public void setSenderId(String senderId) {
    this.senderId = senderId;
  }

  public SmsProviderCredential username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public SmsProviderCredential authToken(String authToken) {
    this.authToken = authToken;
    return this;
  }

   /**
   * Get authToken
   * @return authToken
  **/
  @ApiModelProperty(value = "")
  public String getAuthToken() {
    return authToken;
  }

  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmsProviderCredential smsProviderCredential = (SmsProviderCredential) o;
    return Objects.equals(this.orgId, smsProviderCredential.orgId) &&
        Objects.equals(this.brandId, smsProviderCredential.brandId) &&
        Objects.equals(this.smsServiceType, smsProviderCredential.smsServiceType) &&
        Objects.equals(this.senderId, smsProviderCredential.senderId) &&
        Objects.equals(this.username, smsProviderCredential.username) &&
        Objects.equals(this.authToken, smsProviderCredential.authToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orgId, brandId, smsServiceType, senderId, username, authToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmsProviderCredential {\n");
    
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    smsServiceType: ").append(toIndentedString(smsServiceType)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

