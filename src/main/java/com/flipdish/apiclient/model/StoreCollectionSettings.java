/*
 * Flipdish Open API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipdish.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Store Collection Settings
 */
@ApiModel(description = "Store Collection Settings")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-30T16:39:35.567Z")
public class StoreCollectionSettings {
  @SerializedName("PickupEnabled")
  private Boolean pickupEnabled = null;

  @SerializedName("MinimumPickupOrderAmount")
  private Double minimumPickupOrderAmount = null;

  @SerializedName("RequireCustomerNameForPickup")
  private Boolean requireCustomerNameForPickup = null;

  @SerializedName("CashOrdersPickupEnabled")
  private Boolean cashOrdersPickupEnabled = null;

  @SerializedName("LeadTimeMinutes")
  private Integer leadTimeMinutes = null;

  @SerializedName("EtaInPickupConfirmationSmsEnabled")
  private Boolean etaInPickupConfirmationSmsEnabled = null;

  public StoreCollectionSettings pickupEnabled(Boolean pickupEnabled) {
    this.pickupEnabled = pickupEnabled;
    return this;
  }

   /**
   * True if the store accepts pickup orders
   * @return pickupEnabled
  **/
  @ApiModelProperty(required = true, value = "True if the store accepts pickup orders")
  public Boolean isPickupEnabled() {
    return pickupEnabled;
  }

  public void setPickupEnabled(Boolean pickupEnabled) {
    this.pickupEnabled = pickupEnabled;
  }

  public StoreCollectionSettings minimumPickupOrderAmount(Double minimumPickupOrderAmount) {
    this.minimumPickupOrderAmount = minimumPickupOrderAmount;
    return this;
  }

   /**
   * Minimum pickup order amount
   * @return minimumPickupOrderAmount
  **/
  @ApiModelProperty(required = true, value = "Minimum pickup order amount")
  public Double getMinimumPickupOrderAmount() {
    return minimumPickupOrderAmount;
  }

  public void setMinimumPickupOrderAmount(Double minimumPickupOrderAmount) {
    this.minimumPickupOrderAmount = minimumPickupOrderAmount;
  }

  public StoreCollectionSettings requireCustomerNameForPickup(Boolean requireCustomerNameForPickup) {
    this.requireCustomerNameForPickup = requireCustomerNameForPickup;
    return this;
  }

   /**
   * True if customer name required for pickup orders
   * @return requireCustomerNameForPickup
  **/
  @ApiModelProperty(required = true, value = "True if customer name required for pickup orders")
  public Boolean isRequireCustomerNameForPickup() {
    return requireCustomerNameForPickup;
  }

  public void setRequireCustomerNameForPickup(Boolean requireCustomerNameForPickup) {
    this.requireCustomerNameForPickup = requireCustomerNameForPickup;
  }

  public StoreCollectionSettings cashOrdersPickupEnabled(Boolean cashOrdersPickupEnabled) {
    this.cashOrdersPickupEnabled = cashOrdersPickupEnabled;
    return this;
  }

   /**
   * True if the store accepts cash payment for pickup orders
   * @return cashOrdersPickupEnabled
  **/
  @ApiModelProperty(required = true, value = "True if the store accepts cash payment for pickup orders")
  public Boolean isCashOrdersPickupEnabled() {
    return cashOrdersPickupEnabled;
  }

  public void setCashOrdersPickupEnabled(Boolean cashOrdersPickupEnabled) {
    this.cashOrdersPickupEnabled = cashOrdersPickupEnabled;
  }

  public StoreCollectionSettings leadTimeMinutes(Integer leadTimeMinutes) {
    this.leadTimeMinutes = leadTimeMinutes;
    return this;
  }

   /**
   * Auto accept lead time for collection orders
   * @return leadTimeMinutes
  **/
  @ApiModelProperty(required = true, value = "Auto accept lead time for collection orders")
  public Integer getLeadTimeMinutes() {
    return leadTimeMinutes;
  }

  public void setLeadTimeMinutes(Integer leadTimeMinutes) {
    this.leadTimeMinutes = leadTimeMinutes;
  }

  public StoreCollectionSettings etaInPickupConfirmationSmsEnabled(Boolean etaInPickupConfirmationSmsEnabled) {
    this.etaInPickupConfirmationSmsEnabled = etaInPickupConfirmationSmsEnabled;
    return this;
  }

   /**
   * True if order confirmation sms includes estimated time when order will be ready for collection
   * @return etaInPickupConfirmationSmsEnabled
  **/
  @ApiModelProperty(required = true, value = "True if order confirmation sms includes estimated time when order will be ready for collection")
  public Boolean isEtaInPickupConfirmationSmsEnabled() {
    return etaInPickupConfirmationSmsEnabled;
  }

  public void setEtaInPickupConfirmationSmsEnabled(Boolean etaInPickupConfirmationSmsEnabled) {
    this.etaInPickupConfirmationSmsEnabled = etaInPickupConfirmationSmsEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreCollectionSettings storeCollectionSettings = (StoreCollectionSettings) o;
    return Objects.equals(this.pickupEnabled, storeCollectionSettings.pickupEnabled) &&
        Objects.equals(this.minimumPickupOrderAmount, storeCollectionSettings.minimumPickupOrderAmount) &&
        Objects.equals(this.requireCustomerNameForPickup, storeCollectionSettings.requireCustomerNameForPickup) &&
        Objects.equals(this.cashOrdersPickupEnabled, storeCollectionSettings.cashOrdersPickupEnabled) &&
        Objects.equals(this.leadTimeMinutes, storeCollectionSettings.leadTimeMinutes) &&
        Objects.equals(this.etaInPickupConfirmationSmsEnabled, storeCollectionSettings.etaInPickupConfirmationSmsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pickupEnabled, minimumPickupOrderAmount, requireCustomerNameForPickup, cashOrdersPickupEnabled, leadTimeMinutes, etaInPickupConfirmationSmsEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreCollectionSettings {\n");
    
    sb.append("    pickupEnabled: ").append(toIndentedString(pickupEnabled)).append("\n");
    sb.append("    minimumPickupOrderAmount: ").append(toIndentedString(minimumPickupOrderAmount)).append("\n");
    sb.append("    requireCustomerNameForPickup: ").append(toIndentedString(requireCustomerNameForPickup)).append("\n");
    sb.append("    cashOrdersPickupEnabled: ").append(toIndentedString(cashOrdersPickupEnabled)).append("\n");
    sb.append("    leadTimeMinutes: ").append(toIndentedString(leadTimeMinutes)).append("\n");
    sb.append("    etaInPickupConfirmationSmsEnabled: ").append(toIndentedString(etaInPickupConfirmationSmsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

